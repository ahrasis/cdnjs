{"version":3,"sources":["webpack://Navigo/webpack/universalModuleDefinition","webpack://Navigo/./src/constants.ts","webpack://Navigo/./src/utils.ts","webpack://Navigo/./src/Q.ts","webpack://Navigo/./src/index.ts","webpack://Navigo/webpack/bootstrap","webpack://Navigo/webpack/startup","webpack://Navigo/webpack/runtime/define property getters","webpack://Navigo/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","self","this","PARAMETER_REGEXP","WILDCARD_REGEXP","clean","s","split","replace","isString","extractGETParameters","url","tmp","slice","join","parseQuery","queryString","query","pairs","i","length","pair","key","decodeURIComponent","Array","isArray","push","matchRoute","currentPath","route","pattern","current","GETParams","params","paramNames","path","full","dots","name","data","regexp","RegExp","match","names","reduce","value","index","regExpResultToParams","undefinedOrTrue","obj","Q","funcs","c","context","idx","next","splice","moveForward","Navigo","r","notFoundRoute","genericHooks","routes","destroyed","isPushStateAvailable","window","history","pushState","isWindowAvailable","lifecycle","done","_required","hooks","already","_checkForLeaveHook","before","options","handler","updatePageLinks","after","notFoundLifeCycle","notFoundHandled","currentLocationPath","if","console","warn","fields","Error","leave","_setLocationPath","location","pathname","search","hash","_findAMatch","_checkForDeprecationMethods","_checkForForceOp","force","pathToMatchObject","to","_updateBrowserURL","historyAPIMethod","stateObj","title","href","createRoute","String","resolve","call","document","querySelectorAll","forEach","link","hasListenerAttached","addEventListener","e","ctrlKey","metaKey","target","tagName","toLowerCase","getAttribute","URL","u","err","source","str","temp","map","v","parseNavigateToOptions","preventDefault","navigate","on","Object","keys","p","uses","as","off","what","filter","destroy","removeEventListener","__popstateListener","notFound","lastResolved","generate","result","getLinkPath","matchLocation","currentLocation","_pathToMatchObject","_clean","condition","one","two","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty"],"mappings":"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","file":"Navigo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","export const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nexport const WILDCARD_REGEXP = /\\*/g;\nexport const REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nexport const REPLACE_WILDCARD = \"(?:.*)\";\nexport const START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nexport const MATCH_REGEXP_FLAGS = \"\";\n","import { Match, Route, NavigateTo } from \"../index\";\n\nimport {\n  PARAMETER_REGEXP,\n  WILDCARD_REGEXP,\n  REPLACE_VARIABLE_REGEXP,\n  REPLACE_WILDCARD,\n  START_BY_SLASH_REGEXP,\n  MATCH_REGEXP_FLAGS,\n} from \"./constants\";\n\nexport function clean(s: string) {\n  return s.split(\"#\")[0].replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nexport function isString(s: any): boolean {\n  return typeof s === \"string\";\n}\nexport function isFunction(s: any): boolean {\n  return typeof s === \"function\";\n}\nexport function regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nexport function extractGETParameters(url: string) {\n  const tmp = clean(url).split(/\\?(.*)?$/);\n  return [clean(tmp[0]), tmp.slice(1).join(\"\")];\n}\nexport function parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nexport function matchRoute(currentPath: string, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(clean(currentPath));\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  let pattern;\n  if (isString(route.path)) {\n    pattern =\n      START_BY_SLASH_REGEXP +\n      clean(route.path as string)\n        .replace(PARAMETER_REGEXP, function (full, dots, name) {\n          paramNames.push(name);\n          return REPLACE_VARIABLE_REGEXP;\n        })\n        .replace(WILDCARD_REGEXP, REPLACE_WILDCARD) +\n      \"$\";\n    if (clean(route.path as string) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          route: route,\n          data: null,\n          params,\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n\n  if (match) {\n    const data = isString(route.path)\n      ? regExpResultToParams(match, paramNames)\n      : match.slice(1);\n    return {\n      url: current,\n      queryString: GETParams,\n      route: route,\n      data,\n      params,\n    };\n  }\n  return false;\n}\nexport function pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\nexport function undefinedOrTrue(obj, key: string): boolean {\n  return typeof obj[key] === \"undefined\" || obj[key] === true;\n}\nexport function parseNavigateToOptions(source?: string): NavigateTo {\n  if (!source) return {};\n  const pairs = source.split(\",\");\n  const options: NavigateTo = {};\n\n  pairs.forEach((str) => {\n    const temp = str.split(\":\").map((v) => v.replace(/(^ +| +$)/g, \"\"));\n    switch (temp[0]) {\n      case \"historyAPIMethod\":\n        options.historyAPIMethod = temp[1];\n        break;\n      case \"updateBrowserURL\":\n      case \"callHandler\":\n      case \"updateState\":\n      case \"force\":\n        options[temp[0]] = temp[1] === \"true\";\n        break;\n    }\n  });\n\n  return options;\n}\n","export default function Q(funcs: Array<Function | Array<any>>, c?: any) {\n  const context = c || {};\n  let idx = 0;\n\n  (function next() {\n    if (!funcs[idx]) return;\n    if (Array.isArray(funcs[idx])) {\n      funcs.splice(\n        idx,\n        1,\n        ...(funcs[idx][0](context) ? funcs[idx][1] : funcs[idx][2])\n      );\n      next();\n    } else {\n      // console.log(funcs[idx].name + \" \" + JSON.stringify(context));\n      (funcs[idx] as Function)(context, (moveForward) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          idx += 1;\n          next();\n        }\n      });\n    }\n  })();\n}\n\nQ.if = function (condition: Function, one, two) {\n  if (!Array.isArray(one)) one = [one];\n  if (!Array.isArray(two)) two = [two];\n  return [condition, one, two];\n};\n","import { Match, Route, RouteHooks, QContext, NavigateTo } from \"../index\";\nimport {\n  pushStateAvailable,\n  matchRoute,\n  parseQuery,\n  extractGETParameters,\n  isFunction,\n  isString,\n  clean,\n  undefinedOrTrue,\n  parseNavigateToOptions,\n} from \"./utils\";\nimport Q from \"./Q\";\n\nexport default function Navigo(r?: string) {\n  let root = \"/\";\n  let current: Match = null;\n  let routes: Route[] = [];\n  let notFoundRoute: Route;\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n  let self = this;\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = typeof window !== \"undefined\";\n  const lifecycle = [\n    _checkForAlreadyHook,\n    _checkForLeaveHook,\n    _checkForBeforeHook,\n    _callHandler,\n    _checkForAfterHook,\n  ];\n  const notFoundLifeCycle = [\n    _checkForNotFoundHandler,\n    Q.if(({ notFoundHandled }: QContext) => notFoundHandled, lifecycle, [\n      _errorOut,\n      _checkForLeaveHook,\n    ]),\n    _flushCurrent,\n  ];\n\n  if (!r) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(r);\n  }\n\n  // functions that are part of Q (queue) processing\n  function _required(obj: Object, fields: string[]) {\n    for (let i = 0; i < fields.length; i++) {\n      if (typeof obj[fields[i]] === \"undefined\") {\n        throw new Error(\n          `Navigo internal error. Required field \"${fields[i]}\" is missing in a queue context.`\n        );\n      }\n    }\n  }\n  function _checkForLeaveHook(context: QContext, done) {\n    if (current && current.route.hooks && current.route.hooks.leave) {\n      current.route.hooks.leave((moveForward: boolean) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          done();\n        }\n      }, current);\n      return;\n    }\n    done();\n  }\n  function _checkForBeforeHook(context: QContext, done) {\n    _required(context, [\"route\", \"match\"]);\n    if (context.route.hooks && context.route.hooks.before) {\n      context.route.hooks.before((moveForward: boolean) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          done();\n        }\n      }, context.match);\n    } else {\n      done();\n    }\n  }\n  function _callHandler(context: QContext, done) {\n    _required(context, [\"route\", \"match\", \"options\"]);\n    if (undefinedOrTrue(context.options, \"updateState\")) {\n      current = self.current = context.match;\n    }\n    if (undefinedOrTrue(context.options, \"callHandler\")) {\n      context.route.handler(context.match);\n    }\n    updatePageLinks();\n    done();\n  }\n  function _checkForAfterHook(context: QContext, done) {\n    _required(context, [\"route\", \"match\"]);\n    if (context.route.hooks && context.route.hooks.after) {\n      context.route.hooks.after(context.match);\n    }\n    done();\n  }\n  function _checkForAlreadyHook(context: QContext, done) {\n    _required(context, [\"route\", \"match\"]);\n    if (\n      current &&\n      current.route === context.route &&\n      current.url === context.match.url &&\n      current.queryString === context.match.queryString\n    ) {\n      if (current.route.hooks && current.route.hooks.already) {\n        current.route.hooks.already(context.match);\n      }\n      done(false);\n      return;\n    }\n    done();\n  }\n  function _checkForNotFoundHandler(context: QContext, done) {\n    _required(context, [\"currentLocationPath\"]);\n    if (notFoundRoute) {\n      context.notFoundHandled = true;\n      const [url, queryString] = extractGETParameters(\n        context.currentLocationPath\n      );\n      notFoundRoute.path = clean(url);\n      context.match = {\n        url: notFoundRoute.path,\n        queryString,\n        data: null,\n        route: notFoundRoute,\n        params: queryString !== \"\" ? parseQuery(queryString) : null,\n      };\n      context.route = notFoundRoute;\n    }\n    done();\n  }\n  function _errorOut(context: QContext, done) {\n    _required(context, [\"currentLocationPath\"]);\n    console.warn(\n      `Navigo: \"${context.currentLocationPath}\" didn't match any of the registered routes.`\n    );\n    done();\n  }\n  function _setLocationPath(context: QContext, done) {\n    if (typeof context.currentLocationPath === \"undefined\") {\n      context.currentLocationPath = getCurrentEnvURL();\n    }\n    done();\n  }\n  function _findAMatch(context: QContext, done) {\n    _required(context, [\"currentLocationPath\"]);\n    for (let i = 0; i < routes.length; i++) {\n      const route = routes[i];\n      const match: false | Match = matchRoute(\n        context.currentLocationPath,\n        route\n      );\n      if (match) {\n        context.match = match;\n        context.route = route;\n        done();\n        return;\n      }\n    }\n    done();\n  }\n  function _checkForDeprecationMethods(context: QContext, done) {\n    if (context.options) {\n      if (typeof context.options[\"shouldResolve\"] !== \"undefined\") {\n        console.warn(\n          `\"shouldResolve\" is deprecated. Please check the documentation.`\n        );\n      }\n      if (typeof context.options[\"silent\"] !== \"undefined\") {\n        console.warn(`\"silent\" is deprecated. Please check the documentation.`);\n      }\n    }\n    done();\n  }\n  function _checkForForceOp(context: QContext, done) {\n    _required(context, [\"options\"]);\n    if (context.options.force === true) {\n      self.current = current = pathToMatchObject(context.to);\n      done(false);\n    } else {\n      done();\n    }\n  }\n  function _updateBrowserURL(context: QContext, done) {\n    _required(context, [\"to\", \"options\"]);\n    if (undefinedOrTrue(context.options, \"updateBrowserURL\")) {\n      if (isPushStateAvailable) {\n        history[context.options.historyAPIMethod || \"pushState\"](\n          context.options.stateObj || {},\n          context.options.title || \"\",\n          `/${context.to}`.replace(/\\/\\//g, \"/\") // making sure that we don't have two slashes\n        );\n      } else if (isWindowAvailable) {\n        window.location.href = context.to;\n      }\n    }\n    done();\n  }\n  function _flushCurrent(context: QContext, done) {\n    current = self.current = null;\n    done();\n  }\n\n  // public APIs\n  function createRoute(\n    path: string | RegExp,\n    handler: Function,\n    hooks: RouteHooks,\n    name?: string\n  ): Route {\n    path = isString(path) ? clean(`${root}/${clean(path as string)}`) : path;\n    return {\n      name: name || String(path),\n      path,\n      handler,\n      hooks,\n    };\n  }\n  function getCurrentEnvURL(): string {\n    if (isWindowAvailable) {\n      return location.pathname + location.search + location.hash;\n    }\n    return root;\n  }\n  function on(\n    path: string | Function | Object | RegExp,\n    handler?: Function,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach((p) => {\n        if (typeof path[p] === \"function\") {\n          this.on(p, path[p]);\n        } else {\n          const { uses: handler, as: name, hooks } = path[p];\n          routes.push(createRoute(p, handler, hooks || genericHooks, name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Function;\n      path = root;\n    }\n    routes.push(\n      createRoute(path as string | RegExp, handler, hooks || genericHooks)\n    );\n    return this;\n  }\n  function resolve(currentLocationPath?: string): boolean | Match {\n    const context: QContext = {\n      currentLocationPath,\n      options: {},\n    };\n    Q(\n      [\n        _setLocationPath,\n        _findAMatch,\n        Q.if(({ match }: QContext) => match, lifecycle, notFoundLifeCycle),\n      ],\n      context\n    );\n\n    return context.match ? context.match : false;\n  }\n  function navigate(to: string, options: NavigateTo = {}): void {\n    to = `${clean(root)}/${clean(to)}`;\n    const context: QContext = { to, options, currentLocationPath: to };\n    Q(\n      [\n        _checkForDeprecationMethods,\n        _checkForForceOp,\n        _findAMatch,\n        Q.if(({ match }: QContext) => match, lifecycle, notFoundLifeCycle),\n        _updateBrowserURL,\n      ],\n      context\n    );\n  }\n  function off(what: string | RegExp | Function) {\n    this.routes = routes = routes.filter((r) => {\n      if (isString(what)) {\n        return clean(r.path as string) !== clean(what as string);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        resolve();\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    notFoundRoute = createRoute(\n      \"/\",\n      handler,\n      hooks || genericHooks,\n      \"__NOT_FOUND__\"\n    );\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (!link.hasListenerAttached) {\n        link.addEventListener(\"click\", function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          let location = link.getAttribute(\"href\");\n          if (typeof location === \"undefined\" || location === null) {\n            return false;\n          }\n          // handling absolute paths\n          if (location.match(/^(http|https)/) && typeof URL !== \"undefined\") {\n            try {\n              const u = new URL(location);\n              location = u.pathname + u.search;\n            } catch (err) {}\n          }\n          const options = parseNavigateToOptions(\n            link.getAttribute(\"data-navigo-options\")\n          );\n\n          if (!destroyed) {\n            e.preventDefault();\n            self.navigate(clean(location), options);\n          }\n        });\n        link.hasListenerAttached = true;\n      }\n    });\n    return self;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(document.querySelectorAll(\"[data-navigo]\"));\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n  function lastResolved(): Match | null {\n    return current;\n  }\n  function generate(name: string, data?: Object): string {\n    const result = routes.reduce((result, route) => {\n      let key;\n\n      if (route.name === name) {\n        result = route.path as string;\n        for (key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n      return result;\n    }, \"\");\n    return !result.match(/^\\//) ? `/${result}` : result;\n  }\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n  function pathToMatchObject(path: string): Match {\n    const [url, queryString] = extractGETParameters(clean(path));\n    const params = queryString === \"\" ? null : parseQuery(queryString);\n    const route = createRoute(url, () => {}, genericHooks, url);\n    return {\n      url,\n      queryString,\n      route,\n      data: null,\n      params: params,\n    };\n  }\n  function directMatchWithRegisteredRoutes(path: string): false | Match {\n    const context: QContext = {\n      currentLocationPath: path,\n      options: {},\n    };\n    _findAMatch(context, () => {});\n    return context.match ? context.match : false;\n  }\n  function directMatchWithLocation(\n    path: string,\n    currentLocation?: string\n  ): false | Match {\n    const context: QContext = { currentLocationPath: currentLocation };\n    _setLocationPath(context, () => {});\n    const match = matchRoute(\n      context.currentLocationPath,\n      createRoute(clean(path), () => {}, {})\n    );\n    return match ? match : false;\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n  this.current = current;\n\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this.extractGETParameters = extractGETParameters;\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this.match = directMatchWithRegisteredRoutes;\n  this.matchLocation = directMatchWithLocation;\n  this._pathToMatchObject = pathToMatchObject;\n  this._clean = clean;\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(578);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}