{"version":3,"sources":["webpack://Navigo/webpack/universalModuleDefinition","webpack://Navigo/./src/index.ts","webpack://Navigo/webpack/bootstrap","webpack://Navigo/webpack/startup","webpack://Navigo/webpack/runtime/define property getters","webpack://Navigo/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","self","this","PARAMETER_REGEXP","WILDCARD_REGEXP","clean","s","split","replace","isString","extractGETParameters","url","tmp","slice","join","parseQuery","queryString","query","pairs","i","length","pair","key","decodeURIComponent","Array","isArray","push","matchRoute","currentPath","route","pattern","current","GETParams","params","paramNames","path","full","dots","name","data","regexp","RegExp","match","names","reduce","value","index","regExpResultToParams","Navigo","r","notFoundRoute","genericHooks","routes","destroyed","isPushStateAvailable","window","history","pushState","isWindowAvailable","createRoute","handler","hooks","String","hooksAndCallHandler","callHandler","leave","updatePageLinks","after","before","shouldResolve","resolve","currentLocationPath","location","pathname","search","hash","already","console","warn","navigate","to","options","historyAPIMethod","stateObj","title","href","call","document","querySelectorAll","forEach","link","hasListenerAttached","addEventListener","e","ctrlKey","metaKey","target","tagName","toLowerCase","getAttribute","preventDefault","on","Object","keys","p","uses","as","off","what","filter","destroy","removeEventListener","__popstateListener","notFound","lastResolved","generate","result","getLinkPath","_matchRoute","_clean","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty"],"mappings":"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","file":"Navigo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nconst WILDCARD_REGEXP = /\\*/g;\nconst REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nconst REPLACE_WILDCARD = \"(?:.*)\";\nconst START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nconst MATCH_REGEXP_FLAGS = \"\";\n\nfunction clean(s: string) {\n  return s.split(\"#\")[0].replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nfunction isString(s: any): boolean {\n  return typeof s === \"string\";\n}\nfunction isFunction(s: any): boolean {\n  return typeof s === \"function\";\n}\nfunction regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nfunction extractGETParameters(url: string) {\n  const tmp = clean(url).split(/\\?(.*)?$/);\n  return [tmp[0], tmp.slice(1).join(\"\")];\n}\nfunction parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nfunction matchRoute(currentPath: string, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(clean(currentPath));\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  let pattern;\n  if (isString(route.path)) {\n    pattern =\n      START_BY_SLASH_REGEXP +\n      clean(route.path as string)\n        .replace(PARAMETER_REGEXP, function (full, dots, name) {\n          paramNames.push(name);\n          return REPLACE_VARIABLE_REGEXP;\n        })\n        .replace(WILDCARD_REGEXP, REPLACE_WILDCARD) +\n      \"$\";\n    if (clean(route.path as string) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          route: route,\n          data: null,\n          params,\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n\n  if (match) {\n    const data = isString(route.path)\n      ? regExpResultToParams(match, paramNames)\n      : match.slice(1);\n    return {\n      url: current,\n      queryString: GETParams,\n      route: route,\n      data,\n      params,\n    };\n  }\n  return false;\n}\nfunction pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\n\nexport default function Navigo(r?: string) {\n  let root = \"/\";\n  let current: Match = null;\n  let routes: Route[] = [];\n  let notFoundRoute: Route;\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = typeof window !== \"undefined\";\n\n  if (!r) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(r);\n  }\n\n  function createRoute(\n    path: string | RegExp,\n    handler: Function,\n    hooks: RouteHooks,\n    name?: string\n  ): Route {\n    path = isString(path) ? clean(`${root}/${clean(path as string)}`) : path;\n    return {\n      name: name || String(path),\n      path,\n      handler,\n      hooks,\n    };\n  }\n  function getCurrentEnvURL(): string {\n    if (isWindowAvailable) {\n      return location.pathname + location.search + location.hash;\n    }\n    return root;\n  }\n  function on(\n    path: string | Function | Object | RegExp,\n    handler?: Function,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach((p) => {\n        if (typeof path[p] === \"function\") {\n          this.on(p, path[p]);\n        } else {\n          const { uses: handler, as: name, hooks } = path[p];\n          routes.push(createRoute(p, handler, hooks || genericHooks, name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Function;\n      path = root;\n    }\n    routes.push(\n      createRoute(path as string | RegExp, handler, hooks || genericHooks)\n    );\n    return this;\n  }\n  function hooksAndCallHandler(route: Route, match: Match) {\n    const callHandler = () => {\n      if (current && current.route.hooks && current.route.hooks.leave) {\n        current.route.hooks.leave(current);\n      }\n      current = match;\n      route.handler(match);\n      updatePageLinks();\n      if (route.hooks && route.hooks.after) {\n        route.hooks.after(match);\n      }\n    };\n    if (route.hooks && route.hooks.before) {\n      route.hooks.before((shouldResolve: boolean) => {\n        if (typeof shouldResolve === \"undefined\" || shouldResolve === true) {\n          callHandler();\n        }\n      }, match);\n    } else {\n      callHandler();\n    }\n  }\n  function resolve(currentLocationPath?: string): boolean | Match {\n    if (typeof currentLocationPath === \"undefined\") {\n      currentLocationPath = getCurrentEnvURL();\n    }\n    for (let i = 0; i < routes.length; i++) {\n      const route = routes[i];\n      const match: false | Match = matchRoute(currentLocationPath, route);\n      if (match) {\n        if (\n          current &&\n          current.route === route &&\n          current.url === match.url &&\n          current.queryString === match.queryString\n        ) {\n          if (current.route.hooks && current.route.hooks.already) {\n            current.route.hooks.already(match);\n          }\n          return false;\n        }\n        hooksAndCallHandler(route, match);\n        return match;\n      }\n    }\n    if (notFoundRoute) {\n      const [url, queryString] = extractGETParameters(currentLocationPath);\n      notFoundRoute.path = clean(url);\n      hooksAndCallHandler(notFoundRoute, {\n        url: notFoundRoute.path,\n        queryString,\n        data: null,\n        route: notFoundRoute,\n        params: queryString !== \"\" ? parseQuery(queryString) : null,\n      });\n      return true;\n    }\n    console.warn(\n      `Navigo: \"${currentLocationPath}\" didn't match any of the registered routes.`\n    );\n    return false;\n  }\n  function off(what: string | RegExp | Function) {\n    this.routes = routes = routes.filter((r) => {\n      if (isString(what)) {\n        return clean(r.path as string) !== clean(what as string);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n  function navigate(to: string, options: NavigateTo = {}): void {\n    to = `${clean(root)}/${clean(to)}`;\n    if (isPushStateAvailable) {\n      history[options.historyAPIMethod || \"pushState\"](\n        options.stateObj || {},\n        options.title || \"\",\n        `/${to}`.replace(/\\/\\//g, \"/\") // making sure that we don't have two slashes\n      );\n    } else if (isWindowAvailable) {\n      window.location.href = to;\n    }\n    if (\n      typeof options.shouldResolve === \"undefined\" ||\n      options.shouldResolve === true\n    ) {\n      resolve();\n    }\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        resolve();\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    notFoundRoute = createRoute(\n      \"/\",\n      handler,\n      hooks || genericHooks,\n      \"__NOT_FOUND__\"\n    );\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (!link.hasListenerAttached) {\n        link.addEventListener(\"click\", function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          const location = link.getAttribute(\"href\");\n\n          if (!destroyed) {\n            e.preventDefault();\n            navigate(clean(location));\n          }\n        });\n        link.hasListenerAttached = true;\n      }\n    });\n    return this;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(document.querySelectorAll(\"[data-navigo]\"));\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n  function lastResolved(): Match | null {\n    return current;\n  }\n  function generate(name: string, data?: Object): string {\n    const result = routes.reduce((result, route) => {\n      let key;\n\n      if (route.name === name) {\n        result = route.path as string;\n        for (key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n      return result;\n    }, \"\");\n    return !result.match(/^\\//) ? `/${result}` : result;\n  }\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this.extractGETParameters = extractGETParameters;\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this._matchRoute = matchRoute;\n  this._clean = clean;\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(809);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}