{"version":3,"sources":["webpack://Navigo/webpack/universalModuleDefinition","webpack://Navigo/./src/constants.ts","webpack://Navigo/./src/utils.ts","webpack://Navigo/./src/index.ts","webpack://Navigo/webpack/bootstrap","webpack://Navigo/webpack/startup","webpack://Navigo/webpack/runtime/define property getters","webpack://Navigo/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","self","this","PARAMETER_REGEXP","WILDCARD_REGEXP","clean","s","split","replace","isString","extractGETParameters","url","tmp","slice","join","parseQuery","queryString","query","pairs","i","length","pair","key","decodeURIComponent","Array","isArray","push","matchRoute","currentPath","route","pattern","current","GETParams","params","paramNames","path","full","dots","name","data","regexp","RegExp","match","names","reduce","value","index","regExpResultToParams","Navigo","r","notFoundRoute","genericHooks","routes","destroyed","isPushStateAvailable","window","history","pushState","isWindowAvailable","createRoute","handler","hooks","String","hooksAndCallHandler","leaveHook","done","leave","moveForward","callHandler","updatePageLinks","after","before","resolve","currentLocationPath","location","pathname","search","hash","already","console","warn","navigate","to","options","silent","historyAPIMethod","stateObj","title","href","shouldResolve","pathToMatchObject","call","document","querySelectorAll","forEach","link","hasListenerAttached","addEventListener","e","ctrlKey","metaKey","target","tagName","toLowerCase","getAttribute","preventDefault","on","Object","keys","p","uses","as","off","what","filter","destroy","removeEventListener","__popstateListener","notFound","lastResolved","generate","result","getLinkPath","_pathToMatchObject","_matchRoute","_clean","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty"],"mappings":"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","file":"Navigo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","export const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nexport const WILDCARD_REGEXP = /\\*/g;\nexport const REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nexport const REPLACE_WILDCARD = \"(?:.*)\";\nexport const START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nexport const MATCH_REGEXP_FLAGS = \"\";\n","import {\n  PARAMETER_REGEXP,\n  WILDCARD_REGEXP,\n  REPLACE_VARIABLE_REGEXP,\n  REPLACE_WILDCARD,\n  START_BY_SLASH_REGEXP,\n  MATCH_REGEXP_FLAGS,\n} from \"./constants\";\n\nexport function clean(s: string) {\n  return s.split(\"#\")[0].replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nexport function isString(s: any): boolean {\n  return typeof s === \"string\";\n}\nexport function isFunction(s: any): boolean {\n  return typeof s === \"function\";\n}\nexport function regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nexport function extractGETParameters(url: string) {\n  const tmp = clean(url).split(/\\?(.*)?$/);\n  return [clean(tmp[0]), tmp.slice(1).join(\"\")];\n}\nexport function parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nexport function matchRoute(currentPath: string, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(clean(currentPath));\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  let pattern;\n  if (isString(route.path)) {\n    pattern =\n      START_BY_SLASH_REGEXP +\n      clean(route.path as string)\n        .replace(PARAMETER_REGEXP, function (full, dots, name) {\n          paramNames.push(name);\n          return REPLACE_VARIABLE_REGEXP;\n        })\n        .replace(WILDCARD_REGEXP, REPLACE_WILDCARD) +\n      \"$\";\n    if (clean(route.path as string) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          route: route,\n          data: null,\n          params,\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n\n  if (match) {\n    const data = isString(route.path)\n      ? regExpResultToParams(match, paramNames)\n      : match.slice(1);\n    return {\n      url: current,\n      queryString: GETParams,\n      route: route,\n      data,\n      params,\n    };\n  }\n  return false;\n}\nexport function pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\n","import {\n  pushStateAvailable,\n  matchRoute,\n  parseQuery,\n  extractGETParameters,\n  isFunction,\n  isString,\n  clean,\n} from \"./utils\";\n\nexport default function Navigo(r?: string) {\n  let root = \"/\";\n  let current: Match = null;\n  let routes: Route[] = [];\n  let notFoundRoute: Route;\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = typeof window !== \"undefined\";\n\n  if (!r) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(r);\n  }\n\n  function createRoute(\n    path: string | RegExp,\n    handler: Function,\n    hooks: RouteHooks,\n    name?: string\n  ): Route {\n    path = isString(path) ? clean(`${root}/${clean(path as string)}`) : path;\n    return {\n      name: name || String(path),\n      path,\n      handler,\n      hooks,\n    };\n  }\n  function getCurrentEnvURL(): string {\n    if (isWindowAvailable) {\n      return location.pathname + location.search + location.hash;\n    }\n    return root;\n  }\n  function on(\n    path: string | Function | Object | RegExp,\n    handler?: Function,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach((p) => {\n        if (typeof path[p] === \"function\") {\n          this.on(p, path[p]);\n        } else {\n          const { uses: handler, as: name, hooks } = path[p];\n          routes.push(createRoute(p, handler, hooks || genericHooks, name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Function;\n      path = root;\n    }\n    routes.push(\n      createRoute(path as string | RegExp, handler, hooks || genericHooks)\n    );\n    return this;\n  }\n  function hooksAndCallHandler(route: Route, match: Match) {\n    const leaveHook = (done) => {\n      if (current && current.route.hooks && current.route.hooks.leave) {\n        current.route.hooks.leave((moveForward: boolean) => {\n          if (typeof moveForward === \"undefined\" || moveForward === true) {\n            done();\n          }\n        }, current);\n        return;\n      }\n      done();\n    };\n    const callHandler = () => {\n      current = match;\n      route.handler(match);\n      updatePageLinks();\n      if (route.hooks && route.hooks.after) {\n        route.hooks.after(match);\n      }\n    };\n    if (route.hooks && route.hooks.before) {\n      route.hooks.before((moveForward: boolean) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          leaveHook(callHandler);\n        }\n      }, match);\n    } else {\n      leaveHook(callHandler);\n    }\n  }\n  function resolve(currentLocationPath?: string): boolean | Match {\n    if (typeof currentLocationPath === \"undefined\") {\n      currentLocationPath = getCurrentEnvURL();\n    }\n    for (let i = 0; i < routes.length; i++) {\n      const route = routes[i];\n      const match: false | Match = matchRoute(currentLocationPath, route);\n      if (match) {\n        if (\n          current &&\n          current.route === route &&\n          current.url === match.url &&\n          current.queryString === match.queryString\n        ) {\n          if (current.route.hooks && current.route.hooks.already) {\n            current.route.hooks.already(match);\n          }\n          return false;\n        }\n        hooksAndCallHandler(route, match);\n        return match;\n      }\n    }\n    if (notFoundRoute) {\n      const [url, queryString] = extractGETParameters(currentLocationPath);\n      notFoundRoute.path = clean(url);\n      hooksAndCallHandler(notFoundRoute, {\n        url: notFoundRoute.path,\n        queryString,\n        data: null,\n        route: notFoundRoute,\n        params: queryString !== \"\" ? parseQuery(queryString) : null,\n      });\n      return true;\n    }\n    console.warn(\n      `Navigo: \"${currentLocationPath}\" didn't match any of the registered routes.`\n    );\n    return false;\n  }\n  function off(what: string | RegExp | Function) {\n    this.routes = routes = routes.filter((r) => {\n      if (isString(what)) {\n        return clean(r.path as string) !== clean(what as string);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n  function navigate(to: string, options: NavigateTo = {}): void {\n    if (options.silent === true) {\n      this.current = current = pathToMatchObject(to);\n      return;\n    }\n    to = `${clean(root)}/${clean(to)}`;\n    if (isPushStateAvailable) {\n      history[options.historyAPIMethod || \"pushState\"](\n        options.stateObj || {},\n        options.title || \"\",\n        `/${to}`.replace(/\\/\\//g, \"/\") // making sure that we don't have two slashes\n      );\n    } else if (isWindowAvailable) {\n      window.location.href = to;\n    }\n    if (\n      typeof options.shouldResolve === \"undefined\" ||\n      options.shouldResolve === true\n    ) {\n      resolve();\n    }\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        resolve();\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    notFoundRoute = createRoute(\n      \"/\",\n      handler,\n      hooks || genericHooks,\n      \"__NOT_FOUND__\"\n    );\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (!link.hasListenerAttached) {\n        link.addEventListener(\"click\", function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          const location = link.getAttribute(\"href\");\n\n          if (!destroyed) {\n            e.preventDefault();\n            navigate(clean(location));\n          }\n        });\n        link.hasListenerAttached = true;\n      }\n    });\n    return this;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(document.querySelectorAll(\"[data-navigo]\"));\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n  function lastResolved(): Match | null {\n    return current;\n  }\n  function generate(name: string, data?: Object): string {\n    const result = routes.reduce((result, route) => {\n      let key;\n\n      if (route.name === name) {\n        result = route.path as string;\n        for (key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n      return result;\n    }, \"\");\n    return !result.match(/^\\//) ? `/${result}` : result;\n  }\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n  function pathToMatchObject(path: string): Match {\n    const [url, queryString] = extractGETParameters(clean(path));\n    const params = queryString === \"\" ? null : parseQuery(queryString);\n    const route = createRoute(url, () => {}, genericHooks, url);\n    return {\n      url,\n      queryString,\n      route,\n      data: null,\n      params: params,\n    };\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this.extractGETParameters = extractGETParameters;\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this._pathToMatchObject = pathToMatchObject;\n  this._matchRoute = matchRoute;\n  this._clean = clean;\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(330);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}