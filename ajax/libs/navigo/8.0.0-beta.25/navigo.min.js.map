{"version":3,"sources":["webpack://Navigo/webpack/universalModuleDefinition","webpack://Navigo/./src/constants.ts","webpack://Navigo/./src/utils.ts","webpack://Navigo/./src/Q.ts","webpack://Navigo/./src/index.ts","webpack://Navigo/webpack/bootstrap","webpack://Navigo/webpack/startup","webpack://Navigo/webpack/runtime/define property getters","webpack://Navigo/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","self","this","PARAMETER_REGEXP","WILDCARD_REGEXP","clean","s","split","replace","isString","extractGETParameters","url","tmp","slice","join","parseQuery","queryString","query","pairs","i","length","pair","key","decodeURIComponent","Array","isArray","push","matchRoute","currentPath","route","pattern","current","GETParams","params","paramNames","path","full","dots","name","data","regexp","RegExp","match","names","reduce","value","index","regExpResultToParams","undefinedOrTrue","obj","Q","funcs","c","context","idx","next","splice","moveForward","Navigo","r","resolveOptions","notFoundRoute","genericHooks","DEFAULT_RESOLVE_OPTIONS","strategy","routes","destroyed","isPushStateAvailable","window","history","pushState","isWindowAvailable","foundLifecycle","done","forEach","hooks","already","_checkForLeaveHook","before","navigateOptions","matches","handler","updatePageLinks","after","notFoundLifeCycle","notFoundHandled","currentLocationPath","notFoundMatch","if","console","warn","map","_","leaveLoopDone","leave","_setLocationPath","location","pathname","search","hash","_matchPathToRegisteredRoutes","_checkForDeprecationMethods","_checkForForceOp","force","pathToMatchObject","to","_updateBrowserURL","historyAPIMethod","stateObj","title","href","_processMatches","nextMatch","createRoute","String","resolve","options","call","document","querySelectorAll","link","hasListenerAttached","addEventListener","e","ctrlKey","metaKey","target","tagName","toLowerCase","getAttribute","URL","u","err","source","str","temp","v","parseNavigateOptions","preventDefault","navigate","on","Object","keys","p","uses","as","off","what","filter","destroy","removeEventListener","__popstateListener","notFound","lastResolved","generate","result","getLinkPath","matchLocation","currentLocation","_pathToMatchObject","_clean","condition","one","two","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,SAAU,GAAIH,GACK,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,IARnB,CASmB,oBAATK,KAAuBA,KAAOC,MAAM,WAC9C,M,+DCVO,IAAMC,EAAmB,eACnBC,EAAkB,MCUxB,SAASC,EAAMC,GACpB,OAAOA,EAAEC,MAAM,KAAK,GAAGC,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAEtD,SAASC,EAASH,GACvB,MAAoB,iBAANA,EAcT,SAASI,EAAqBC,GACnC,IAAMC,EAAMP,EAAMM,GAAKJ,MAAM,YAC7B,MAAO,CAACF,EAAMO,EAAI,IAAKA,EAAIC,MAAM,GAAGC,KAAK,KAEpC,SAASC,EAAWC,GAGzB,IAFA,IAAIC,EAAQ,GACRC,EAAQF,EAAYT,MAAM,KACrBY,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAOH,EAAMC,GAAGZ,MAAM,KAC1B,GAAgB,KAAZc,EAAK,GAAW,CAClB,IAAIC,EAAMC,mBAAmBF,EAAK,IAC7BJ,EAAMK,IAGJE,MAAMC,QAAQR,EAAMK,MAAOL,EAAMK,GAAO,CAACL,EAAMK,KACpDL,EAAMK,GAAKI,KAAKH,mBAAmBF,EAAK,IAAM,MAH9CJ,EAAMK,GAAOC,mBAAmBF,EAAK,IAAM,KAOjD,OAAOJ,EAEF,SAASU,EAAWC,EAAqBC,GAA6B,IAIvEC,EAJuE,EAC9CpB,EAAqBL,EAAMuB,IAAjDG,EADoE,KAC3DC,EAD2D,KAErEC,EAAuB,KAAdD,EAAmB,KAAOjB,EAAWiB,GAC9CE,EAAa,GAEnB,GAAIzB,EAASoB,EAAMM,OAUjB,GATAL,EDpDiC,WCsD/BzB,EAAMwB,EAAMM,MACT3B,QAAQL,GAAkB,SAAUiC,EAAMC,EAAMC,GAE/C,OADAJ,EAAWR,KAAKY,GD1Da,aC6D9B9B,QAAQJ,ED5De,UC6D1B,IACkC,KAAhCC,EAAMwB,EAAMM,OACS,KAAnB9B,EAAM0B,GACR,MAAO,CACLpB,IAAKoB,EACLf,YAAagB,EACbH,MAAOA,EACPU,KAAM,KACNN,eAKNH,EAAUD,EAAMM,KAElB,IAAMK,EAAS,IAAIC,OAAOX,ED1EM,IC2E1BY,EAAQX,EAAQW,MAAMF,GAE5B,QAAIE,GAIK,CACL/B,IAAKoB,EACLf,YAAagB,EACbH,MAAOA,EACPU,KAPW9B,EAASoB,EAAMM,MA/DzB,SAA8BO,EAAOC,GAC1C,OAAqB,IAAjBA,EAAMvB,OAAqB,KAC1BsB,EACEA,EAAM7B,MAAM,EAAG6B,EAAMtB,QAAQwB,QAAO,SAACX,EAAQY,EAAOC,GAGzD,OAFe,OAAXb,IAAiBA,EAAS,IAC9BA,EAAOU,EAAMG,IAAUvB,mBAAmBsB,GACnCZ,IACN,MALgB,KA8Dbc,CAAqBL,EAAOR,GAC5BQ,EAAM7B,MAAM,GAMdoB,UAYC,SAASe,EAAgBC,EAAK3B,GACnC,YAA2B,IAAb2B,EAAI3B,KAAqC,IAAb2B,EAAI3B,GCnGjC,SAAS4B,EACtBC,EACAC,GAEA,IAAMC,EAAUD,GAAK,GACjBE,EAAM,GAEV,SAAUC,IACHJ,EAAMG,KACP9B,MAAMC,QAAQ0B,EAAMG,KACtBH,EAAMK,OAAN,MAAAL,EAAK,CACHG,EACA,GAFG,OAGCH,EAAMG,GAAK,GAAGD,GAAWF,EAAMG,GAAK,GAAKH,EAAMG,GAAK,KAE1DC,KAGCJ,EAAMG,GAAkBD,GAAS,SAACI,QACN,IAAhBA,IAA+C,IAAhBA,IACxCH,GAAO,EACPC,SAdR,G,+MCSa,SAASG,EAAOC,EAAYC,GACzC,IAMIC,EAEAC,EARAC,EAA0CH,GAAkB,CAC9DI,SAAU,OAERrE,EAAO,IACPoC,EAAmB,KACnBkC,EAAkB,GAElBC,GAAY,EAEZjE,EAAOC,KACLiE,IFkEc,oBAAXC,SACPA,OAAOC,UACPD,OAAOC,QAAQC,WEnEXC,EAAsC,oBAAXH,OAC3BI,EAAiB,CAkFvB,SAA8BnB,EAAmBoB,GAC/C,GACE1C,GACAA,EAAQ,IACRA,EAAQ,GAAGF,QAAUwB,EAAQX,MAAMb,OACnCE,EAAQ,GAAGpB,MAAQ0C,EAAQX,MAAM/B,KACjCoB,EAAQ,GAAGf,cAAgBqC,EAAQX,MAAM1B,YAQzC,OANAe,EAAQ2C,SAAQ,SAACtB,GACXA,EAAEvB,MAAM8C,OAASvB,EAAEvB,MAAM8C,MAAMC,SACjCxB,EAAEvB,MAAM8C,MAAMC,QAAQvB,EAAQX,eAGlC+B,GAAK,GAGPA,KAhGAI,EAqDF,SAA6BxB,EAAmBoB,GAC1CpB,EAAQX,MAAMb,MAAM8C,OAAStB,EAAQX,MAAMb,MAAM8C,MAAMG,OACzDzB,EAAQX,MAAMb,MAAM8C,MAAMG,QAAO,SAACrB,QACL,IAAhBA,IAA+C,IAAhBA,GACxCgB,MAEDpB,EAAQX,OAEX+B,KAGJ,SAAsBpB,EAAmBoB,GACnCzB,EAAgBK,EAAQ0B,gBAAiB,iBAC3ChD,EAAU9B,EAAK8B,QAAUsB,EAAQ2B,SAE/BhC,EAAgBK,EAAQ0B,gBAAiB,gBAC3C1B,EAAQX,MAAMb,MAAMoD,QAAQ5B,EAAQX,OAEtCwC,IACAT,KAEF,SAA4BpB,EAAmBoB,GACzCpB,EAAQX,MAAMb,MAAM8C,OAAStB,EAAQX,MAAMb,MAAM8C,MAAMQ,OACzD9B,EAAQX,MAAMb,MAAM8C,MAAMQ,MAAM9B,EAAQX,OAE1C+B,MAzEIW,EAAoB,CA6F1B,SAAkC/B,EAAmBoB,GACnD,GAAIZ,EAAe,CACjBR,EAAQgC,iBAAkB,EADT,MAEU3E,EACzB2C,EAAQiC,qBADH3E,EAFU,KAELK,EAFK,KAKjB6C,EAAc1B,KAAO9B,EAAMM,GAC3B,IAAM4E,EAAuB,CAC3B5E,IAAKkD,EAAc1B,KACnBnB,cACAuB,KAAM,KACNV,MAAOgC,EACP5B,OAAwB,KAAhBjB,EAAqBD,EAAWC,GAAe,MAEzDqC,EAAQ2B,QAAU,CAACO,GACnBlC,EAAQX,MAAQ6C,EAElBd,KA5GAvB,EAAEsC,IAAG,qBAAGH,kBAAiDb,EAAgB,CA8G3E,SAAmBnB,EAAmBoB,GACpCgB,QAAQC,KAAR,YACcrC,EAAQiC,oBADtB,iDAGAb,KAhHEI,IA6KJ,SAAuBxB,EAAmBoB,GACxC1C,EAAU9B,EAAK8B,QAAU,KACzB0C,MAlKF,SAASI,EAAmBxB,EAAmBoB,KAG3C1C,GACAA,EAAQ,IACRA,EAAQ,GAAGF,QACTwB,EAAQX,OAASX,EAAQ,GAAGF,MAAMM,OAASkB,EAAQX,MAAMb,MAAMM,KAuBnEsC,IArBEvB,EAAE,GAAD,OACInB,EAAQ4D,KAAI,SAACjD,GACd,OAAO,SAACkD,EAAGC,GACLnD,EAAMb,MAAM8C,OAASjC,EAAMb,MAAM8C,MAAMmB,MACzCpD,EAAMb,MAAM8C,MAAMmB,OAAM,SAACrC,QAEE,IAAhBA,IACS,IAAhBA,GAEAoC,MAEDnD,GAEHmD,QAbP,CAiBC,kBAAMpB,QA4EZ,SAASsB,EAAiB1C,EAAmBoB,QACA,IAAhCpB,EAAQiC,sBACjBjC,EAAQiC,oBAiGNf,EACKyB,SAASC,SAAWD,SAASE,OAASF,SAASG,KAEjDxG,GAlGP8E,IAEF,SAAS2B,EAA6B/C,EAAmBoB,GACvD,IAAK,IAAItD,EAAI,EAAGA,EAAI8C,EAAO7C,OAAQD,IAAK,CACtC,IAAMU,EAAQoC,EAAO9C,GACfuB,EAAuBf,EAC3B0B,EAAQiC,oBACRzD,GAEF,GAAIa,IACGW,EAAQ2B,UAAS3B,EAAQ2B,QAAU,IACxC3B,EAAQ2B,QAAQtD,KAAKgB,GACmB,QAApCW,EAAQO,eAAeI,UAEzB,YADAS,IAKNA,IAEF,SAAS4B,EAA4BhD,EAAmBoB,GAClDpB,EAAQ0B,uBAC8C,IAA7C1B,EAAQ0B,gBAAR,eACTU,QAAQC,KAAR,uEAI+C,IAAtCrC,EAAQ0B,gBAAR,QACTU,QAAQC,KAAR,4DAGJjB,IAEF,SAAS6B,EAAiBjD,EAAmBoB,IACL,IAAlCpB,EAAQ0B,gBAAgBwB,OAC1BtG,EAAK8B,QAAUA,EAAU,CAACyE,EAAkBnD,EAAQoD,KACpDhC,GAAK,IAELA,IAGJ,SAASiC,EAAkBrD,EAAmBoB,GACxCzB,EAAgBK,EAAQ0B,gBAAiB,sBACvCZ,EACFE,QAAQhB,EAAQ0B,gBAAgB4B,kBAAoB,aAClDtD,EAAQ0B,gBAAgB6B,UAAY,GACpCvD,EAAQ0B,gBAAgB8B,OAAS,IACjC,IAAIxD,EAAQoD,IAAKjG,QAAQ,QAAS,MAE3B+D,IACTH,OAAO4B,SAASc,KAAOzD,EAAQoD,KAGnChC,IAMF,SAASsC,EAAgB1D,EAAmBoB,GAC1C,IAAInB,EAAM,GACV,SAAU0D,IACJ1D,IAAQD,EAAQ2B,QAAQ5D,OAI5B8B,EAAE,GAAD,OAEMsB,EAFN,CAGG,WACElB,GAAO,EACP0D,OALL,KAQM3D,EARN,CAQeX,MAAOW,EAAQ2B,QAAQ1B,MAXrCmB,IAFJ,GAmBF,SAASwC,EACP9E,EACA8C,EACAN,EACArC,GAGA,OADAH,EAAO1B,EAAS0B,GAAQ9B,EAASV,EAAJ,IAAYU,EAAM8B,IAAqBA,EAC7D,CACLG,KAAMA,GAAQ4E,OAAO/E,GACrBA,OACA8C,UACAN,SAkCJ,SAASwC,EACP7B,EACA8B,GAEA,IAAM/D,EAAoB,CACxBiC,sBACAP,gBAAiB,GACjBnB,eAAgBwD,GAAWrD,GAkB7B,OAhBAb,EACE,CACE6C,EACAK,EACAlD,EAAEsC,IACA,YAA2B,IAAxBR,EAAwB,EAAxBA,QAED,OAAOA,GAAWA,EAAQ5D,OAAS,IAErC2F,EACA3B,IAGJ/B,KAGKA,EAAQ2B,SAAU3B,EAAQ2B,QA+DnC,SAASE,IACP,GAAKX,EAiCL,OAGIA,EACK,GAAG1D,MAAMwG,KAAKC,SAASC,iBAAiB,kBAE1C,IAtCK7C,SAAQ,SAAC8C,GACdA,EAAKC,sBACRD,EAAKE,iBAAiB,SAAS,SAAUC,GACvC,IACGA,EAAEC,SAAWD,EAAEE,UACmB,MAAnCF,EAAEG,OAAOC,QAAQC,cAEjB,OAAO,EAET,IAAIhC,EAAWwB,EAAKS,aAAa,QACjC,GAAI,MAAOjC,EACT,OAAO,EAGT,GAAIA,EAAStD,MAAM,kBAAmC,oBAARwF,IAC5C,IACE,IAAMC,EAAI,IAAID,IAAIlC,GAClBA,EAAWmC,EAAElC,SAAWkC,EAAEjC,OAC1B,MAAOkC,IAEX,IAAMhB,EFpST,SAA8BiB,GACnC,IAAKA,EAAQ,MAAO,GACpB,IAAMnH,EAAQmH,EAAO9H,MAAM,KACrB6G,EAA2B,GAsBjC,OApBAlG,EAAMwD,SAAQ,SAAC4D,GACb,IAAMC,EAAOD,EAAI/H,MAAM,KAAKoF,KAAI,SAAC6C,GAAD,OAAOA,EAAEhI,QAAQ,aAAc,OAC/D,OAAQ+H,EAAK,IACX,IAAK,mBACHnB,EAAQT,iBAAmB4B,EAAK,GAChC,MACF,IAAK,yBACHnB,EAAQxD,eAAiB,CACvBI,SAAUuE,EAAK,IAEjB,MACF,IAAK,mBACL,IAAK,cACL,IAAK,cACL,IAAK,QACHnB,EAAQmB,EAAK,IAAkB,SAAZA,EAAK,OAKvBnB,EE2QiBqB,CACdjB,EAAKS,aAAa,wBAGf/D,IACHyD,EAAEe,iBACFzI,EAAK0I,SAAStI,EAAM2F,GAAWoB,OAGnCI,EAAKC,qBAAsB,MAGxBxH,EAmCT,SAASuG,EAAkBrE,GAAqB,MACnBzB,EAAqBL,EAAM8B,IAA/CxB,EADuC,KAClCK,EADkC,KAExCiB,EAAyB,KAAhBjB,EAAqB,KAAOD,EAAWC,GAEtD,MAAO,CACLL,MACAK,cACAa,MAJYoF,EAAYtG,GAAK,cAAUmD,EAAcnD,GAKrD4B,KAAM,KACNN,OAAQA,GApZP0B,EAKHhE,EAAOU,EAAMsD,GAJb8B,QAAQC,KACN,4FA2aJxF,KAAKP,KAAOA,EACZO,KAAK+D,OAASA,EACd/D,KAAKgE,UAAYA,EACjBhE,KAAK6B,QAAUA,EAEf7B,KAAK0I,GA7NL,SACEzG,EACA8C,EACAN,GACA,WACA,MAAoB,iBAATxC,GAAuBA,aAAgBM,QAUvB,mBAATN,IAChBwC,EAAQM,EACRA,EAAU9C,EACVA,EAAOxC,GAETsE,EAAOvC,KACLuF,EAAY9E,EAAyB8C,EAASN,GAASb,IAElD5D,OAjBL2I,OAAOC,KAAK3G,GAAMuC,SAAQ,SAACqE,GACzB,GAAuB,mBAAZ5G,EAAK4G,GACd,EAAKH,GAAGG,EAAG5G,EAAK4G,QACX,OACsC5G,EAAK4G,GAAlC9D,EADT,EACG+D,KAAmB1G,EADtB,EACkB2G,GAAUtE,EAD5B,EAC4BA,MACjCV,EAAOvC,KAAKuF,EAAY8B,EAAG9D,EAASN,GAASb,EAAcxB,QAGxDpC,OAgNXA,KAAKgJ,IAhJL,SAAaC,GASX,OARAjJ,KAAK+D,OAASA,EAASA,EAAOmF,QAAO,SAACzF,GACpC,OAAIlD,EAAS0I,GACJ9I,EAAMsD,EAAExB,QAAoB9B,EAAM8I,GFtU3B,mBEuUMA,EACbA,IAASxF,EAAEsB,QAEbiC,OAAOvD,EAAExB,QAAU+E,OAAOiC,MAE5BjJ,MAwITA,KAAKiH,QAAUA,EACfjH,KAAKyI,SA5KL,SAAkBlC,EAAY1B,GAE5B,IAAM1B,EAAoB,CACxBoD,GAFFA,EAAQpG,EAAMV,GAAZ,IAAqBU,EAAMoG,GAG3B1B,gBAAiBA,GAAmB,GACpCnB,eACEmB,GAAmBA,EAAgBnB,eAC/BmB,EAAgBnB,eAChBG,EACNuB,oBAAqBmB,GAEvBvD,EACE,CACEmD,EACAC,EACAF,EACAlD,EAAEsC,IACA,gBAAGR,EAAH,EAAGA,QAAH,OAA2BA,GAAWA,EAAQ5D,OAAS,IACvD2F,EACA3B,GAEFsB,GAEFrD,IAsJJnD,KAAKmJ,QAhIL,WACEnJ,KAAK+D,OAASA,EAAS,GACnBE,GACFC,OAAOkF,oBAAoB,WAAYpJ,KAAKqJ,oBAE9CrJ,KAAKgE,UAAYA,GAAY,GA4H/BhE,KAAKsJ,SA1HL,SAAkBvE,EAASN,GAOzB,OANAd,EAAgBoD,EACd,IACAhC,EACAN,GAASb,EACT,iBAEK5D,MAoHTA,KAAKgF,gBAAkBA,EACvBhF,KAAKsH,KAzEL,SAAcrF,GACZ,UAAWxC,EAAX,IAAmBU,EAAM8B,IAyE3BjC,KAAKyE,MAvEL,SAAyBA,GAEvB,OADAb,EAAea,EACRzE,MAsETA,KAAKQ,qBAAuBA,EAC5BR,KAAKuJ,aArEL,WACE,OAAO1H,GAqET7B,KAAKwJ,SAnEL,SAAkBpH,EAAcC,GAC9B,IAAMoH,EAAS1F,EAAOrB,QAAO,SAAC+G,EAAQ9H,GACpC,IAAIP,EAEJ,GAAIO,EAAMS,OAASA,EAEjB,IAAKhB,KADLqI,EAAS9H,EAAMM,KACHI,EACVoH,EAASA,EAAOnJ,QAAQ,IAAMc,EAAKiB,EAAKjB,IAG5C,OAAOqI,IACN,IACH,OAAQA,EAAOjH,MAAM,OAAwBiH,EAAtC,IAA2BA,GAwDpCzJ,KAAK0J,YAtDL,SAAqBpC,GACnB,OAAOA,EAAKS,aAAa,SAsD3B/H,KAAKwC,MAxCL,SAAyCP,GACvC,IAAMkB,EAAoB,CACxBiC,oBAAqBnD,EACrB4C,gBAAiB,GACjBnB,eAAgBG,GAGlB,OADAqC,EAA6B/C,GAAS,iBAC/BA,EAAQ2B,SAAU3B,EAAQ2B,SAkCnC9E,KAAK2J,cAhCL,SACE1H,EACA2H,GAEA,IAAMzG,EAAoB,CAAEiC,oBAAqBwE,GAMjD,OALA/D,EAAiB1C,GAAS,eACZ1B,EACZ0B,EAAQiC,oBACR2B,EAAY5G,EAAM8B,IAAO,cAAU,OAEd,GAuBzBjC,KAAK6J,mBAAqBvD,EAC1BtG,KAAK8J,OAAS3J,EApJd,WACM8D,IACFjE,KAAKqJ,mBAAqB,WACxBpC,KAEF/C,OAAOsD,iBAAiB,WAAYxH,KAAKqJ,sBAiJtClC,KAAKnH,MACZgF,EAAgBmC,KAAKnH,MDtdvBgD,EAAEsC,GAAK,SAAUyE,EAAqBC,EAAKC,GAGzC,OAFK3I,MAAMC,QAAQyI,KAAMA,EAAM,CAACA,IAC3B1I,MAAMC,QAAQ0I,KAAMA,EAAM,CAACA,IACzB,CAACF,EAAWC,EAAKC,MEnCtBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUzK,QAG3C,IAAIC,EAASsK,EAAyBE,GAAY,CAGjDzK,QAAS,IAOV,OAHA0K,EAAoBD,GAAUxK,EAAQA,EAAOD,QAASwK,GAG/CvK,EAAOD,QCjBf,OCFAwK,EAAoBG,EAAI,CAAC3K,EAAS4K,KACjC,IAAI,IAAInJ,KAAOmJ,EACXJ,EAAoBK,EAAED,EAAYnJ,KAAS+I,EAAoBK,EAAE7K,EAASyB,IAC5EuH,OAAO8B,eAAe9K,EAASyB,EAAK,CAAEsJ,YAAY,EAAMC,IAAKJ,EAAWnJ,MCJ3E+I,EAAoBK,EAAI,CAACzH,EAAK6H,IAASjC,OAAOkC,UAAUC,eAAe3D,KAAKpE,EAAK6H,GFG1ET,EAAoB,M","file":"Navigo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","export const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nexport const WILDCARD_REGEXP = /\\*/g;\nexport const REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nexport const REPLACE_WILDCARD = \"(?:.*)\";\nexport const START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nexport const MATCH_REGEXP_FLAGS = \"\";\n","import { Match, Route, NavigateOptions } from \"../index\";\n\nimport {\n  PARAMETER_REGEXP,\n  WILDCARD_REGEXP,\n  REPLACE_VARIABLE_REGEXP,\n  REPLACE_WILDCARD,\n  START_BY_SLASH_REGEXP,\n  MATCH_REGEXP_FLAGS,\n} from \"./constants\";\n\nexport function clean(s: string) {\n  return s.split(\"#\")[0].replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nexport function isString(s: any): boolean {\n  return typeof s === \"string\";\n}\nexport function isFunction(s: any): boolean {\n  return typeof s === \"function\";\n}\nexport function regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nexport function extractGETParameters(url: string) {\n  const tmp = clean(url).split(/\\?(.*)?$/);\n  return [clean(tmp[0]), tmp.slice(1).join(\"\")];\n}\nexport function parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nexport function matchRoute(currentPath: string, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(clean(currentPath));\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  let pattern;\n  if (isString(route.path)) {\n    pattern =\n      START_BY_SLASH_REGEXP +\n      clean(route.path as string)\n        .replace(PARAMETER_REGEXP, function (full, dots, name) {\n          paramNames.push(name);\n          return REPLACE_VARIABLE_REGEXP;\n        })\n        .replace(WILDCARD_REGEXP, REPLACE_WILDCARD) +\n      \"$\";\n    if (clean(route.path as string) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          route: route,\n          data: null,\n          params,\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n\n  if (match) {\n    const data = isString(route.path)\n      ? regExpResultToParams(match, paramNames)\n      : match.slice(1);\n    return {\n      url: current,\n      queryString: GETParams,\n      route: route,\n      data,\n      params,\n    };\n  }\n  return false;\n}\nexport function pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\nexport function undefinedOrTrue(obj, key: string): boolean {\n  return typeof obj[key] === \"undefined\" || obj[key] === true;\n}\nexport function parseNavigateOptions(source?: string): NavigateOptions {\n  if (!source) return {};\n  const pairs = source.split(\",\");\n  const options: NavigateOptions = {};\n\n  pairs.forEach((str) => {\n    const temp = str.split(\":\").map((v) => v.replace(/(^ +| +$)/g, \"\"));\n    switch (temp[0]) {\n      case \"historyAPIMethod\":\n        options.historyAPIMethod = temp[1];\n        break;\n      case \"resolveOptionsStrategy\":\n        options.resolveOptions = {\n          strategy: temp[1],\n        };\n        break;\n      case \"updateBrowserURL\":\n      case \"callHandler\":\n      case \"updateState\":\n      case \"force\":\n        options[temp[0]] = temp[1] === \"true\";\n        break;\n    }\n  });\n\n  return options;\n}\n","type QChild = {\n  type: \"child\";\n  funcs: Array<Function | Array<any> | QChild>;\n};\n\nexport default function Q(\n  funcs: Array<Function | Array<any> | QChild>,\n  c?: any\n) {\n  const context = c || {};\n  let idx = 0;\n\n  (function next() {\n    if (!funcs[idx]) return;\n    if (Array.isArray(funcs[idx])) {\n      funcs.splice(\n        idx,\n        1,\n        ...(funcs[idx][0](context) ? funcs[idx][1] : funcs[idx][2])\n      );\n      next();\n    } else {\n      // console.log(funcs[idx].name + \" / \" + JSON.stringify(context));\n      (funcs[idx] as Function)(context, (moveForward) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          idx += 1;\n          next();\n        }\n      });\n    }\n  })();\n}\n\nQ.if = function (condition: Function, one, two) {\n  if (!Array.isArray(one)) one = [one];\n  if (!Array.isArray(two)) two = [two];\n  return [condition, one, two];\n};\n","import {\n  Match,\n  Route,\n  RouteHooks,\n  QContext,\n  NavigateOptions,\n  ResolveOptions,\n} from \"../index\";\nimport {\n  pushStateAvailable,\n  matchRoute,\n  parseQuery,\n  extractGETParameters,\n  isFunction,\n  isString,\n  clean,\n  undefinedOrTrue,\n  parseNavigateOptions,\n} from \"./utils\";\nimport Q from \"./Q\";\n\nexport default function Navigo(r?: string, resolveOptions?: ResolveOptions) {\n  let DEFAULT_RESOLVE_OPTIONS: ResolveOptions = resolveOptions || {\n    strategy: \"ONE\",\n  };\n  let root = \"/\";\n  let current: Match[] = null;\n  let routes: Route[] = [];\n  let notFoundRoute: Route;\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n  let self = this;\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = typeof window !== \"undefined\";\n  const foundLifecycle = [\n    _checkForAlreadyHook,\n    _checkForLeaveHook,\n    _checkForBeforeHook,\n    _callHandler,\n    _checkForAfterHook,\n  ];\n  const notFoundLifeCycle = [\n    _checkForNotFoundHandler,\n    Q.if(({ notFoundHandled }: QContext) => notFoundHandled, foundLifecycle, [\n      _errorOut,\n      _checkForLeaveHook,\n    ]),\n    _flushCurrent,\n  ];\n\n  if (!r) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(r);\n  }\n\n  function _checkForLeaveHook(context: QContext, done) {\n    // at least one of the matched routes has a different path\n    if (\n      current &&\n      current[0] &&\n      current[0].route &&\n      (!context.match || current[0].route.path !== context.match.route.path)\n    ) {\n      Q([\n        ...current.map((match) => {\n          return (_, leaveLoopDone) => {\n            if (match.route.hooks && match.route.hooks.leave) {\n              match.route.hooks.leave((moveForward: boolean) => {\n                if (\n                  typeof moveForward === \"undefined\" ||\n                  moveForward === true\n                ) {\n                  leaveLoopDone();\n                }\n              }, match);\n            } else {\n              leaveLoopDone();\n            }\n          };\n        }),\n        () => done(),\n      ]);\n      return;\n    }\n    done();\n  }\n  function _checkForBeforeHook(context: QContext, done) {\n    if (context.match.route.hooks && context.match.route.hooks.before) {\n      context.match.route.hooks.before((moveForward: boolean) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          done();\n        }\n      }, context.match);\n    } else {\n      done();\n    }\n  }\n  function _callHandler(context: QContext, done) {\n    if (undefinedOrTrue(context.navigateOptions, \"updateState\")) {\n      current = self.current = context.matches;\n    }\n    if (undefinedOrTrue(context.navigateOptions, \"callHandler\")) {\n      context.match.route.handler(context.match);\n    }\n    updatePageLinks();\n    done();\n  }\n  function _checkForAfterHook(context: QContext, done) {\n    if (context.match.route.hooks && context.match.route.hooks.after) {\n      context.match.route.hooks.after(context.match);\n    }\n    done();\n  }\n  function _checkForAlreadyHook(context: QContext, done) {\n    if (\n      current &&\n      current[0] &&\n      current[0].route === context.match.route &&\n      current[0].url === context.match.url &&\n      current[0].queryString === context.match.queryString\n    ) {\n      current.forEach((c) => {\n        if (c.route.hooks && c.route.hooks.already) {\n          c.route.hooks.already(context.match);\n        }\n      });\n      done(false);\n      return;\n    }\n    done();\n  }\n  function _checkForNotFoundHandler(context: QContext, done) {\n    if (notFoundRoute) {\n      context.notFoundHandled = true;\n      const [url, queryString] = extractGETParameters(\n        context.currentLocationPath\n      );\n      notFoundRoute.path = clean(url);\n      const notFoundMatch: Match = {\n        url: notFoundRoute.path,\n        queryString,\n        data: null,\n        route: notFoundRoute,\n        params: queryString !== \"\" ? parseQuery(queryString) : null,\n      };\n      context.matches = [notFoundMatch];\n      context.match = notFoundMatch;\n    }\n    done();\n  }\n  function _errorOut(context: QContext, done) {\n    console.warn(\n      `Navigo: \"${context.currentLocationPath}\" didn't match any of the registered routes.`\n    );\n    done();\n  }\n  function _setLocationPath(context: QContext, done) {\n    if (typeof context.currentLocationPath === \"undefined\") {\n      context.currentLocationPath = getCurrentEnvURL();\n    }\n    done();\n  }\n  function _matchPathToRegisteredRoutes(context: QContext, done) {\n    for (let i = 0; i < routes.length; i++) {\n      const route = routes[i];\n      const match: false | Match = matchRoute(\n        context.currentLocationPath,\n        route\n      );\n      if (match) {\n        if (!context.matches) context.matches = [];\n        context.matches.push(match);\n        if (context.resolveOptions.strategy === \"ONE\") {\n          done();\n          return;\n        }\n      }\n    }\n    done();\n  }\n  function _checkForDeprecationMethods(context: QContext, done) {\n    if (context.navigateOptions) {\n      if (typeof context.navigateOptions[\"shouldResolve\"] !== \"undefined\") {\n        console.warn(\n          `\"shouldResolve\" is deprecated. Please check the documentation.`\n        );\n      }\n      if (typeof context.navigateOptions[\"silent\"] !== \"undefined\") {\n        console.warn(`\"silent\" is deprecated. Please check the documentation.`);\n      }\n    }\n    done();\n  }\n  function _checkForForceOp(context: QContext, done) {\n    if (context.navigateOptions.force === true) {\n      self.current = current = [pathToMatchObject(context.to)];\n      done(false);\n    } else {\n      done();\n    }\n  }\n  function _updateBrowserURL(context: QContext, done) {\n    if (undefinedOrTrue(context.navigateOptions, \"updateBrowserURL\")) {\n      if (isPushStateAvailable) {\n        history[context.navigateOptions.historyAPIMethod || \"pushState\"](\n          context.navigateOptions.stateObj || {},\n          context.navigateOptions.title || \"\",\n          `/${context.to}`.replace(/\\/\\//g, \"/\") // making sure that we don't have two slashes\n        );\n      } else if (isWindowAvailable) {\n        window.location.href = context.to;\n      }\n    }\n    done();\n  }\n  function _flushCurrent(context: QContext, done) {\n    current = self.current = null;\n    done();\n  }\n  function _processMatches(context: QContext, done) {\n    let idx = 0;\n    (function nextMatch() {\n      if (idx === context.matches.length) {\n        done();\n        return;\n      }\n      Q(\n        [\n          ...foundLifecycle,\n          function end() {\n            idx += 1;\n            nextMatch();\n          },\n        ],\n        { ...context, match: context.matches[idx] }\n      );\n    })();\n  }\n\n  // public APIs\n  function createRoute(\n    path: string | RegExp,\n    handler: Function,\n    hooks: RouteHooks,\n    name?: string\n  ): Route {\n    path = isString(path) ? clean(`${root}/${clean(path as string)}`) : path;\n    return {\n      name: name || String(path),\n      path,\n      handler,\n      hooks,\n    };\n  }\n  function getCurrentEnvURL(): string {\n    if (isWindowAvailable) {\n      return location.pathname + location.search + location.hash;\n    }\n    return root;\n  }\n  function on(\n    path: string | Function | Object | RegExp,\n    handler?: Function,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach((p) => {\n        if (typeof path[p] === \"function\") {\n          this.on(p, path[p]);\n        } else {\n          const { uses: handler, as: name, hooks } = path[p];\n          routes.push(createRoute(p, handler, hooks || genericHooks, name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Function;\n      path = root;\n    }\n    routes.push(\n      createRoute(path as string | RegExp, handler, hooks || genericHooks)\n    );\n    return this;\n  }\n  function resolve(\n    currentLocationPath?: string,\n    options?: ResolveOptions\n  ): false | Match[] {\n    const context: QContext = {\n      currentLocationPath,\n      navigateOptions: {},\n      resolveOptions: options || DEFAULT_RESOLVE_OPTIONS,\n    };\n    Q(\n      [\n        _setLocationPath,\n        _matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => {\n            // console.log(`${currentLocationPath} -> Matches: ${matches.length}`);\n            return matches && matches.length > 0;\n          },\n          _processMatches,\n          notFoundLifeCycle\n        ),\n      ],\n      context\n    );\n\n    return context.matches ? context.matches : false;\n  }\n  function navigate(to: string, navigateOptions?: NavigateOptions): void {\n    to = `${clean(root)}/${clean(to)}`;\n    const context: QContext = {\n      to,\n      navigateOptions: navigateOptions || {},\n      resolveOptions:\n        navigateOptions && navigateOptions.resolveOptions\n          ? navigateOptions.resolveOptions\n          : DEFAULT_RESOLVE_OPTIONS,\n      currentLocationPath: to,\n    };\n    Q(\n      [\n        _checkForDeprecationMethods,\n        _checkForForceOp,\n        _matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          _processMatches,\n          notFoundLifeCycle\n        ),\n        _updateBrowserURL,\n      ],\n      context\n    );\n  }\n  function off(what: string | RegExp | Function) {\n    this.routes = routes = routes.filter((r) => {\n      if (isString(what)) {\n        return clean(r.path as string) !== clean(what as string);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        resolve();\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    notFoundRoute = createRoute(\n      \"/\",\n      handler,\n      hooks || genericHooks,\n      \"__NOT_FOUND__\"\n    );\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (!link.hasListenerAttached) {\n        link.addEventListener(\"click\", function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          let location = link.getAttribute(\"href\");\n          if (typeof location === \"undefined\" || location === null) {\n            return false;\n          }\n          // handling absolute paths\n          if (location.match(/^(http|https)/) && typeof URL !== \"undefined\") {\n            try {\n              const u = new URL(location);\n              location = u.pathname + u.search;\n            } catch (err) {}\n          }\n          const options = parseNavigateOptions(\n            link.getAttribute(\"data-navigo-options\")\n          );\n\n          if (!destroyed) {\n            e.preventDefault();\n            self.navigate(clean(location), options);\n          }\n        });\n        link.hasListenerAttached = true;\n      }\n    });\n    return self;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(document.querySelectorAll(\"[data-navigo]\"));\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n  function lastResolved(): Match[] | null {\n    return current;\n  }\n  function generate(name: string, data?: Object): string {\n    const result = routes.reduce((result, route) => {\n      let key;\n\n      if (route.name === name) {\n        result = route.path as string;\n        for (key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n      return result;\n    }, \"\");\n    return !result.match(/^\\//) ? `/${result}` : result;\n  }\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n  function pathToMatchObject(path: string): Match {\n    const [url, queryString] = extractGETParameters(clean(path));\n    const params = queryString === \"\" ? null : parseQuery(queryString);\n    const route = createRoute(url, () => {}, genericHooks, url);\n    return {\n      url,\n      queryString,\n      route,\n      data: null,\n      params: params,\n    };\n  }\n  function directMatchWithRegisteredRoutes(path: string): false | Match[] {\n    const context: QContext = {\n      currentLocationPath: path,\n      navigateOptions: {},\n      resolveOptions: DEFAULT_RESOLVE_OPTIONS,\n    };\n    _matchPathToRegisteredRoutes(context, () => {});\n    return context.matches ? context.matches : false;\n  }\n  function directMatchWithLocation(\n    path: string,\n    currentLocation?: string\n  ): false | Match {\n    const context: QContext = { currentLocationPath: currentLocation };\n    _setLocationPath(context, () => {});\n    const match = matchRoute(\n      context.currentLocationPath,\n      createRoute(clean(path), () => {}, {})\n    );\n    return match ? match : false;\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n  this.current = current;\n\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this.extractGETParameters = extractGETParameters;\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this.match = directMatchWithRegisteredRoutes;\n  this.matchLocation = directMatchWithLocation;\n  this._pathToMatchObject = pathToMatchObject;\n  this._clean = clean;\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(578);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}