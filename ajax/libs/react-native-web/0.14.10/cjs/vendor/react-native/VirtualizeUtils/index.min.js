"use strict";exports.__esModule=!0,exports.computeWindowedRenderLimits=computeWindowedRenderLimits,exports.elementsThatOverlapOffsets=elementsThatOverlapOffsets,exports.newRangeCount=newRangeCount,exports.default=void 0;var _invariant=_interopRequireDefault(require("fbjs/lib/invariant"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function elementsThatOverlapOffsets(e,t,n){for(var a=[],r=0,i=0;i<t;i++)for(var s=n(i),l=s.offset+s.length,f=0;f<e.length;f++)if(null==a[f]&&l>=e[f]&&(a[f]=i,r++,f===e.length-1))return(0,_invariant.default)(r===e.length,"bad offsets input, should be in increasing order: %s",JSON.stringify(e)),a;return a}function newRangeCount(e,t){return t.last-t.first+1-Math.max(0,1+Math.min(t.last,e.last)-Math.max(t.first,e.first))}function computeWindowedRenderLimits(e,t,n,a){var r=e.data,i=e.getItemCount,s=e.maxToRenderPerBatch,l=e.windowSize,f=i(r);if(0===f)return t;var o=a.offset,i=a.velocity,r=a.visibleLength,a=Math.max(0,o),o=a+r,r=(l-1)*r,u=1<i?"after":i<-1?"before":"none",i=Math.max(0,a-.5*r),r=Math.max(0,o+.5*r);if(n(f-1).offset<i)return{first:Math.max(0,f-1-s),last:f-1};for(var n=elementsThatOverlapOffsets([i,a,o,r],e.getItemCount(e.data),n),d=n[0],m=n[1],h=n[2],d=null==d?0:d,v=null==(v=n[3])?f-1:v,n={first:m=null==m?Math.max(0,d):m,last:h=null==h?Math.min(v,m+s-1):h},p=newRangeCount(t,n);!(m<=d&&v<=h);){var c=s<=p,w=m<=t.first||m>t.last,g=d<m&&(!c||!w),x=h>=t.last||h<t.first,O=h<v&&(!c||!x);if(c&&!g&&!O)break;!g||"after"==u&&O&&x||(w&&p++,m--),!O||"before"==u&&g&&w||(x&&p++,h++)}if(!(m<=h&&0<=m&&h<f&&d<=m&&h<=v&&m<=n.first&&n.last<=h))throw new Error("Bad window calculation "+JSON.stringify({first:m,last:h,itemCount:f,overscanFirst:d,overscanLast:v,visible:n}));return{first:m,last:h}}var VirtualizeUtils={computeWindowedRenderLimits:computeWindowedRenderLimits,elementsThatOverlapOffsets:elementsThatOverlapOffsets,newRangeCount:newRangeCount},_default=VirtualizeUtils;exports.default=VirtualizeUtils;