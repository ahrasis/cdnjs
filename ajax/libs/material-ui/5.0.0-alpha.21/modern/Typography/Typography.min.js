import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{deepmerge}from"@material-ui/utils";import experimentalStyled from"../styles/experimentalStyled";import useThemeProps from"../styles/useThemeProps";import capitalize from"../utils/capitalize";import typographyClasses,{getTypographyUtilityClass}from"./typographyClasses";const getTextColor=(t,e)=>0===t.indexOf("text")?e.text[t.split("text").pop().toLowerCase()]:"inherit"===t||"initial"===t?t:e[t].main,overridesResolver=(t,e)=>{const{styleProps:o={}}=t;return deepmerge(e.root||{},_extends({},o.variant&&e[o.variant],o.color&&e[`color${capitalize(o.color)}`],o.align&&e[`align${capitalize(o.align)}`],o.display&&e[`display${capitalize(o.display)}`],o.noWrap&&e.noWrap,o.gutterBottom&&e.gutterBottom,o.paragraph&&e.paragraph))};export const TypographyRoot=experimentalStyled("span",{},{name:"MuiTypography",slot:"Root",overridesResolver:overridesResolver})(({theme:t,styleProps:e})=>_extends({margin:0},e.variant&&t.typography[e.variant],"inherit"!==e.align&&{textAlign:e.align},e.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},e.gutterBottom&&{marginBottom:"0.35em"},e.paragraph&&{marginBottom:16},e.color&&"initial"!==e.color&&{color:getTextColor(e.color,t.palette)},"initial"!==e.display&&{display:e.display}));const defaultVariantMapping={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},useUtilityClasses=t=>{const{align:e,color:o,display:a,gutterBottom:r,noWrap:p,paragraph:i,variant:s,classes:l={}}=t;return{root:clsx(typographyClasses.root,l.root,getTypographyUtilityClass(`color${capitalize(o)}`),l[`color${capitalize(o)}`],typographyClasses[`align${capitalize(e)}`],l[`align${capitalize(e)}`],typographyClasses[`display${capitalize(a)}`],l[`display${capitalize(a)}`],getTypographyUtilityClass(s),l[s],r&&[typographyClasses.gutterBottom,l.gutterBottom],p&&[typographyClasses.noWrap,l.noWrap],i&&[typographyClasses.paragraph,l.paragraph])}},Typography=React.forwardRef(function(t,e){const o=useThemeProps({props:t,name:"MuiTypography"}),{align:a="inherit",className:r,color:p="initial",component:i,display:s="initial",gutterBottom:l=!1,noWrap:n=!1,paragraph:y=!1,variant:g="body1",variantMapping:h=defaultVariantMapping}=o,c=_objectWithoutPropertiesLoose(o,["align","className","color","component","display","gutterBottom","noWrap","paragraph","variant","variantMapping"]),m=_extends({},o,{align:a,className:r,color:p,component:i,display:s,gutterBottom:l,noWrap:n,paragraph:y,variant:g,variantMapping:h}),d=i||(y?"p":h[g]||defaultVariantMapping[g])||"span",u=useUtilityClasses(m);return React.createElement(TypographyRoot,_extends({as:d,ref:e,styleProps:m,className:clsx(u.root,r)},c))});"production"!==process.env.NODE_ENV&&(Typography.propTypes={align:PropTypes.oneOf(["center","inherit","justify","left","right"]),children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,color:PropTypes.oneOf(["error","inherit","initial","primary","secondary","textPrimary","textSecondary"]),component:PropTypes.elementType,display:PropTypes.oneOf(["block","initial","inline"]),gutterBottom:PropTypes.bool,noWrap:PropTypes.bool,paragraph:PropTypes.bool,variant:PropTypes.oneOfType([PropTypes.oneOf(["body1","body2","button","caption","h1","h2","h3","h4","h5","h6","inherit","overline","subtitle1","subtitle2"]),PropTypes.string]),variantMapping:PropTypes.object});export default Typography;