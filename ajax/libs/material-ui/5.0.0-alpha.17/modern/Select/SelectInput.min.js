import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import{formatMuiErrorMessage as _formatMuiErrorMessage}from"@material-ui/utils";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import ownerDocument from"../utils/ownerDocument";import capitalize from"../utils/capitalize";import Menu from"../Menu/Menu";import{isFilled}from"../InputBase/utils";import useForkRef from"../utils/useForkRef";import useControlled from"../utils/useControlled";function areEqualValues(e,o){return"object"==typeof o&&null!==o?e===o:String(e)===String(o)}function isEmpty(e){return null==e||"string"==typeof e&&!e.trim()}const SelectInput=React.forwardRef(function(e,o){const{"aria-label":t,autoFocus:r,autoWidth:n,children:a,classes:l,className:s,defaultValue:p,disabled:i,displayEmpty:u,IconComponent:c,inputRef:d,labelId:m,MenuProps:f={},multiple:y,name:v,onBlur:b,onChange:P,onClose:h,onFocus:T,onOpen:E,open:R,readOnly:g,renderValue:x,SelectDisplayProps:C={},tabIndex:I,value:M,variant:O="standard"}=e,F=_objectWithoutPropertiesLoose(e,["aria-label","autoFocus","autoWidth","children","classes","className","defaultValue","disabled","displayEmpty","IconComponent","inputRef","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","readOnly","renderValue","SelectDisplayProps","tabIndex","type","value","variant"]),[_,w]=useControlled({controlled:M,default:p,name:"Select"}),D=React.useRef(null),S=React.useRef(null),[j,N]=React.useState(null),{current:V}=React.useRef(null!=R),[k,W]=React.useState(),[A,L]=React.useState(!1),$=useForkRef(o,d),B=React.useCallback(e=>{S.current=e,e&&N(e)},[]);React.useImperativeHandle($,()=>({focus:()=>{S.current.focus()},node:D.current,value:_}),[_]),React.useEffect(()=>{r&&S.current.focus()},[r]),React.useEffect(()=>{const e=ownerDocument(S.current).getElementById(m);if(e){const o=()=>{getSelection().isCollapsed&&S.current.focus()};return e.addEventListener("click",o),()=>{e.removeEventListener("click",o)}}},[m]);const U=(e,o)=>{e?E&&E(o):h&&h(o),V||(W(n?null:j.clientWidth),L(e))},q=React.Children.toArray(a),K=null!==j&&(V?R:A);let z,H;delete F["aria-invalid"];const Y=[];let G=!1,J=!1;(isFilled({value:_})||u)&&(x?z=x(_):G=!0);const Q=q.map(e=>{if(!React.isValidElement(e))return null;let o;if("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Select component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),y){if(!Array.isArray(_))throw new Error("production"!==process.env.NODE_ENV?"Material-UI: The `value` prop must be an array when using the `Select` component with `multiple`.":_formatMuiErrorMessage(2));(o=_.some(o=>areEqualValues(o,e.props.value)))&&G&&Y.push(e.props.children)}else(o=areEqualValues(_,e.props.value))&&G&&(H=e.props.children);return o&&(J=!0),React.cloneElement(e,{"aria-selected":o?"true":void 0,onClick:(e=>o=>{let t;if(y){t=Array.isArray(_)?_.slice():[];const o=_.indexOf(e.props.value);-1===o?t.push(e.props.value):t.splice(o,1)}else t=e.props.value;e.props.onClick&&e.props.onClick(o),_!==t&&(w(t),P&&(o.persist(),Object.defineProperty(o,"target",{writable:!0,value:{value:t,name:v}}),P(o,e))),y||U(!1,o)})(e),onKeyUp:o=>{" "===o.key&&o.preventDefault(),e.props.onKeyUp&&e.props.onKeyUp(o)},role:"option",selected:o,value:void 0,"data-value":e.props.value})});"production"!==process.env.NODE_ENV&&React.useEffect(()=>{if(!J&&!y&&""!==_){const e=q.map(e=>e.props.value);console.warn([`Material-UI: You have provided an out-of-range value \`${_}\` for the select ${v?`(name="${v}") `:""}component.`,"Consider providing a value that matches one of the available options or ''.",`The available values are ${e.filter(e=>null!=e).map(e=>`\`${e}\``).join(", ")||'""'}.`].join("\n"))}},[J,q,y,v,_]),G&&(z=y?Y.join(", "):H);let X,Z=k;!n&&V&&j&&(Z=j.clientWidth),X=void 0!==I?I:i?null:0;const ee=C.id||(v?`mui-component-select-${v}`:void 0);return React.createElement(React.Fragment,null,React.createElement("div",_extends({ref:B,tabIndex:X,role:"button","aria-disabled":i?"true":void 0,"aria-expanded":K?"true":void 0,"aria-haspopup":"listbox","aria-label":t,"aria-labelledby":[m,ee].filter(Boolean).join(" ")||void 0,onKeyDown:e=>{g||-1!==[" ","ArrowUp","ArrowDown","Enter"].indexOf(e.key)&&(e.preventDefault(),U(!0,e))},onMouseDown:i||g?null:e=>{0===e.button&&(e.preventDefault(),S.current.focus(),U(!0,e))},onBlur:e=>{!K&&b&&(e.persist(),Object.defineProperty(e,"target",{writable:!0,value:{value:_,name:v}}),b(e))},onFocus:T},C,{className:clsx(l.root,l.select,l.selectMenu,l[O],s,C.className,i&&l.disabled),id:ee}),isEmpty(z)?React.createElement("span",{dangerouslySetInnerHTML:{__html:"&#8203;"}}):z),React.createElement("input",_extends({value:Array.isArray(_)?_.join(","):_,name:v,ref:D,"aria-hidden":!0,onChange:e=>{const o=q.map(e=>e.props.value).indexOf(e.target.value);if(-1===o)return;const t=q[o];w(t.props.value),P&&P(e,t)},tabIndex:-1,className:l.nativeInput,autoFocus:r},F)),React.createElement(c,{className:clsx(l.icon,l[`icon${capitalize(O)}`],K&&l.iconOpen,i&&l.disabled)}),React.createElement(Menu,_extends({id:`menu-${v||""}`,anchorEl:j,open:K,onClose:e=>{U(!1,e)}},f,{MenuListProps:_extends({"aria-labelledby":m,role:"listbox",disableListWrap:!0},f.MenuListProps),PaperProps:_extends({},f.PaperProps,{style:_extends({minWidth:Z},null!=f.PaperProps?f.PaperProps.style:null)})}),Q))});"production"!==process.env.NODE_ENV&&(SelectInput.propTypes={"aria-label":PropTypes.string,autoFocus:PropTypes.bool,autoWidth:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,defaultValue:PropTypes.any,disabled:PropTypes.bool,displayEmpty:PropTypes.bool,IconComponent:PropTypes.elementType.isRequired,inputRef:refType,labelId:PropTypes.string,MenuProps:PropTypes.object,multiple:PropTypes.bool,name:PropTypes.string,onBlur:PropTypes.func,onChange:PropTypes.func,onClose:PropTypes.func,onFocus:PropTypes.func,onOpen:PropTypes.func,open:PropTypes.bool,readOnly:PropTypes.bool,renderValue:PropTypes.func,SelectDisplayProps:PropTypes.object,tabIndex:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),type:PropTypes.any,value:PropTypes.any,variant:PropTypes.oneOf(["standard","outlined","filled"])});export default SelectInput;