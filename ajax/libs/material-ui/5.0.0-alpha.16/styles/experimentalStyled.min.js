import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import styled from"@material-ui/styled-engine";import{propsToClassKey}from"@material-ui/styles";import{unstable_styleFunctionSx as styleFunctionSx}from"@material-ui/system";import defaultTheme from"./defaultTheme";function isEmpty(e){return 0===Object.keys(e).length}const getStyleOverrides=(e,t)=>{let r={};return t&&t.components&&t.components[e]&&t.components[e].styleOverrides&&(r=t.components[e].styleOverrides),r},getVariantStyles=(e,t)=>{let r=[];t&&t.components&&t.components[e]&&t.components[e].variants&&(r=t.components[e].variants);const o={};return r.forEach(e=>{const t=propsToClassKey(e.props);o[t]=e.style}),o},variantsResolver=(e,t,r,o)=>{var s,n;const{styleProps:l={}}=e;let m={};const i=null==r?void 0:null===(s=r.components)||void 0===s?void 0:null===(n=s[o])||void 0===n?void 0:n.variants;return i&&i.forEach(r=>{let o=!0;Object.keys(r.props).forEach(t=>{l[t]!==r.props[t]&&e[t]!==r.props[t]&&(o=!1)}),o&&(m=_extends({},m,t[propsToClassKey(r.props)]))}),m},shouldForwardProp=e=>"styleProps"!==e&&"theme"!==e&&"sx"!==e,experimentalStyled=(e,t,r={})=>{const o=r.muiName,s=styled(e,_extends({shouldForwardProp:shouldForwardProp,label:o},t));return(e,...t)=>{const n=t?t.map(e=>"function"==typeof e?t=>{let{theme:r}=t,o=_objectWithoutPropertiesLoose(t,["theme"]);return e(_extends({theme:isEmpty(r)?defaultTheme:r},o))}:e):[];let l=e;return Array.isArray(e)?(l=[...e,"","",""]).raw=[...e.raw,"","",""]:"function"==typeof e&&(l=(t=>{let{theme:r}=t,o=_objectWithoutPropertiesLoose(t,["theme"]);return e(_extends({theme:isEmpty(r)?defaultTheme:r},o))})),n.push(e=>{if(o&&r.overridesResolver){const t=isEmpty(e.theme)?defaultTheme:e.theme;return r.overridesResolver(e,getStyleOverrides(o,t),o)}return""}),n.push(e=>{if(o){const t=isEmpty(e.theme)?defaultTheme:e.theme;return variantsResolver(e,getVariantStyles(o,t),t,o)}return""}),n.push(e=>{const t=isEmpty(e.theme)?defaultTheme:e.theme;return styleFunctionSx(_extends({},e,{theme:t}))}),s(l,...n)}};export default experimentalStyled;