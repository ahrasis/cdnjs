import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import experimentalStyled from"../styles/experimentalStyled";import useThemeProps from"../styles/useThemeProps";import capitalize from"../utils/capitalize";import typographyClasses,{getTypographyUtilityClass}from"./typographyClasses";const getTextColor=(t,o)=>0===t.indexOf("text")?o.text[t.split("text").pop().toLowerCase()]:"inherit"===t||"initial"===t?t:o[t].main,overridesResolver=(t,o)=>{const{styleProps:e={}}=t;return _extends({},o.root,e.variant&&o[e.variant],e.color&&o[`color${capitalize(e.color)}`],e.align&&o[`align${capitalize(e.align)}`],e.display&&o[`display${capitalize(e.display)}`],e.noWrap&&o.noWrap,e.gutterBottom&&o.gutterBottom,e.paragraph&&o.paragraph)};export const TypographyRoot=experimentalStyled("span",{},{name:"Typography",slot:"Root",overridesResolver:overridesResolver})(t=>_extends({margin:0},t.styleProps.variant&&t.theme.typography[t.styleProps.variant],"inherit"!==t.styleProps.align&&{textAlign:t.styleProps.align},t.styleProps.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},t.styleProps.gutterBottom&&{marginBottom:"0.35em"},t.styleProps.paragraph&&{marginBottom:16},t.styleProps.color&&"initial"!==t.styleProps.color&&{color:getTextColor(t.styleProps.color,t.theme.palette)},"initial"!==t.styleProps.display&&{display:t.styleProps.display}));const defaultVariantMapping={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},useTypographyClasses=t=>{const{align:o,color:e,display:r,gutterBottom:a,noWrap:p,paragraph:s,variant:i,classes:l={}}=t;return{root:clsx(typographyClasses.root,l.root,getTypographyUtilityClass(`color${capitalize(e)}`),l[`color${capitalize(e)}`],typographyClasses[`align${capitalize(o)}`],l[`align${capitalize(o)}`],typographyClasses[`display${capitalize(r)}`],l[`display${capitalize(r)}`],getTypographyUtilityClass(i),l[i],a&&[typographyClasses.gutterBottom,l.gutterBottom],p&&[typographyClasses.noWrap,l.noWrap],s&&[typographyClasses.paragraph,l.paragraph])}},Typography=React.forwardRef(function(t,o){const e=useThemeProps({props:t,name:"MuiTypography"}),{align:r="inherit",className:a,color:p="initial",component:s,display:i="initial",gutterBottom:l=!1,noWrap:n=!1,paragraph:y=!1,variant:g="body1",variantMapping:h=defaultVariantMapping}=e,c=_objectWithoutPropertiesLoose(e,["align","className","color","component","display","gutterBottom","noWrap","paragraph","variant","variantMapping"]),m=_extends({},e,{align:r,className:a,color:p,component:s,display:i,gutterBottom:l,noWrap:n,paragraph:y,variant:g,variantMapping:h}),d=s||(y?"p":h[g]||defaultVariantMapping[g])||"span",u=useTypographyClasses(m);return React.createElement(TypographyRoot,_extends({as:d,ref:o,styleProps:m,className:clsx(u.root,a)},c))});"production"!==process.env.NODE_ENV&&(Typography.propTypes={align:PropTypes.oneOf(["center","inherit","justify","left","right"]),children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,color:PropTypes.oneOf(["error","inherit","initial","primary","secondary","textPrimary","textSecondary"]),component:PropTypes.elementType,display:PropTypes.oneOf(["block","initial","inline"]),gutterBottom:PropTypes.bool,noWrap:PropTypes.bool,paragraph:PropTypes.bool,variant:PropTypes.oneOfType([PropTypes.oneOf(["body1","body2","button","caption","h1","h2","h3","h4","h5","h6","inherit","overline","subtitle1","subtitle2"]),PropTypes.string]),variantMapping:PropTypes.object});export default Typography;