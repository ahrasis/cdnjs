class Castjs{constructor(t={}){t.joinpolicies&&-1!==["custom_controller_scoped","tab_and_origin_scoped","origin_scoped","page_scoped"].indexOf(t.joinpolicy)||(t.joinpolicy="tab_and_origin_scoped"),t.receiver&&""!==t.receiver||(t.receiver="CC1AD845"),this.events={},this.receiver=t.receiver,this.joinpolicy=t.joinpolicy,this.available=!1,this.connected=!1,this.player=null,this.controller=null,this.device="Chromecast",this.src="",this.title="",this.description="",this.poster="",this.subtitles=[],this.volumeLevel=1,this.muted=!1,this.paused=!1,this.time=0,this.timePretty="00:00:00",this.duration=0,this.durationPretty="00:00:00",this.progress=0,this.state="disconnected",this.intervalIsAvailable=setInterval(()=>{if(!window.chrome)return clearInterval(this.intervalIsAvailable),this.trigger("error","Casting is not available");window.chrome.cast&&window.chrome.cast.isAvailable&&(clearInterval(this.intervalIsAvailable),cast.framework.CastContext.getInstance().setOptions({receiverApplicationId:this.receiver,autoJoinPolicy:this.joinpolicy}),this.player=new cast.framework.RemotePlayer,this.controller=new cast.framework.RemotePlayerController(this.player),this.controller.addEventListener("isConnectedChanged",this.controller_isConnectedChanged.bind(this)),this.controller.addEventListener("currentTimeChanged",this.controller_currentTimeChanged.bind(this)),this.controller.addEventListener("durationChanged",this.controller_durationChanged.bind(this)),this.controller.addEventListener("volumeLevelChanged",this.controller_volumeLevelChanged.bind(this)),this.controller.addEventListener("isMutedChanged",this.controller_isMutedChanged.bind(this)),this.controller.addEventListener("isPausedChanged",this.controller_isPausedChanged.bind(this)),this.controller.addEventListener("playerStateChanged",this.controller_playerStateChanged.bind(this)),this.available=!0,this.trigger("available"))},250)}controller_isConnectedChanged(){this.connected=this.player.isConnected,this.connected&&(this.trigger("connect"),setTimeout(()=>{if(this.player.isMediaLoaded){for(var t in this.device=cast.framework.CastContext.getInstance().getCurrentSession().getCastDevice().friendlyName||"Chromecast",this.src=this.player.mediaInfo.contentId,this.title=this.player.mediaInfo.metadata.title||null,this.description=this.player.mediaInfo.metadata.subtitle||null,this.poster=this.player.imageUrl||null,this.subtitles=[],this.volumeLevel=this.player.volumeLevel,this.muted=this.player.isMuted,this.paused=this.player.isPaused,this.time=this.player.currentTime,this.timePretty=this.controller.getFormattedTime(this.player.currentTime),this.duration=this.player.duration,this.durationPretty=this.controller.getFormattedTime(this.player.duration),this.progress=this.controller.getSeekPosition(this.player.currentTime,this.player.duration),this.state=this.player.playerState.toLowerCase(),this.player.mediaInfo.tracks)"TEXT"===this.player.mediaInfo.tracks[t].type&&this.subtitles.push({label:this.player.mediaInfo.tracks[t].name,src:this.player.mediaInfo.tracks[t].trackContentId});var e=cast.framework.CastContext.getInstance().getCurrentSession().getSessionObj().media[0].activeTrackIds;e.length&&this.subtitles[e[0]]&&(this.subtitles[e[0]].active=!0),this.intervalIsConnected=setInterval(()=>{this.connected=this.player.isConnected,this.connected||(clearInterval(this.intervalIsConnected),this.state="disconnected",this.trigger("disconnect"),this.trigger("statechange"))},1e3)}},0))}controller_currentTimeChanged(){this.time=this.player.currentTime,this.duration=this.player.duration,this.progress=this.controller.getSeekPosition(this.time,this.duration),this.timePretty=this.controller.getFormattedTime(this.time),this.durationPretty=this.controller.getFormattedTime(this.duration),this.trigger("timeupdate")}controller_durationChanged(){this.duration=this.player.duration}controller_volumeLevelChanged(){this.volumeLevel=this.player.volumeLevel,this.trigger("volumechange")}controller_isMutedChanged(){this.muted=this.player.isMuted,this.trigger("mute")}controller_isPausedChanged(){this.paused=this.player.isPaused,this.paused&&this.trigger("pause")}controller_playerStateChanged(){this.connected=this.player.isConnected,this.connected&&(this.device=cast.framework.CastContext.getInstance().getCurrentSession().getCastDevice().friendlyName||"Chromecast"),this.state=this.player.playerState.toLowerCase(),"idle"===this.state?(this.state="ended",this.trigger("end")):"buffering"===this.state?this.trigger("buffering"):"playing"===this.state&&this.trigger("playing"),this.trigger("statechange")}on(t,e){return this.events[t]||(this.events[t]=[]),this.events[t].push(e),this}off(t){return t?this.events[t]&&(this.events[t]=[]):this.events={},this}trigger(t){var e=Array.prototype.slice.call(arguments,1);for(var i in this.events[t])this.events[t][i].apply(this,e);if("error"===t)return this;for(var i in this.events.event)this.events.event[i].apply(this,[t]);return this}cast(t,e={}){if(!t)return this.trigger("error","No media source specified.");for(var i in e.src=t,e)e.hasOwnProperty(i)&&(this[i]=e[i]);cast.framework.CastContext.getInstance().requestSession().then(()=>{if(!cast.framework.CastContext.getInstance().getCurrentSession())return this.trigger("error","Could not connect with the cast device");var t=new chrome.cast.media.MediaInfo(this.src);if(t.metadata=new chrome.cast.media.GenericMediaMetadata,this.subtitles.length){t.textTrackStyle=new chrome.cast.media.TextTrackStyle,t.textTrackStyle.backgroundColor="#00000000",t.textTrackStyle.edgeColor="#00000016",t.textTrackStyle.edgeType="DROP_SHADOW",t.textTrackStyle.fontFamily="CASUAL",t.textTrackStyle.fontScale=1,t.textTrackStyle.foregroundColor="#FFFFFF";var e=[];for(var i in this.subtitles){var s=new chrome.cast.media.Track(i,"TEXT");s.name=this.subtitles[i].label,s.subtype="CAPTIONS",s.trackContentId=this.subtitles[i].src,s.trackContentType="text/vtt",s.trackId=parseInt(i),e.push(s)}t.tracks=e}t.metadata.images=[new chrome.cast.Image(this.poster)],t.metadata.title=this.title,t.metadata.subtitle=this.description;var r=new chrome.cast.media.LoadRequest(t);if(r.currentTime=this.time,r.autoplay=!this.paused,this.subtitles.length)for(var i in this.subtitles)if(this.subtitles[i].active){r.activeTrackIds=[parseInt(i)];break}cast.framework.CastContext.getInstance().getCurrentSession().loadMedia(r).then(()=>(this.device=cast.framework.CastContext.getInstance().getCurrentSession().getCastDevice().friendlyName||"Chromecast",this.intervalIsConnected=setInterval(()=>{this.connected=this.player.isConnected,this.connected||(clearInterval(this.intervalIsConnected),this.state="disconnected",this.trigger("disconnect"),this.trigger("statechange"))},1e3),this),t=>(this.trigger("error",t),this))},t=>("cancel"!==t&&this.trigger("error",t),this))}seek(t,e){return e&&(t=this.controller.getSeekTime(t,this.player.duration)),this.player.currentTime=t,this.controller.seek(),this}volume(t){return this.player.volumeLevel=t,this.controller.setVolumeLevel(),this}play(){return this.paused&&this.controller.playOrPause(),this}pause(){return this.paused||this.controller.playOrPause(),this}mute(){return!1===this.muted&&this.controller.muteOrUnmute(),this}unmute(){return!0===this.muted&&this.controller.muteOrUnmute(),this}subtitles(t){var e=new chrome.cast.media.EditTracksInfoRequest([parseInt(t)]);cast.framework.CastContext.getInstance().getCurrentSession().getSessionObj().media[0].editTracksInfo(e,()=>{for(var e in this.subtitles)delete this.subtitles[e].active,e==t&&(this.subtitles[e].active=!0);return this},t=>{this.trigger("error",t)})}disconnect(){return cast.framework.CastContext.getInstance().endCurrentSession(!0),this.controller.stop(),this.connected=!1,this.device="Chromecast",this.src="",this.title="",this.description="",this.poster="",this.subtitles=[],this.volumeLevel=1,this.muted=!1,this.paused=!1,this.time=0,this.timePretty="00:00:00",this.duration=0,this.durationPretty="00:00:00",this.progress=0,this.state="disconnected",this.trigger("disconnect"),this}}