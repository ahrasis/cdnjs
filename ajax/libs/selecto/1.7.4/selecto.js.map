{"version":3,"file":"selecto.js","sources":["../src/utils.ts","../src/consts.ts","../src/Selecto.tsx","../src/index.umd.ts"],"sourcesContent":["import { Hypertext, Rect } from \"./types\";\nimport { IObject, addClass, hasClass, calculateBoundSize } from \"@daybrush/utils\";\n\nexport function getClient(e: MouseEvent | TouchEvent) {\n    if (\"touches\" in e) {\n        const touch = e.touches[0] || e.changedTouches[0];\n\n        return {\n            clientX: touch.clientX,\n            clientY: touch.clientY,\n        };\n    } else {\n        return {\n            clientX: e.clientX,\n            clientY: e.clientY,\n        };\n    }\n}\n\nexport function createElement(\n    jsx: Hypertext,\n    prevTarget?: HTMLElement | SVGElement,\n    container?: HTMLElement | SVGElement,\n) {\n    const { tag, children, attributes, className, style } = jsx;\n    const el = prevTarget || document.createElement(tag) as HTMLElement | SVGElement;\n\n    for (const name in attributes) {\n        el.setAttribute(name, attributes[name]);\n    }\n    const elChildren = el.children;\n    children.forEach((child, i) => {\n        createElement(child, elChildren[i] as HTMLElement | SVGElement, el);\n    });\n    if (className) {\n        className.split(\" \").forEach(name => {\n            if (!hasClass(el, name)) {\n                addClass(el, name);\n            }\n        });\n    }\n    if (style) {\n        const elStyle = el.style;\n        for (const name in style) {\n            elStyle[name] = style[name];\n        }\n    }\n    if (!prevTarget && container) {\n        container.appendChild(el);\n    }\n    return el;\n}\nexport function h(\n    tag: string,\n    attrs: IObject<any>,\n    ...children: Hypertext[]\n): Hypertext {\n    const {\n        className = \"\",\n        style = {},\n        ...attributes\n    } = attrs || {};\n    return {\n        tag,\n        className,\n        style,\n        attributes,\n        children,\n    };\n}\n\nexport function diffValue<T>(prev: T, cur: T, func: (prev: T, cur: T) => void) {\n    if (prev !== cur) {\n        func(prev, cur);\n    }\n}\n\nexport function getRect(\n    e: any, ratio: number,\n    boundArea: { left: number, right: number, top: number, bottom: number},\n): Rect {\n    let {\n        distX = 0,\n        distY = 0,\n    } = e;\n    const { startX, startY } = e.datas;\n\n    if (ratio > 0) {\n        const nextHeight = Math.sqrt((distX * distX + distY * distY) / (1 + ratio * ratio));\n        const nextWidth = ratio * nextHeight;\n\n        distX = (distX >= 0 ? 1 : -1) * nextWidth;\n        distY = (distY >= 0 ? 1 : -1) * nextHeight;\n    }\n    let width = Math.abs(distX);\n    let height = Math.abs(distY);\n\n    const maxWidth = distX < 0 ? startX - boundArea.left : boundArea.right - startX;\n    const maxHeight = distY < 0 ? startY - boundArea.top : boundArea.bottom - startY;\n\n    [width, height] = calculateBoundSize([width, height], [0, 0], [maxWidth, maxHeight], !!ratio);\n    distX = (distX >= 0 ? 1 : -1) * width;\n    distY = (distY >= 0 ? 1 : -1) * height;\n\n    const tx = Math.min(0, distX);\n    const ty = Math.min(0, distY);\n    const left = startX + tx;\n    const top = startY + ty;\n\n    return {\n        left,\n        top,\n        right: left + width,\n        bottom: top + height,\n        width,\n        height,\n    };\n}\n\nexport function getDefaultElementPoints(el: HTMLElement) {\n    const rect = el.getBoundingClientRect();\n    const { left, top, width, height } = rect;\n\n    return {\n        pos1: [left, top],\n        pos2: [left + width, top],\n        pos3: [left, top + height],\n        pos4: [left + width, top + height],\n    };\n}\n","import styled from \"css-styled\";\nimport { SelectoOptions } from \"./types\";\n\nexport const injector = styled(`\n:host {\n    position: fixed;\n    display: none;\n    border: 1px solid #4af;\n    background: rgba(68, 170, 255, 0.5);\n    z-index: 100;\n}\n`);\n\n/**\n * @memberof Selecto\n */\nexport const CLASS_NAME = `selecto-selection ${injector.className}`;\n\nexport const PROPERTIES = [\n    \"boundContainer\",\n    \"selectableTargets\",\n    \"selectByClick\",\n    \"selectFromInside\",\n    \"continueSelect\",\n    \"toggleContinueSelect\",\n    \"keyContainer\",\n    \"hitRate\",\n    \"scrollOptions\",\n    \"checkInput\",\n    \"preventDefault\",\n    \"ratio\",\n    \"getElementPoints\",\n] as const;\n/**\n * @memberof Selecto\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    \"dragContainer\",\n    \"cspNonce\",\n    ...PROPERTIES,\n] as const;\n\nexport const OPTION_TYPES: { [key in keyof SelectoOptions]: any } = {\n    boundContainer: null,\n    target: null,\n    container: null,\n    dragContainer: null,\n    selectableTargets: Array,\n    selectByClick: Boolean,\n    selectFromInside: Boolean,\n    continueSelect: Boolean,\n    toggleContinueSelect: Array,\n    keyContainer: null,\n    hitRate: Number,\n    scrollOptions: Object,\n    checkInput: Boolean,\n    preventDefault: Boolean,\n    cspNonce: String,\n    ratio: Number,\n    getElementPoints: Function,\n};\n\n/**\n * @memberof Selecto\n */\nexport const EVENTS = [\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"selectStart\",\n    \"select\",\n    \"selectEnd\",\n    \"keydown\",\n    \"keyup\",\n    \"scroll\",\n] as const;\n\n/**\n * @memberof Selecto\n */\nexport const METHODS = [\n    \"clickTarget\",\n    \"setSelectedTargets\",\n    \"triggerDragStart\",\n] as const;\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto, { OnDrag, OnDragEnd, OnDragStart } from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport { isObject, camelize, IObject, addEvent, removeEvent, isArray, isString } from \"@daybrush/utils\";\nimport ChildrenDiffer, { diff, ChildrenDiffResult } from \"@egjs/children-differ\";\nimport DragScroll from \"@scena/dragscroll\";\nimport KeyController, { getCombi } from \"keycon\";\nimport { createElement, h, getClient, diffValue, getRect, getDefaultElementPoints } from \"./utils\";\nimport { SelectoOptions, SelectoProperties, OnDragEvent, SelectoEvents, Point, Rect } from \"./types\";\nimport { PROPERTIES, injector, CLASS_NAME } from \"./consts\";\n\n/**\n * Selecto.js is a component that allows you to select elements in the drag area using the mouse or touch.\n * @sort 1\n * @extends EventEmitter\n */\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function set(value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function set(value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\nclass Selecto extends EventEmitter<SelectoEvents> {\n    public options: SelectoOptions;\n    private target!: HTMLElement | SVGElement;\n    private dragContainer!: Element | Window | Element[];\n    private container!: HTMLElement;\n    private gesto!: Gesto;\n    private injectResult!: InjectResult;\n    private selectedTargets: Array<HTMLElement | SVGElement> = [];\n    private differ = new ChildrenDiffer<HTMLElement | SVGElement>();\n    private dragScroll: DragScroll = new DragScroll();\n    private keycon!: KeyController;\n    /**\n     *\n     */\n    constructor(\n        options: Partial<SelectoOptions> = {},\n    ) {\n        super();\n        this.target = options.target;\n        this.container = options.container;\n        this.options = {\n            target: null,\n            container: null,\n            dragContainer: null,\n            selectableTargets: [],\n            selectByClick: true,\n            selectFromInside: true,\n            hitRate: 100,\n            continueSelect: false,\n            toggleContinueSelect: null,\n            keyContainer: null,\n            scrollOptions: undefined,\n            checkInput: false,\n            preventDefault: false,\n            boundContainer: false,\n            getElementPoints: getDefaultElementPoints,\n            cspNonce: \"\",\n            ratio: 0,\n            ...options,\n        };\n        this.initElement();\n        this.initDragScroll();\n        this.setKeyController();\n    }\n    /**\n     * You can set the currently selected targets.\n     *\n     */\n    public setSelectedTargets(selectedTargets: Array<HTMLElement | SVGElement>): this {\n        this.selectedTargets = selectedTargets;\n\n        this.differ = new ChildrenDiffer(selectedTargets);\n\n        return this;\n    }\n    /**\n     * You can get the currently selected targets.\n     */\n    public getSelectedTargets(): Array<HTMLElement | SVGElement> {\n        return this.selectedTargets;\n    }\n    public setKeyContainer(keyContainer: HTMLElement | Document | Window) {\n        const options = this.options;\n\n        diffValue(options.keyContainer, keyContainer, () => {\n            options.keyContainer = keyContainer;\n\n            this.setKeyController();\n        });\n    }\n    public setToggleContinueSelect(toggleContinueSelect: string[][] | string[] | string) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelect, toggleContinueSelect, () => {\n            options.toggleContinueSelect = toggleContinueSelect;\n\n            this.setKeyEvent();\n        });\n    }\n    public setPreventDefault(value: boolean) {\n        this.gesto.options.preventDefault = value;\n    }\n    public setCheckInput(value: boolean) {\n        this.gesto.options.checkInput = value;\n    }\n    /**\n     * `OnDragStart` is triggered by an external event.\n     * @param - external event\n     * @example\n     * import Selecto from \"selecto\";\n     *\n     * const selecto = new Selecto();\n     *\n     * window.addEventListener(\"mousedown\", e => {\n     *   selecto.triggerDragStart(e);\n     * });\n     */\n    public triggerDragStart(e: MouseEvent | TouchEvent) {\n        this.gesto.triggerDragStart(e);\n        return this;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.keycon && this.keycon.destroy();\n        this.gesto.unset();\n        this.injectResult.destroy();\n        removeEvent(document, \"selectstart\", this.onDocumentSelectStart);\n\n        this.keycon = null;\n        this.gesto = null;\n        this.injectResult = null;\n        this.target = null;\n        this.container = null;\n        this.options = null;\n    }\n    /**\n     * Find for selectableTargets again during drag event\n     */\n    public findSelectableTargets(datas: any = this.gesto.getEventDatas()) {\n        const getElementPoints = this.getElementPoints;\n        const selectableTargets = this.getSelectableTargets();\n        const selectablePoints = selectableTargets.map(target => getElementPoints(target));\n        datas.selectableTargets = selectableTargets;\n        datas.selectablePoints = selectablePoints;\n    }\n    /**\n     * External click or mouse events can be applied to the selecto.\n     * @params - Extenal click or mouse event\n     * @params - Specify the clicked target directly.\n     */\n    public clickTarget(e: MouseEvent | TouchEvent, clickedTarget?: Element): this {\n        const { clientX, clientY } = getClient(e);\n        const dragEvent = {\n            datas: {},\n            clientX,\n            clientY,\n            inputEvent: e,\n            stop: () => {\n                return false;\n            },\n        } as any;\n        if (this.onDragStart(dragEvent, clickedTarget)) {\n            this.onDragEnd(dragEvent);\n        }\n        return this;\n    }\n    private setKeyController() {\n        const { keyContainer, toggleContinueSelect } = this.options;\n\n        if (this.keycon) {\n            this.keycon.destroy();\n            this.keycon = null;\n        }\n        if (toggleContinueSelect) {\n            this.keycon = new KeyController(keyContainer || window);\n            this.keycon.keydown(this.onKeyDown).keyup(this.onKeyUp).on(\"blur\", this.onBlur);\n        }\n    }\n    private setKeyEvent() {\n        const { toggleContinueSelect } = this.options;\n        if (!toggleContinueSelect || this.keycon) {\n            return;\n        }\n        this.setKeyController();\n    }\n    private initElement() {\n        this.target = createElement(\n            <div className={CLASS_NAME}></div> as any,\n            this.target,\n            this.container,\n        );\n\n        const target = this.target;\n\n        const { dragContainer, checkInput, preventDefault } = this.options;\n        this.dragContainer = typeof dragContainer === \"string\"\n            ? [].slice.call(document.querySelectorAll(dragContainer))\n            : (this.options.dragContainer || this.target.parentNode as any);\n        this.gesto = new Gesto(this.dragContainer, {\n            checkWindowBlur: true,\n            container: window,\n            checkInput,\n            preventDefault,\n        }).on({\n            dragStart: this.onDragStart,\n            drag: this.onDrag,\n            dragEnd: this.onDragEnd,\n        });\n        addEvent(document, \"selectstart\", this.onDocumentSelectStart);\n\n        this.injectResult = injector.inject(target, {\n            nonce: this.options.cspNonce,\n        });\n    }\n    private hitTest(\n        selectRect: Rect,\n        clientX: number,\n        clientY: number,\n        targets: Array<HTMLElement | SVGElement>,\n        points: Point[],\n    ) {\n        const { hitRate, selectByClick } = this.options;\n        const { left, top, right, bottom } = selectRect;\n\n        return targets.filter((target, i) => {\n            const { pos1, pos2, pos3, pos4 } = points[i];\n            const [\n                rectLeft, rectTop,\n            ] = [0, 1].map(j => Math.min(pos1[j], pos2[j], pos3[j], pos4[j]));\n            const [\n                rectRight, rectBottom,\n            ] = [0, 1].map(j => Math.max(pos1[j], pos2[j], pos3[j], pos4[j]));\n\n            const isStart\n                = rectLeft <= clientX\n                && clientX <= rectRight\n                && rectTop <= clientY\n                && clientY <= rectBottom;\n            const rectSize = (rectRight - rectLeft) * (rectBottom - rectTop);\n            const testLeft = Math.max(rectLeft, left);\n            const testRight = Math.min(rectRight, right);\n            const testTop = Math.max(rectTop, top);\n            const testBottom = Math.min(rectBottom, bottom);\n\n            if (selectByClick && isStart) {\n                return true;\n            }\n            if (testRight < testLeft || testBottom < testTop) {\n                return false;\n            }\n            const rate = Math.round((testRight - testLeft) * (testBottom - testTop) / rectSize * 100);\n\n            if (rate >= hitRate) {\n                return true;\n            }\n            return false;\n        });\n    }\n    private initDragScroll() {\n        this.dragScroll.on(\"scroll\", ({ container, direction }) => {\n            this.trigger(\"scroll\", {\n                container,\n                direction,\n            });\n        }).on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n            const datas = inputEvent.datas;\n            datas.startX -= offsetX;\n            datas.startY -= offsetY;\n            datas.selectablePoints.forEach(rect => {\n                [rect.pos1, rect.pos2, rect.pos3, rect.pos4].forEach(pos => {\n                    pos[0] -= offsetX;\n                    pos[1] -= offsetY;\n                });\n            });\n            this.gesto.scrollBy(offsetX, offsetY, inputEvent.inputEvent, false);\n\n            inputEvent.distX += offsetX;\n            inputEvent.distY += offsetY;\n            this.check(inputEvent);\n        });\n    }\n    private getSelectableTargets() {\n        const selectableTargets: Array<HTMLElement | SVGElement> = [];\n\n        this.options.selectableTargets.forEach(target => {\n            if (isObject(target)) {\n                selectableTargets.push(target);\n            } else {\n                const elements = [].slice.call(document.querySelectorAll(target));\n\n                elements.forEach(el => {\n                    selectableTargets.push(el);\n                });\n            }\n        });\n\n        return selectableTargets;\n    }\n    private passSelectedTargets(passedTargets: Array<HTMLElement | SVGElement>) {\n        const {\n            list,\n            prevList,\n            added,\n            removed,\n        } = diff(this.selectedTargets, passedTargets) as ChildrenDiffResult<HTMLElement | SVGElement>;\n\n        return added.map(index => list[index]).concat(removed.map(index => prevList[index]));\n    }\n    private select(\n        selectedTargets: Array<HTMLElement | SVGElement>, rect: Rect, inputEvent: any, isStart?: boolean) {\n        const {\n            added,\n            removed,\n            prevList,\n            list,\n        } = this.differ.update(selectedTargets);\n\n        if (isStart) {\n            /**\n             * When the select(drag) starts, the selectStart event is called.\n             * @memberof Selecto\n             * @event selectStart\n             * @param {Selecto.OnSelect} - Parameters for the selectStart event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"selectStart\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * }).on(\"selectEnd\", e => {\n             *   e.afterAdded.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.afterRemoved.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.trigger(\"selectStart\", {\n                selected: selectedTargets,\n                added: added.map(index => list[index]),\n                removed: removed.map(index => prevList[index]),\n                rect,\n                inputEvent,\n            });\n        }\n        if (added.length || removed.length) {\n            /**\n             * When the select in real time, the select event is called.\n             * @memberof Selecto\n             * @event select\n             * @param {Selecto.OnSelect} - Parameters for the select event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"select\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.trigger(\"select\", {\n                selected: selectedTargets,\n                added: added.map(index => list[index]),\n                removed: removed.map(index => prevList[index]),\n                rect,\n                inputEvent,\n            });\n        }\n    }\n    private selectEnd(\n        startSelectedTargets: Array<HTMLElement | SVGElement>,\n        selectedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent,\n    ) {\n        const { inputEvent, isDouble } = e;\n        const {\n            added,\n            removed,\n            prevList,\n            list,\n        } = diff(startSelectedTargets, selectedTargets);\n        const {\n            added: afterAdded,\n            removed: afterRemoved,\n            prevList: afterPrevList,\n            list: afterList,\n        } = diff(this.selectedTargets, selectedTargets);\n        const type = inputEvent && inputEvent.type;\n        const isDragStart = type === \"mousedown\" || type === \"touchstart\";\n\n        /**\n         * When the select(dragEnd or click) ends, the selectEnd event is called.\n         * @memberof Selecto\n         * @event selectEnd\n         * @param {Selecto.OnSelectEnd} - Parameters for the selectEnd event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"selectStart\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * }).on(\"selectEnd\", e => {\n         *   e.afterAdded.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.afterRemoved.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.trigger(\"selectEnd\", {\n            selected: selectedTargets,\n            added: added.map(index => list[index]),\n            removed: removed.map(index => prevList[index]),\n            afterAdded: afterAdded.map(index => afterList[index]),\n            afterRemoved: afterRemoved.map(index => afterPrevList[index]),\n            isDragStart,\n            isDouble: !!isDouble,\n            rect,\n            inputEvent,\n        });\n    }\n    private onDragStart = (e: OnDragStart, clickedTarget?: Element) => {\n        const { datas, clientX, clientY, inputEvent } = e;\n        const {\n            continueSelect, selectFromInside, selectByClick,\n            boundContainer,\n        } = this.options;\n\n        this.findSelectableTargets(datas);\n        datas.startSelectedTargets = this.selectedTargets;\n\n        let boundArea = { left: -Infinity, top: -Infinity, right: Infinity, bottom: Infinity };\n\n        if (boundContainer) {\n            let rectContainer: HTMLElement;\n\n            if (isString(boundContainer)) {\n                rectContainer = document.querySelector(boundContainer);\n            } else if (boundContainer === true) {\n                rectContainer = this.container;\n            } else {\n                rectContainer = boundContainer;\n            }\n            const rect = rectContainer.getBoundingClientRect();\n\n            boundArea = { left: rect.left, top: rect.top, right: rect.right, bottom: rect.bottom };\n        }\n\n        datas.boundArea = boundArea;\n        datas.selectedTargets = [];\n\n        const hitRect = {\n            left: clientX,\n            top: clientY,\n            right: clientX,\n            bottom: clientY,\n            width: 0,\n            height: 0,\n        };\n        let firstPassedTargets: Array<HTMLElement | SVGElement> = [];\n        if (!selectFromInside || selectByClick) {\n            let pointTarget\n                = (clickedTarget || document.elementFromPoint(clientX, clientY)) as HTMLElement | SVGElement;\n\n            while (pointTarget) {\n                if (datas.selectableTargets.indexOf(pointTarget as HTMLElement | SVGElement) > -1) {\n                    break;\n                }\n                pointTarget = pointTarget.parentElement;\n            }\n            firstPassedTargets = pointTarget ? [pointTarget] : [];\n        }\n        const hasInsideTargets = firstPassedTargets.length > 0;\n        const isPreventSelect = !selectFromInside && hasInsideTargets;\n\n        if (isPreventSelect && !selectByClick) {\n            e.stop();\n            return false;\n        }\n        const type = inputEvent.type;\n        const isTrusted = type === \"mousedown\" || type === \"touchstart\";\n        /**\n         * When the drag starts, the dragStart event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"dragStart\", e => {\n         *   if (e.inputEvent.target.tagName === \"SPAN\") {\n         *     e.stop();\n         *   }\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result = isTrusted ? this.trigger(\"dragStart\", { ...e }) : true;\n\n        if (!result) {\n            e.stop();\n            return false;\n        }\n\n        if (!continueSelect) {\n            this.selectedTargets = [];\n        } else {\n            firstPassedTargets = this.passSelectedTargets(firstPassedTargets);\n        }\n\n        this.select(firstPassedTargets, hitRect, inputEvent, true);\n        datas.startX = clientX;\n        datas.startY = clientY;\n        datas.selectedTargets = firstPassedTargets;\n        datas.boundsArea =\n        this.target.style.cssText\n            += `left:0px;top:0px;transform: translate(${clientX}px, ${clientY}px)`;\n\n        if (isPreventSelect && selectByClick) {\n            this.onDragEnd(e);\n            inputEvent.preventDefault();\n            e.stop();\n            return false;\n        } else {\n            if (type === \"touchstart\") {\n                inputEvent.preventDefault();\n            }\n            const { scrollOptions } = this.options;\n            if (scrollOptions && scrollOptions.container) {\n                this.dragScroll.dragStart(e, scrollOptions);\n            }\n            return true;\n        }\n    }\n    private check(e: any) {\n        const {\n            datas,\n            inputEvent,\n        } = e;\n        const rect = getRect(e, this.options.ratio, datas.boundArea);\n        const {\n            top,\n            left,\n            width,\n            height,\n        } = rect;\n        this.target.style.cssText\n            += `display: block;`\n            + `left:0px;top:0px;`\n            + `transform: translate(${left}px, ${top}px);`\n            + `width:${width}px;height:${height}px;`;\n\n        const passedTargets = this.hitTest(\n            rect, datas.startX, datas.startY,\n            datas.selectableTargets, datas.selectablePoints,\n        );\n        const selectedTargets = this.passSelectedTargets(passedTargets);\n\n        this.trigger(\"drag\", {\n            ...e,\n            rect,\n        });\n        this.select(selectedTargets, rect, inputEvent);\n        datas.selectedTargets = selectedTargets;\n    }\n    private onDrag = (e: OnDrag) => {\n        const { scrollOptions } = this.options;\n        if (scrollOptions && scrollOptions.container) {\n            if (this.dragScroll.drag(e, scrollOptions)) {\n                return;\n            }\n        }\n        this.check(e);\n    }\n    private onDragEnd = (e: OnDragEvent) => {\n        const { datas, inputEvent } = e;\n        const rect = getRect(e, this.options.ratio, datas.boundArea);\n\n        this.dragScroll.dragEnd();\n        this.target.style.cssText += \"display: none;\";\n\n        if (inputEvent && inputEvent.type !== \"mousedown\" && inputEvent.type !== \"touchstart\") {\n            this.trigger(\"dragEnd\", {\n                isDouble: false,\n                isDrag: false,\n                ...e,\n                rect,\n            });\n        }\n\n        this.selectEnd(\n            datas.startSelectedTargets, datas.selectedTargets, rect, e);\n        this.selectedTargets = datas.selectedTargets;\n    }\n    private sameCombiKey(e: any, isKeyup?: boolean) {\n        const toggleContinueSelect = [].concat(this.options.toggleContinueSelect);\n        const combi = getCombi(e.inputEvent, e.key);\n        const toggleKeys = (isArray(toggleContinueSelect[0]) ? toggleContinueSelect : [toggleContinueSelect]);\n\n        if (isKeyup) {\n            const singleKey = e.key;\n\n            return toggleKeys.some(keys => keys.some(key => key === singleKey));\n        }\n        return toggleKeys.some(keys => keys.every(key => combi.indexOf(key) > -1));\n    }\n    private onKeyDown = (e: any) => {\n        if (!this.sameCombiKey(e)) {\n            return;\n        }\n        this.continueSelect = true;\n        /**\n         * When you keydown the key you specified in toggleContinueSelect, the keydown event is called.\n         * @memberof Selecto\n         * @event keydown\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.trigger(\"keydown\", {});\n    }\n    private onKeyUp = (e: any) => {\n        if (!this.sameCombiKey(e, true)) {\n            return;\n        }\n        this.continueSelect = false;\n        /**\n         * When you keyup the key you specified in toggleContinueSelect, the keyup event is called.\n         * @memberof Selecto\n         * @event keyup\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.trigger(\"keyup\", {});\n    }\n    private onBlur = () => {\n        if (this.toggleContinueSelect && this.continueSelect) {\n            this.continueSelect = false;\n            this.trigger(\"keyup\", {});\n        }\n    }\n    private onDocumentSelectStart = (e: any) => {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        let dragContainer = this.dragContainer;\n\n        if (dragContainer === window) {\n            dragContainer = document.documentElement;\n        }\n        const containers = dragContainer instanceof Element\n            ? [dragContainer] : [].slice.call(dragContainer) as Element[];\n        const target = e.target;\n\n        containers.some(container => {\n            if (container === target || container.contains(target)) {\n                e.preventDefault();\n                return true;\n            }\n        });\n    }\n}\n\ninterface Selecto extends SelectoProperties {\n}\n\nexport default Selecto;\n","import Selecto, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Selecto as any)[name] = modules[name];\n}\n\nexport default Selecto;\n"],"names":["getClient","e","touch","touches","changedTouches","clientX","clientY","createElement","jsx","prevTarget","container","tag","children","attributes","className","style","el","document","name","setAttribute","elChildren","forEach","child","i","split","hasClass","addClass","elStyle","appendChild","h","attrs","_i","_a","_b","_c","diffValue","prev","cur","func","getRect","ratio","boundArea","distX","distY","_d","startX","startY","nextHeight","Math","sqrt","nextWidth","width","abs","height","maxWidth","left","right","maxHeight","top","bottom","tx","min","ty","getDefaultElementPoints","rect","getBoundingClientRect","pos1","pos2","pos3","pos4","injector","styled","CLASS_NAME","PROPERTIES","OPTIONS","__spreadArrays","OPTION_TYPES","boundContainer","target","dragContainer","selectableTargets","Array","selectByClick","Boolean","selectFromInside","continueSelect","toggleContinueSelect","keyContainer","hitRate","Number","scrollOptions","Object","checkInput","preventDefault","cspNonce","String","getElementPoints","Function","EVENTS","METHODS","__extends","options","_super","_this","ChildrenDiffer","DragScroll","clickedTarget","datas","inputEvent","findSelectableTargets","startSelectedTargets","selectedTargets","Infinity","rectContainer","isString","querySelector","hitRect","firstPassedTargets","pointTarget","elementFromPoint","indexOf","parentElement","hasInsideTargets","length","isPreventSelect","stop","type","isTrusted","result","trigger","passSelectedTargets","select","boundsArea","cssText","onDragEnd","dragScroll","dragStart","drag","check","dragEnd","isDouble","isDrag","selectEnd","sameCombiKey","gesto","isFlag","window","documentElement","containers","Element","slice","call","some","contains","undefined","initElement","initDragScroll","setKeyController","differ","setKeyEvent","value","triggerDragStart","off","keycon","destroy","unset","injectResult","removeEvent","onDocumentSelectStart","getEventDatas","getSelectableTargets","selectablePoints","map","dragEvent","onDragStart","KeyController","keydown","onKeyDown","keyup","onKeyUp","on","onBlur","querySelectorAll","parentNode","Gesto","checkWindowBlur","onDrag","addEvent","inject","nonce","selectRect","targets","points","filter","rectLeft","rectTop","rectRight","rectBottom","isStart","rectSize","testLeft","max","testRight","testTop","testBottom","rate","round","direction","offsetX","offsetY","pos","scrollBy","isObject","push","elements","passedTargets","list","prevList","added","removed","index","concat","selected","afterAdded","afterRemoved","afterPrevList","afterList","isDragStart","hitTest","isKeyup","combi","getCombi","key","toggleKeys","isArray","singleKey_1","keys","every","Selecto","Properties","prototype","property","enumerable","configurable","get","setter","camelize","set","defineProperty","EventEmitter","modules"],"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"}