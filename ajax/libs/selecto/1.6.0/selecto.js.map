{"version":3,"file":"selecto.js","sources":["../src/utils.ts","../src/consts.ts","../src/Selecto.tsx","../src/index.umd.ts"],"sourcesContent":["import { Hypertext, Rect } from \"./types\";\nimport { IObject, addClass, hasClass } from \"@daybrush/utils\";\n\nexport function getClient(e: MouseEvent | TouchEvent) {\n    if (\"touches\" in e) {\n        const touch = e.touches[0] || e.changedTouches[0];\n\n        return {\n            clientX: touch.clientX,\n            clientY: touch.clientY,\n        };\n    } else {\n        return {\n            clientX: e.clientX,\n            clientY: e.clientY,\n        };\n    }\n}\n\nexport function createElement(\n    jsx: Hypertext,\n    prevTarget?: HTMLElement | SVGElement,\n    container?: HTMLElement | SVGElement,\n) {\n    const { tag, children, attributes, className, style } = jsx;\n    const el = prevTarget || document.createElement(tag) as HTMLElement | SVGElement;\n\n    for (const name in attributes) {\n        el.setAttribute(name, attributes[name]);\n    }\n    const elChildren = el.children;\n    children.forEach((child, i) => {\n        createElement(child, elChildren[i] as HTMLElement | SVGElement, el);\n    });\n    if (className) {\n        className.split(\" \").forEach(name => {\n            if (!hasClass(el, name)) {\n                addClass(el, name);\n            }\n        });\n    }\n    if (style) {\n        const elStyle = el.style;\n        for (const name in style) {\n            elStyle[name] = style[name];\n        }\n    }\n    if (!prevTarget && container) {\n        container.appendChild(el);\n    }\n    return el;\n}\nexport function h(\n    tag: string,\n    attrs: IObject<any>,\n    ...children: Hypertext[]\n): Hypertext {\n    const {\n        className = \"\",\n        style = {},\n        ...attributes\n    } = attrs || {};\n    return {\n        tag,\n        className,\n        style,\n        attributes,\n        children,\n    };\n}\n\nexport function diffValue<T>(prev: T, cur: T, func: (prev: T, cur: T) => void) {\n    if (prev !== cur) {\n        func(prev, cur);\n    }\n}\n\nexport function getRect(e: any, ratio: number): Rect {\n    let {\n        distX = 0,\n        distY = 0,\n    } = e;\n    const { startX, startY } = e.datas;\n\n    if (ratio > 0) {\n        const nextHeight = Math.sqrt((distX * distX + distY * distY) / (1 + ratio * ratio));\n        const nextWidth = ratio * nextHeight;\n\n        distX = (distX >= 0 ? 1 : -1) * nextWidth;\n        distY = (distY >= 0 ? 1 : -1) * nextHeight;\n    }\n    const tx = Math.min(0, distX);\n    const ty = Math.min(0, distY);\n    // h ^ 2 + (ratio * h) ^ 2 = dist\n    // (1 + ratio ^ 2) * h^2 = dist ^ 2\n    // dist * Math.atan(ratio);\n    const width = Math.abs(distX);\n    const height = Math.abs(distY);\n    const left = startX + tx;\n    const top = startY + ty;\n\n    return {\n        left,\n        top,\n        right: left + width,\n        bottom: top + height,\n        width,\n        height,\n    };\n}\n","import styled from \"css-styled\";\nimport { SelectoOptions } from \"./types\";\n\nexport const injector = styled(`\n:host {\n    position: fixed;\n    display: none;\n    border: 1px solid #4af;\n    background: rgba(68, 170, 255, 0.5);\n    z-index: 100;\n}\n`);\n\n/**\n * @memberof Selecto\n */\nexport const CLASS_NAME = `selecto-selection ${injector.className}`;\n\nexport const PROPERTIES = [\n    \"selectableTargets\",\n    \"selectByClick\",\n    \"selectFromInside\",\n    \"continueSelect\",\n    \"toggleContinueSelect\",\n    \"keyContainer\",\n    \"hitRate\",\n    \"scrollOptions\",\n    \"checkInput\",\n    \"preventDefault\",\n    \"ratio\",\n] as const;\n/**\n * @memberof Selecto\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    \"dragContainer\",\n    \"cspNonce\",\n    ...PROPERTIES,\n] as const;\n\nexport const OPTION_TYPES: { [key in keyof SelectoOptions]: any } = {\n    target: null,\n    container: null,\n    dragContainer: null,\n    selectableTargets: Array,\n    selectByClick: Boolean,\n    selectFromInside: Boolean,\n    continueSelect: Boolean,\n    toggleContinueSelect: Array,\n    keyContainer: null,\n    hitRate: Number,\n    scrollOptions: Object,\n    checkInput: Boolean,\n    preventDefault: Boolean,\n    cspNonce: String,\n    ratio: Number,\n};\n\n/**\n * @memberof Selecto\n */\nexport const EVENTS = [\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"selectStart\",\n    \"select\",\n    \"selectEnd\",\n    \"keydown\",\n    \"keyup\",\n    \"scroll\",\n] as const;\n\n/**\n * @memberof Selecto\n */\nexport const METHODS = [\n    \"clickTarget\",\n    \"setSelectedTargets\",\n    \"triggerDragStart\",\n] as const;\n","import Component from \"@egjs/component\";\nimport Dragger, { OnDrag } from \"@daybrush/drag\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport { isObject, camelize, IObject, addEvent, removeEvent, isArray } from \"@daybrush/utils\";\nimport ChildrenDiffer, { diff, ChildrenDiffResult } from \"@egjs/children-differ\";\nimport DragScroll from \"@scena/dragscroll\";\nimport KeyController, { getCombi } from \"keycon\";\nimport { createElement, h, getClient, diffValue, getRect } from \"./utils\";\nimport { SelectoOptions, Rect, SelectoProperties, OnDragEvent, SelectoEvents } from \"./types\";\nimport { PROPERTIES, injector, CLASS_NAME } from \"./consts\";\n/**\n * Selecto.js is a component that allows you to select elements in the drag area using the mouse or touch.\n * @sort 1\n * @extends eg.Component\n */\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function(value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function(value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\nclass Selecto extends Component {\n    public options: SelectoOptions;\n    private target!: HTMLElement | SVGElement;\n    private dragContainer!: Element | Window | Element[];\n    private container!: HTMLElement;\n    private dragger!: Dragger;\n    private injectResult!: InjectResult;\n    private selectedTargets: Array<HTMLElement | SVGElement> = [];\n    private differ = new ChildrenDiffer<HTMLElement | SVGElement>();\n    private dragScroll: DragScroll = new DragScroll();\n    private keycon!: KeyController;\n    /**\n     *\n     */\n    constructor(\n        options: Partial<SelectoOptions> = {},\n    ) {\n        super();\n        this.target = options.target;\n        this.container = options.container;\n        this.options = {\n            target: null,\n            container: null,\n            dragContainer: null,\n            selectableTargets: [],\n            selectByClick: true,\n            selectFromInside: true,\n            hitRate: 100,\n            continueSelect: false,\n            toggleContinueSelect: null,\n            keyContainer: null,\n            scrollOptions: undefined,\n            checkInput: false,\n            preventDefault: false,\n            cspNonce: \"\",\n            ratio: 0,\n            ...options,\n        };\n        this.initElement();\n        this.initDragScroll();\n        this.setKeyController();\n    }\n    /**\n     * You can set the currently selected targets.\n     */\n    public setSelectedTargets(selectedTargets: Array<HTMLElement | SVGElement>): this {\n        this.selectedTargets = selectedTargets;\n        this.differ = new ChildrenDiffer(selectedTargets);\n\n        return this;\n    }\n    /**\n     * You can get the currently selected targets.\n     */\n    public getSelectedTargets(): Array<HTMLElement | SVGElement> {\n        return this.selectedTargets;\n    }\n    public setKeyContainer(keyContainer: HTMLElement | Document | Window) {\n        const options = this.options;\n\n        diffValue(options.keyContainer, keyContainer, () => {\n            options.keyContainer = keyContainer;\n\n            this.setKeyController();\n        });\n    }\n    public setToggleContinueSelect(toggleContinueSelect: string[][] | string[] | string) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelect, toggleContinueSelect, () => {\n            options.toggleContinueSelect = toggleContinueSelect;\n\n            this.setKeyEvent();\n        });\n    }\n    public setPreventDefault(value: boolean) {\n        this.dragger.options.preventDefault = value;\n    }\n    public setCheckInput(value: boolean) {\n        this.dragger.options.checkInput = value;\n    }\n    /**\n     * `OnDragStart` is triggered by an external event.\n     * @param - external event\n     * @example\n     * import Selecto from \"selecto\";\n     *\n     * const selecto = new Selecto();\n     *\n     * window.addEventListener(\"mousedown\", e => {\n     *   selecto.triggerDragStart(e);\n     * });\n     */\n    public triggerDragStart(e: MouseEvent | TouchEvent) {\n        this.dragger.triggerDragStart(e);\n        return this;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.keycon && this.keycon.destroy();\n        this.dragger.unset();\n        this.injectResult.destroy();\n        removeEvent(document, \"selectstart\", this.onDocumentSelectStart);\n\n        this.keycon = null;\n        this.dragger = null;\n        this.injectResult = null;\n        this.target = null;\n        this.container = null;\n        this.options = null;\n    }\n\n    /**\n     * External click or mouse events can be applied to the selecto.\n     * @params - Extenal click or mouse event\n     * @params - Specify the clicked target directly.\n     */\n    public clickTarget(e: MouseEvent | TouchEvent, clickedTarget?: Element): this {\n        const { clientX, clientY } = getClient(e);\n        const dragEvent: OnDragEvent = {\n            datas: {},\n            clientX,\n            clientY,\n            inputEvent: e,\n        };\n        if (this.onDragStart(dragEvent, clickedTarget)) {\n            this.onDragEnd(dragEvent);\n        }\n        return this;\n    }\n    private setKeyController() {\n        const { keyContainer, toggleContinueSelect } = this.options;\n\n        if (this.keycon) {\n            this.keycon.destroy();\n            this.keycon = null;\n        }\n        if (toggleContinueSelect) {\n            this.keycon = new KeyController(keyContainer || window);\n            this.keycon.keydown(this.onKeyDown).keyup(this.onKeyUp).on(\"blur\", this.onBlur);\n        }\n    }\n    private setKeyEvent() {\n        const { toggleContinueSelect } = this.options;\n        if (!toggleContinueSelect || this.keycon) {\n            return;\n        }\n        this.setKeyController();\n    }\n    private initElement() {\n        this.target = createElement(\n            <div className={CLASS_NAME}></div> as any,\n            this.target,\n            this.container,\n        );\n\n        const target = this.target;\n\n        const { dragContainer, checkInput, preventDefault } = this.options;\n        this.dragContainer = typeof dragContainer === \"string\"\n            ? [].slice.call(document.querySelectorAll(dragContainer))\n            : (this.options.dragContainer || this.target.parentNode as any);\n        this.dragger = new Dragger(this.dragContainer, {\n            container: window,\n            checkInput,\n            preventDefault,\n            dragstart: this.onDragStart,\n            drag: this.onDrag,\n            dragend: this.onDragEnd,\n        });\n        addEvent(document, \"selectstart\", this.onDocumentSelectStart);\n\n        this.injectResult = injector.inject(target, {\n            nonce: this.options.cspNonce,\n        });\n    }\n    private hitTest(\n        selectRect: Rect,\n        clientX: number,\n        clientY: number,\n        targets: Array<HTMLElement | SVGElement>,\n        rects: Rect[],\n    ) {\n        const { hitRate, selectByClick } = this.options;\n        const { left, top, right, bottom } = selectRect;\n        const passedTargets: Array<HTMLElement | SVGElement> = [];\n\n        rects.forEach((rect, i) => {\n            const {\n                left: rectLeft,\n                top: rectTop,\n                right: rectRight,\n                bottom: rectBottom,\n            } = rect;\n            const isStart\n                = rectLeft <= clientX\n                && clientX <= rectRight\n                && rectTop <= clientY\n                && clientY <= rectBottom;\n            const rectSize = (rectRight - rectLeft) * (rectBottom - rectTop);\n            const testLeft = Math.max(rectLeft, left);\n            const testRight = Math.min(rectRight, right);\n            const testTop = Math.max(rectTop, top);\n            const testBottom = Math.min(rectBottom, bottom);\n\n            if (selectByClick && isStart) {\n                passedTargets.push(targets[i]);\n                return;\n            }\n            if (testRight < testLeft || testBottom < testTop) {\n                return;\n            }\n            const rate = Math.round((testRight - testLeft) * (testBottom - testTop) / rectSize * 100);\n\n            if (rate >= hitRate) {\n                passedTargets.push(targets[i]);\n            }\n        });\n\n        return passedTargets;\n    }\n    private initDragScroll() {\n        this.dragScroll.on(\"scroll\", ({ container, direction }) => {\n            this.trigger(\"scroll\", {\n                container,\n                direction,\n            });\n        }).on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n            const datas = inputEvent.datas;\n            datas.startX -= offsetX;\n            datas.startY -= offsetY;\n            datas.selectableRects.forEach(rect => {\n                rect.top -= offsetY;\n                rect.bottom -= offsetY;\n                rect.left -= offsetX;\n                rect.right -= offsetX;\n            });\n            this.dragger.scrollBy(offsetX, offsetY, inputEvent.inputEvent, false);\n\n            inputEvent.distX += offsetX;\n            inputEvent.distY += offsetY;\n            this.check(inputEvent);\n        });\n    }\n    private getSelectableTargets() {\n        const selectableTargets: Array<HTMLElement | SVGElement> = [];\n\n        this.options.selectableTargets.forEach(target => {\n            if (isObject(target)) {\n                selectableTargets.push(target);\n            } else {\n                const elements = [].slice.call(document.querySelectorAll(target));\n\n                elements.forEach(el => {\n                    selectableTargets.push(el);\n                });\n            }\n        });\n\n        return selectableTargets;\n    }\n    private passSelectedTargets(passedTargets: Array<HTMLElement | SVGElement>) {\n        const {\n            list,\n            prevList,\n            added,\n            removed,\n        } = diff(this.selectedTargets, passedTargets) as ChildrenDiffResult<HTMLElement | SVGElement>;\n\n        return added.map(index => list[index]).concat(removed.map(index => prevList[index]));\n    }\n    private select(\n        selectedTargets: Array<HTMLElement | SVGElement>, rect: Rect, inputEvent: any, isStart?: boolean) {\n        const {\n            added,\n            removed,\n            prevList,\n            list,\n        } = this.differ.update(selectedTargets);\n\n        if (isStart) {\n            /**\n             * When the select(drag) starts, the selectStart event is called.\n             * @memberof Selecto\n             * @event selectStart\n             * @param {Selecto.OnSelect} - Parameters for the selectStart event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"selectStart\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * }).on(\"selectEnd\", e => {\n             *   e.afterAdded.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.afterRemoved.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.trigger(\"selectStart\", {\n                selected: selectedTargets,\n                added: added.map(index => list[index]),\n                removed: removed.map(index => prevList[index]),\n                rect,\n                inputEvent,\n            });\n        }\n        if (added.length || removed.length) {\n            /**\n             * When the select in real time, the select event is called.\n             * @memberof Selecto\n             * @event select\n             * @param {Selecto.OnSelect} - Parameters for the select event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"select\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.trigger(\"select\", {\n                selected: selectedTargets,\n                added: added.map(index => list[index]),\n                removed: removed.map(index => prevList[index]),\n                rect,\n                inputEvent,\n            });\n        }\n    }\n    private selectEnd(\n        startSelectedTargets: Array<HTMLElement | SVGElement>,\n        selectedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent,\n    ) {\n        const { inputEvent, isDouble } = e;\n        const {\n            added,\n            removed,\n            prevList,\n            list,\n        } = diff(startSelectedTargets, selectedTargets);\n        const {\n            added: afterAdded,\n            removed: afterRemoved,\n            prevList: afterPrevList,\n            list: afterList,\n        } = diff(this.selectedTargets, selectedTargets);\n        const type = inputEvent.type;\n        const isDragStart = type === \"mousedown\" || type === \"touchstart\";\n\n        /**\n         * When the select(dragEnd or click) ends, the selectEnd event is called.\n         * @memberof Selecto\n         * @event selectEnd\n         * @param {Selecto.OnSelectEnd} - Parameters for the selectEnd event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"selectStart\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * }).on(\"selectEnd\", e => {\n         *   e.afterAdded.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.afterRemoved.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.trigger(\"selectEnd\", {\n            selected: selectedTargets,\n            added: added.map(index => list[index]),\n            removed: removed.map(index => prevList[index]),\n            afterAdded: afterAdded.map(index => afterList[index]),\n            afterRemoved: afterRemoved.map(index => afterPrevList[index]),\n            isDragStart,\n            isDouble: !!isDouble,\n            rect,\n            inputEvent,\n        });\n    }\n    private onDragStart = (e: OnDragEvent, clickedTarget?: Element) => {\n        const { datas, clientX, clientY, inputEvent } = e;\n        const { continueSelect, selectFromInside, selectByClick } = this.options;\n        const selectableTargets = this.getSelectableTargets();\n        const selectableRects = selectableTargets.map(target => {\n            const rect = target.getBoundingClientRect();\n            const { left, top, width, height } = rect;\n\n            return {\n                left,\n                top,\n                right: left + width,\n                bottom: top + height,\n                width,\n                height,\n            };\n        });\n        datas.selectableTargets = selectableTargets;\n        datas.selectableRects = selectableRects;\n        datas.startSelectedTargets = this.selectedTargets;\n\n        let pointTarget = (clickedTarget || document.elementFromPoint(clientX, clientY)) as HTMLElement | SVGElement ;\n        const hitRect = {\n            left: clientX,\n            top: clientY,\n            right: clientX,\n            bottom: clientY,\n            width: 0,\n            height: 0,\n        };\n        while (pointTarget) {\n            if (selectableTargets.indexOf(pointTarget as HTMLElement | SVGElement) > -1) {\n                break;\n            }\n            pointTarget = pointTarget.parentElement;\n        }\n        let firstPassedTargets = pointTarget ? [pointTarget] : [];\n\n        const hasInsideTargets = firstPassedTargets.length > 0;\n        const isPreventSelect = !selectFromInside && hasInsideTargets;\n\n        if (isPreventSelect && !selectByClick) {\n            return false;\n        }\n        const type = inputEvent.type;\n        const isTrusted = type === \"mousedown\" || type === \"touchstart\";\n        /**\n         * When the drag starts, the dragStart event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"dragStart\", e => {\n         *   if (e.inputEvent.target.tagName === \"SPAN\") {\n         *     e.stop();\n         *   }\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result = isTrusted ? this.trigger(\"dragStart\", e) : true;\n\n        if (!result) {\n            return false;\n        }\n\n        if (!continueSelect) {\n            this.selectedTargets = [];\n        } else {\n            firstPassedTargets = this.passSelectedTargets(firstPassedTargets);\n        }\n\n        this.select(firstPassedTargets, hitRect, inputEvent, true);\n        datas.startX = clientX;\n        datas.startY = clientY;\n        datas.selectedTargets = firstPassedTargets;\n        this.target.style.cssText\n            += `left:0px;top:0px;transform: translate(${clientX}px, ${clientY}px)`;\n\n        if (isPreventSelect && selectByClick) {\n            this.onDragEnd(e);\n            inputEvent.preventDefault();\n            return false;\n        } else {\n            if (type === \"touchstart\") {\n                inputEvent.preventDefault();\n            }\n            const { scrollOptions } = this.options;\n            if (scrollOptions && scrollOptions.container) {\n                this.dragScroll.dragStart(e, scrollOptions);\n            }\n            return true;\n        }\n    }\n    private check(e: any) {\n        const {\n            datas,\n            inputEvent,\n        } = e;\n        const rect = getRect(e, this.options.ratio);\n        const {\n            top,\n            left,\n            width,\n            height,\n        } = rect;\n        this.target.style.cssText\n            += `display: block;`\n            + `left:0px;top:0px;`\n            + `transform: translate(${left}px, ${top}px);`\n            + `width:${width}px;height:${height}px;`;\n\n        const passedTargets = this.hitTest(\n            rect, datas.startX, datas.startY, datas.selectableTargets, datas.selectableRects);\n        const selectedTargets = this.passSelectedTargets(passedTargets);\n\n        this.trigger(\"drag\", {\n            ...e,\n            rect,\n        });\n        this.select(selectedTargets, rect, inputEvent);\n        datas.selectedTargets = selectedTargets;\n    }\n    private onDrag = (e: OnDrag) => {\n        const { scrollOptions } = this.options;\n        if (scrollOptions && scrollOptions.container) {\n            if (this.dragScroll.drag(e, scrollOptions)) {\n                return;\n            }\n        }\n        this.check(e);\n    }\n    private onDragEnd = (e: OnDragEvent) => {\n        const { datas } = e;\n        const rect = getRect(e, this.options.ratio);\n        this.dragScroll.dragEnd();\n        this.target.style.cssText += \"display: none;\";\n        this.trigger(\"dragEnd\", {\n            ...e,\n            rect,\n        });\n        this.selectEnd(\n            datas.startSelectedTargets, datas.selectedTargets, rect, e);\n        this.selectedTargets = datas.selectedTargets;\n    }\n    private sameCombiKey(e: any) {\n        const toggleContinueSelect = [].concat(this.options.toggleContinueSelect);\n        const combi = getCombi(e.inputEvent, e.key);\n        const toggleKeys = (isArray(toggleContinueSelect[0]) ? toggleContinueSelect : [toggleContinueSelect]);\n\n        return toggleKeys.some(keys => keys.every(key => combi.indexOf(key) > -1));\n    }\n    private onKeyDown = (e: any) => {\n        if (!this.sameCombiKey(e)) {\n            return;\n        }\n        this.continueSelect = true;\n        /**\n         * When you keydown the key you specified in toggleContinueSelect, the keydown event is called.\n         * @memberof Selecto\n         * @event keydown\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.trigger(\"keydown\", {});\n    }\n    private onKeyUp = (e: any) => {\n        if (!this.sameCombiKey(e)) {\n            return;\n        }\n        this.continueSelect = false;\n        /**\n         * When you keyup the key you specified in toggleContinueSelect, the keyup event is called.\n         * @memberof Selecto\n         * @event keyup\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.trigger(\"keyup\", {});\n    }\n    private onBlur = () => {\n        if (this.toggleContinueSelect && this.continueSelect) {\n            this.trigger(\"keyup\", {});\n        }\n    }\n    private onDocumentSelectStart = (e: any) => {\n        if (!this.dragger.isFlag()) {\n            return;\n        }\n        let dragContainer = this.dragContainer;\n\n        if (dragContainer === window) {\n            dragContainer = document.documentElement;\n        }\n        const containers = dragContainer instanceof Element\n            ? [dragContainer] : [].slice.call(dragContainer) as Element[];\n        const target = e.target;\n\n        containers.some(container => {\n            if (container === target || container.contains(target)) {\n                e.preventDefault();\n                return true;\n            }\n        });\n    }\n}\n\ninterface Selecto extends Component, SelectoProperties {\n    on<T extends keyof SelectoEvents>(eventName: T, handlerToAttach: (event: SelectoEvents[T]) => any): this;\n    on(eventName: string, handlerToAttach: (event: { [key: string]: any }) => any): this;\n    on(events: { [key: string]: (event: { [key: string]: any }) => any }): this;\n}\n\nexport default Selecto;\n","import Selecto, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Selecto as any)[name] = modules[name];\n}\n\nexport default Selecto;\n"],"names":["getClient","e","touch","touches","changedTouches","clientX","clientY","createElement","jsx","prevTarget","container","tag","children","attributes","className","style","el","document","name","setAttribute","elChildren","forEach","child","i","split","hasClass","addClass","elStyle","appendChild","h","attrs","_i","_a","_b","_c","diffValue","prev","cur","func","getRect","ratio","distX","distY","startX","startY","nextHeight","Math","sqrt","nextWidth","tx","min","ty","width","abs","height","left","top","right","bottom","injector","styled","CLASS_NAME","PROPERTIES","OPTIONS","__spreadArrays","OPTION_TYPES","target","dragContainer","selectableTargets","Array","selectByClick","Boolean","selectFromInside","continueSelect","toggleContinueSelect","keyContainer","hitRate","Number","scrollOptions","Object","checkInput","preventDefault","cspNonce","String","EVENTS","METHODS","__extends","options","_super","_this","ChildrenDiffer","DragScroll","clickedTarget","datas","inputEvent","getSelectableTargets","selectableRects","map","rect","getBoundingClientRect","startSelectedTargets","selectedTargets","pointTarget","elementFromPoint","hitRect","indexOf","parentElement","firstPassedTargets","hasInsideTargets","length","isPreventSelect","type","isTrusted","result","trigger","passSelectedTargets","select","cssText","onDragEnd","dragScroll","dragStart","drag","check","dragEnd","selectEnd","sameCombiKey","dragger","isFlag","window","documentElement","containers","Element","slice","call","some","contains","undefined","initElement","initDragScroll","setKeyController","differ","setKeyEvent","value","triggerDragStart","off","keycon","destroy","unset","injectResult","removeEvent","onDocumentSelectStart","dragEvent","onDragStart","KeyController","keydown","onKeyDown","keyup","onKeyUp","on","onBlur","querySelectorAll","parentNode","Dragger","dragstart","onDrag","dragend","addEvent","inject","nonce","selectRect","targets","rects","passedTargets","rectLeft","rectTop","rectRight","rectBottom","isStart","rectSize","testLeft","max","testRight","testTop","testBottom","push","rate","round","direction","offsetX","offsetY","scrollBy","isObject","elements","list","prevList","added","removed","index","concat","selected","isDouble","afterAdded","afterRemoved","afterPrevList","afterList","isDragStart","hitTest","combi","getCombi","key","toggleKeys","isArray","keys","every","Selecto","Properties","prototype","property","enumerable","configurable","get","setter","camelize","set","defineProperty","Component","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}