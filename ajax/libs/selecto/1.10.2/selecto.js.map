{"version":3,"file":"selecto.js","sources":["../src/utils.ts","../src/consts.ts","../src/SelectoManager.tsx","../src/Selecto.tsx","../src/index.umd.ts"],"sourcesContent":["import { Hypertext, Rect } from \"./types\";\nimport { IObject, addClass, hasClass, calculateBoundSize } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\n\nexport function getClient(e: MouseEvent | TouchEvent) {\n    if (\"touches\" in e) {\n        const touch = e.touches[0] || e.changedTouches[0];\n\n        return {\n            clientX: touch.clientX,\n            clientY: touch.clientY,\n        };\n    } else {\n        return {\n            clientX: e.clientX,\n            clientY: e.clientY,\n        };\n    }\n}\n\nexport function createElement(\n    jsx: Hypertext,\n    prevTarget?: HTMLElement | SVGElement,\n    container?: HTMLElement | SVGElement,\n) {\n    const { tag, children, attributes, className, style } = jsx;\n    const el = prevTarget || document.createElement(tag) as HTMLElement | SVGElement;\n\n    for (const name in attributes) {\n        el.setAttribute(name, attributes[name]);\n    }\n    const elChildren = el.children;\n    children.forEach((child, i) => {\n        createElement(child, elChildren[i] as HTMLElement | SVGElement, el);\n    });\n    if (className) {\n        className.split(\" \").forEach(name => {\n            if (!hasClass(el, name)) {\n                addClass(el, name);\n            }\n        });\n    }\n    if (style) {\n        const elStyle = el.style;\n        for (const name in style) {\n            elStyle[name] = style[name];\n        }\n    }\n    if (!prevTarget && container) {\n        container.appendChild(el);\n    }\n    return el;\n}\nexport function h(\n    tag: string,\n    attrs: IObject<any>,\n    ...children: Hypertext[]\n): Hypertext {\n    const {\n        className = \"\",\n        style = {},\n        ...attributes\n    } = attrs || {};\n    return {\n        tag,\n        className,\n        style,\n        attributes,\n        children,\n    };\n}\n\nexport function diffValue<T>(prev: T, cur: T, func: (prev: T, cur: T) => void) {\n    if (prev !== cur) {\n        func(prev, cur);\n    }\n}\n\nexport function getRect(\n    e: any, ratio: number,\n    boundArea = e.datas.boundArea,\n): Rect {\n    let {\n        distX = 0,\n        distY = 0,\n    } = e;\n    const { startX, startY } = e.datas;\n\n    if (ratio > 0) {\n        const nextHeight = Math.sqrt((distX * distX + distY * distY) / (1 + ratio * ratio));\n        const nextWidth = ratio * nextHeight;\n\n        distX = (distX >= 0 ? 1 : -1) * nextWidth;\n        distY = (distY >= 0 ? 1 : -1) * nextHeight;\n    }\n    let width = Math.abs(distX);\n    let height = Math.abs(distY);\n\n    const maxWidth = distX < 0 ? startX - boundArea.left : boundArea.right - startX;\n    const maxHeight = distY < 0 ? startY - boundArea.top : boundArea.bottom - startY;\n\n    [width, height] = calculateBoundSize([width, height], [0, 0], [maxWidth, maxHeight], !!ratio);\n    distX = (distX >= 0 ? 1 : -1) * width;\n    distY = (distY >= 0 ? 1 : -1) * height;\n\n    const tx = Math.min(0, distX);\n    const ty = Math.min(0, distY);\n    const left = startX + tx;\n    const top = startY + ty;\n\n    return {\n        left,\n        top,\n        right: left + width,\n        bottom: top + height,\n        width,\n        height,\n    };\n}\n\nexport function getDefaultElementRect(el: HTMLElement | SVGElement) {\n    const rect = el.getBoundingClientRect();\n    const { left, top, width, height } = rect;\n\n    return {\n        pos1: [left, top],\n        pos2: [left + width, top],\n        pos3: [left, top + height],\n        pos4: [left + width, top + height],\n    };\n}\n\nexport function passTargets(\n    beforeTargets: Array<HTMLElement | SVGElement>,\n    afterTargets: Array<HTMLElement | SVGElement>,\n) {\n    const {\n        list,\n        prevList,\n        added,\n        removed,\n    } = diff(beforeTargets, afterTargets);\n\n    return added.map(index => list[index]).concat(removed.map(index => prevList[index]));\n}\n","import styled from \"css-styled\";\nimport { SelectoOptions } from \"./types\";\n\nexport const injector = styled(`\n:host {\n    position: fixed;\n    display: none;\n    border: 1px solid #4af;\n    background: rgba(68, 170, 255, 0.5);\n    z-index: 100;\n}\n`);\n\n/**\n * @memberof Selecto\n */\nexport const CLASS_NAME = `selecto-selection ${injector.className}`;\n\nexport const PROPERTIES = [\n    \"boundContainer\",\n    \"selectableTargets\",\n    \"selectByClick\",\n    \"selectFromInside\",\n    \"continueSelect\",\n    \"toggleContinueSelect\",\n    \"keyContainer\",\n    \"hitRate\",\n    \"scrollOptions\",\n    \"checkInput\",\n    \"preventDefault\",\n    \"ratio\",\n    \"getElementRect\",\n    \"preventDragFromInside\",\n] as const;\n/**\n * @memberof Selecto\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    \"dragContainer\",\n    \"cspNonce\",\n    ...PROPERTIES,\n] as const;\n\nexport const OPTION_TYPES: { [key in keyof SelectoOptions]: any } = {\n    boundContainer: null,\n    target: null,\n    container: null,\n    dragContainer: null,\n    selectableTargets: Array,\n    selectByClick: Boolean,\n    selectFromInside: Boolean,\n    continueSelect: Boolean,\n    toggleContinueSelect: Array,\n    keyContainer: null,\n    hitRate: Number,\n    scrollOptions: Object,\n    checkInput: Boolean,\n    preventDefault: Boolean,\n    cspNonce: String,\n    ratio: Number,\n    getElementRect: Function,\n    preventDragFromInside: Boolean,\n};\n\n/**\n * @memberof Selecto\n */\nexport const EVENTS = [\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"selectStart\",\n    \"select\",\n    \"selectEnd\",\n    \"keydown\",\n    \"keyup\",\n    \"scroll\",\n] as const;\n\n/**\n * @memberof Selecto\n */\nexport const METHODS = [\n    \"clickTarget\",\n    \"setSelectedTargets\",\n    \"getElementPoints\",\n    \"getSelectedTargets\",\n    \"findSelectableTargets\",\n    \"triggerDragStart\",\n] as const;\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto, { OnDrag, OnDragStart } from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport { isObject, camelize, IObject, addEvent, removeEvent, isArray, isString, between } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport DragScroll from \"@scena/dragscroll\";\nimport KeyController, { getCombi } from \"keycon\";\nimport { getAreaSize, getOverlapPoints, isInside, fitPoints } from \"overlap-area\";\nimport { createElement, h, getClient, diffValue, getRect, getDefaultElementRect, passTargets } from \"./utils\";\nimport { SelectoOptions, SelectoProperties, OnDragEvent, SelectoEvents, Rect } from \"./types\";\nimport { PROPERTIES, injector, CLASS_NAME } from \"./consts\";\n\n/**\n * Selecto.js is a component that allows you to select elements in the drag area using the mouse or touch.\n * @sort 1\n * @extends EventEmitter\n */\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function set(value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function set(value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\nclass Selecto extends EventEmitter<SelectoEvents> {\n    public options: SelectoOptions;\n    private target!: HTMLElement | SVGElement;\n    private dragContainer!: Element | Window | Element[];\n    private container!: HTMLElement;\n    private gesto!: Gesto;\n    private injectResult!: InjectResult;\n    private selectedTargets: Array<HTMLElement | SVGElement> = [];\n    private dragScroll: DragScroll = new DragScroll();\n    private keycon!: KeyController;\n    /**\n     *\n     */\n    constructor(\n        options: Partial<SelectoOptions> = {},\n    ) {\n        super();\n        this.target = options.target;\n        this.container = options.container || document.body;\n        this.options = {\n            target: null,\n            container: null,\n            dragContainer: null,\n            selectableTargets: [],\n            selectByClick: true,\n            selectFromInside: true,\n            hitRate: 100,\n            continueSelect: false,\n            toggleContinueSelect: null,\n            keyContainer: null,\n            scrollOptions: undefined,\n            checkInput: false,\n            preventDefault: false,\n            boundContainer: false,\n            preventDragFromInside: true,\n            getElementRect: getDefaultElementRect,\n            cspNonce: \"\",\n            ratio: 0,\n            ...options,\n        };\n        this.initElement();\n        this.initDragScroll();\n        this.setKeyController();\n    }\n    /**\n     * You can set the currently selected targets.\n     *\n     */\n    public setSelectedTargets(selectedTargets: Array<HTMLElement | SVGElement>): this {\n        this.selectedTargets = selectedTargets;\n\n        return this;\n    }\n    /**\n     * You can get the currently selected targets.\n     */\n    public getSelectedTargets(): Array<HTMLElement | SVGElement> {\n        return this.selectedTargets;\n    }\n    public setKeyContainer(keyContainer: HTMLElement | Document | Window) {\n        const options = this.options;\n\n        diffValue(options.keyContainer, keyContainer, () => {\n            options.keyContainer = keyContainer;\n\n            this.setKeyController();\n        });\n    }\n    public setToggleContinueSelect(toggleContinueSelect: string[][] | string[] | string) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelect, toggleContinueSelect, () => {\n            options.toggleContinueSelect = toggleContinueSelect;\n\n            this.setKeyEvent();\n        });\n    }\n    public setPreventDefault(value: boolean) {\n        this.gesto.options.preventDefault = value;\n    }\n    public setCheckInput(value: boolean) {\n        this.gesto.options.checkInput = value;\n    }\n    /**\n     * `OnDragStart` is triggered by an external event.\n     * @param - external event\n     * @example\n     * import Selecto from \"selecto\";\n     *\n     * const selecto = new Selecto();\n     *\n     * window.addEventListener(\"mousedown\", e => {\n     *   selecto.triggerDragStart(e);\n     * });\n     */\n    public triggerDragStart(e: MouseEvent | TouchEvent) {\n        this.gesto.triggerDragStart(e);\n        return this;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.keycon && this.keycon.destroy();\n        this.gesto.unset();\n        this.injectResult.destroy();\n        removeEvent(document, \"selectstart\", this.onDocumentSelectStart);\n\n        this.keycon = null;\n        this.gesto = null;\n        this.injectResult = null;\n        this.target = null;\n        this.container = null;\n        this.options = null;\n    }\n    public getElementPoints(target: HTMLElement | SVGElement) {\n        const getElementRect = this.getElementRect || getDefaultElementRect;\n        const info = getElementRect(target);\n        const points = [info.pos1, info.pos2, info.pos4, info.pos3];\n\n        if (getElementRect !== getDefaultElementRect) {\n            const rect = target.getBoundingClientRect();\n\n            return fitPoints(points, rect);\n        }\n        return points;\n    }\n    /**\n     * Find for selectableTargets again during drag event\n     */\n    public findSelectableTargets(datas: any = this.gesto.getEventDatas()) {\n        const selectableTargets = this.getSelectableTargets();\n        const selectablePoints = selectableTargets.map(target => this.getElementPoints(target));\n        datas.selectableTargets = selectableTargets;\n        datas.selectablePoints = selectablePoints;\n    }\n    /**\n     * External click or mouse events can be applied to the selecto.\n     * @params - Extenal click or mouse event\n     * @params - Specify the clicked target directly.\n     */\n    public clickTarget(e: MouseEvent | TouchEvent, clickedTarget?: Element): this {\n        const { clientX, clientY } = getClient(e);\n        const dragEvent = {\n            datas: {\n                selectFlag: false,\n            },\n            clientX,\n            clientY,\n            inputEvent: e,\n            isClick: true,\n            stop: () => {\n                return false;\n            },\n        } as any;\n        if (this.onDragStart(dragEvent, clickedTarget)) {\n            this.onDragEnd(dragEvent);\n        }\n        return this;\n    }\n    private setKeyController() {\n        const { keyContainer, toggleContinueSelect } = this.options;\n\n        if (this.keycon) {\n            this.keycon.destroy();\n            this.keycon = null;\n        }\n        if (toggleContinueSelect) {\n            this.keycon = new KeyController(keyContainer || window);\n            this.keycon.keydown(this.onKeyDown).keyup(this.onKeyUp).on(\"blur\", this.onBlur);\n        }\n    }\n    private setKeyEvent() {\n        const { toggleContinueSelect } = this.options;\n        if (!toggleContinueSelect || this.keycon) {\n            return;\n        }\n        this.setKeyController();\n    }\n    private initElement() {\n        this.target = createElement(\n            <div className={CLASS_NAME}></div> as any,\n            this.target,\n            this.container,\n        );\n\n        const target = this.target;\n\n        const { dragContainer, checkInput, preventDefault } = this.options;\n        this.dragContainer = typeof dragContainer === \"string\"\n            ? [].slice.call(document.querySelectorAll(dragContainer))\n            : (this.options.dragContainer || this.target.parentNode as any);\n        this.gesto = new Gesto(this.dragContainer, {\n            checkWindowBlur: true,\n            container: window,\n            checkInput,\n            preventDefault,\n        }).on({\n            dragStart: this.onDragStart,\n            drag: this.onDrag,\n            dragEnd: this.onDragEnd,\n        });\n        addEvent(document, \"selectstart\", this.onDocumentSelectStart);\n\n        this.injectResult = injector.inject(target, {\n            nonce: this.options.cspNonce,\n        });\n    }\n    private hitTest(\n        selectRect: Rect,\n        clientX: number,\n        clientY: number,\n        targets: Array<HTMLElement | SVGElement>,\n        selectablePoints: number[][][],\n    ) {\n        const { hitRate, selectByClick } = this.options;\n        const { left, top, right, bottom } = selectRect;\n        const rectPoints = [\n            [left, top],\n            [right, top],\n            [right, bottom],\n            [left, bottom],\n        ];\n        return targets.filter((_, i) => {\n            const points = selectablePoints[i];\n            const inArea = isInside([clientX, clientY], points);\n\n            if (selectByClick && inArea) {\n                return true;\n            }\n            const overlapPoints = getOverlapPoints(rectPoints, points);\n\n            if (!overlapPoints.length) {\n                return false;\n            }\n            const overlapSize = getAreaSize(overlapPoints);\n            const targetSize = getAreaSize(points);\n            const rate = between(Math.round(overlapSize / targetSize * 100), 0, 100);\n\n            if (rate >= Math.min(100, hitRate)) {\n                return true;\n            }\n            return false;\n        });\n    }\n    private initDragScroll() {\n        this.dragScroll.on(\"scroll\", ({ container, direction }) => {\n            this.trigger(\"scroll\", {\n                container,\n                direction,\n            });\n        }).on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n            const datas = inputEvent.datas;\n            datas.startX -= offsetX;\n            datas.startY -= offsetY;\n            datas.selectablePoints.forEach((points: number[][]) => {\n                points.forEach(pos => {\n                    pos[0] -= offsetX;\n                    pos[1] -= offsetY;\n                });\n            });\n            this.gesto.scrollBy(offsetX, offsetY, inputEvent.inputEvent, false);\n\n            inputEvent.distX += offsetX;\n            inputEvent.distY += offsetY;\n            this.check(inputEvent);\n        });\n    }\n    private getSelectableTargets() {\n        const selectableTargets: Array<HTMLElement | SVGElement> = [];\n\n        this.options.selectableTargets.forEach(target => {\n            if (isObject(target)) {\n                selectableTargets.push(target);\n            } else {\n                const elements = [].slice.call(document.querySelectorAll(target));\n\n                elements.forEach(el => {\n                    selectableTargets.push(el);\n                });\n            }\n        });\n\n        return selectableTargets;\n    }\n    private select(\n        prevSelectedTargets: Array<HTMLElement | SVGElement>,\n        selectedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        inputEvent: any,\n        isStart?: boolean,\n    ) {\n        const {\n            added,\n            removed,\n            prevList,\n            list,\n        } = diff(prevSelectedTargets, selectedTargets);\n\n        this.selectedTargets = selectedTargets;\n\n        if (isStart) {\n            /**\n             * When the select(drag) starts, the selectStart event is called.\n             * @memberof Selecto\n             * @event selectStart\n             * @param {Selecto.OnSelect} - Parameters for the selectStart event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"selectStart\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * }).on(\"selectEnd\", e => {\n             *   e.afterAdded.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.afterRemoved.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.trigger(\"selectStart\", {\n                selected: selectedTargets,\n                added: added.map(index => list[index]),\n                removed: removed.map(index => prevList[index]),\n                rect,\n                inputEvent,\n            });\n        }\n        if (added.length || removed.length) {\n            /**\n             * When the select in real time, the select event is called.\n             * @memberof Selecto\n             * @event select\n             * @param {Selecto.OnSelect} - Parameters for the select event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"select\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.trigger(\"select\", {\n                selected: selectedTargets,\n                added: added.map(index => list[index]),\n                removed: removed.map(index => prevList[index]),\n                rect,\n                inputEvent,\n            });\n        }\n    }\n    private selectEnd(\n        startSelectedTargets: Array<HTMLElement | SVGElement>,\n        startPassedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent,\n    ) {\n        const { inputEvent, isDouble } = e;\n        const {\n            added,\n            removed,\n            prevList,\n            list,\n        } = diff(startSelectedTargets, this.selectedTargets);\n        const {\n            added: afterAdded,\n            removed: afterRemoved,\n            prevList: afterPrevList,\n            list: afterList,\n        } = diff(startPassedTargets, this.selectedTargets);\n        const type = inputEvent && inputEvent.type;\n        const isDragStart = type === \"mousedown\" || type === \"touchstart\";\n\n        /**\n         * When the select(dragEnd or click) ends, the selectEnd event is called.\n         * @memberof Selecto\n         * @event selectEnd\n         * @param {Selecto.OnSelectEnd} - Parameters for the selectEnd event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"selectStart\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * }).on(\"selectEnd\", e => {\n         *   e.afterAdded.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.afterRemoved.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.trigger(\"selectEnd\", {\n            selected: this.selectedTargets,\n            added: added.map(index => list[index]),\n            removed: removed.map(index => prevList[index]),\n            afterAdded: afterAdded.map(index => afterList[index]),\n            afterRemoved: afterRemoved.map(index => afterPrevList[index]),\n            isDragStart,\n            isDouble: !!isDouble,\n            rect,\n            inputEvent,\n        });\n    }\n    private onDragStart = (e: OnDragStart, clickedTarget?: Element) => {\n        const { datas, clientX, clientY, inputEvent } = e;\n        const {\n            continueSelect, selectFromInside, selectByClick,\n            boundContainer,\n            preventDragFromInside = true,\n        } = this.options;\n\n        this.findSelectableTargets(datas);\n        datas.startSelectedTargets = this.selectedTargets;\n\n        let boundArea = { left: -Infinity, top: -Infinity, right: Infinity, bottom: Infinity };\n\n        if (boundContainer) {\n            let rectContainer: HTMLElement;\n\n            if (isString(boundContainer)) {\n                rectContainer = document.querySelector(boundContainer);\n            } else if (boundContainer === true) {\n                rectContainer = this.container;\n            } else {\n                rectContainer = boundContainer;\n            }\n            const rect = rectContainer.getBoundingClientRect();\n\n            boundArea = { left: rect.left, top: rect.top, right: rect.right, bottom: rect.bottom };\n        }\n\n        datas.boundArea = boundArea;\n\n        const hitRect = {\n            left: clientX,\n            top: clientY,\n            right: clientX,\n            bottom: clientY,\n            width: 0,\n            height: 0,\n        };\n        let firstPassedTargets: Array<HTMLElement | SVGElement> = [];\n        if (!selectFromInside || selectByClick) {\n            let pointTarget\n                = (clickedTarget || document.elementFromPoint(clientX, clientY)) as HTMLElement | SVGElement;\n\n            while (pointTarget) {\n                if (datas.selectableTargets.indexOf(pointTarget as HTMLElement | SVGElement) > -1) {\n                    break;\n                }\n                pointTarget = pointTarget.parentElement;\n            }\n            firstPassedTargets = pointTarget ? [pointTarget] : [];\n        }\n        const hasInsideTargets = firstPassedTargets.length > 0;\n        const isPreventSelect = !selectFromInside && hasInsideTargets;\n\n        if (isPreventSelect && !selectByClick) {\n            e.stop();\n            return false;\n        }\n        const type = inputEvent.type;\n        const isTrusted = type === \"mousedown\" || type === \"touchstart\";\n        /**\n         * When the drag starts, the dragStart event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"dragStart\", e => {\n         *   if (e.inputEvent.target.tagName === \"SPAN\") {\n         *     e.stop();\n         *   }\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result = !(e as any).isClick && isTrusted ? this.trigger(\"dragStart\", { ...e }) : true;\n\n        if (!result) {\n            e.stop();\n            return false;\n        }\n\n        if (!continueSelect) {\n            datas.startPassedTargets = [];\n        } else {\n            firstPassedTargets = passTargets(this.selectedTargets, firstPassedTargets);\n            datas.startPassedTargets = this.selectedTargets;\n        }\n        this.select(this.selectedTargets, firstPassedTargets, hitRect, inputEvent, true);\n        datas.startX = clientX;\n        datas.startY = clientY;\n        datas.selectFlag = false;\n        datas.preventDragFromInside = false;\n        datas.boundsArea =\n            this.target.style.cssText\n            += `left:0px;top:0px;transform: translate(${clientX}px, ${clientY}px)`;\n\n        if (isPreventSelect && selectByClick) {\n            inputEvent.preventDefault();\n\n            if (preventDragFromInside) {\n                this.selectEnd(\n                    datas.startSelectedTargets,\n                    datas.startPassedTargets,\n                    hitRect, e,\n                );\n                datas.preventDragFromInside = true;\n            }\n        } else {\n            datas.selectFlag = true;\n            if (type === \"touchstart\") {\n                inputEvent.preventDefault();\n            }\n            const { scrollOptions } = this.options;\n            if (scrollOptions && scrollOptions.container) {\n                this.dragScroll.dragStart(e, scrollOptions);\n            }\n        }\n        return true;\n    }\n    private check(e: any, rect = getRect(e, this.options.ratio)) {\n        const {\n            datas,\n            inputEvent,\n        } = e;\n        const {\n            top,\n            left,\n            width,\n            height,\n        } = rect;\n        const selectFlag = datas.selectFlag;\n        let prevSelectedTargets: Array<HTMLElement | SVGElement> = [];\n        let selectedTargets: Array<HTMLElement | SVGElement> = [];\n        if (selectFlag) {\n            this.target.style.cssText\n                += `display: block;`\n                + `left:0px;top:0px;`\n                + `transform: translate(${left}px, ${top}px);`\n                + `width:${width}px;height:${height}px;`;\n\n            const passedTargets = this.hitTest(\n                rect, datas.startX, datas.startY,\n                datas.selectableTargets, datas.selectablePoints,\n            );\n            prevSelectedTargets = this.selectedTargets;\n            selectedTargets = passTargets(datas.startPassedTargets, passedTargets);\n\n            this.selectedTargets = selectedTargets;\n        }\n\n        this.trigger(\"drag\", {\n            ...e,\n            isSelect: selectFlag,\n            rect,\n        });\n\n        if (selectFlag) {\n            this.select(prevSelectedTargets, selectedTargets, rect, inputEvent);\n        }\n    }\n    private onDrag = (e: OnDrag) => {\n        if (e.datas.selectFlag) {\n            const { scrollOptions } = this.options;\n            if (scrollOptions && scrollOptions.container) {\n                if (this.dragScroll.drag(e, scrollOptions)) {\n                    return;\n                }\n            }\n        }\n        this.check(e);\n    }\n    private onDragEnd = (e: OnDragEvent) => {\n        const { datas, inputEvent } = e;\n        const rect = getRect(e, this.options.ratio);\n        const selectFlag = datas.selectFlag;\n\n        if (inputEvent && !e.isClick) {\n            this.trigger(\"dragEnd\", {\n                isDouble: !!e.isDouble,\n                isDrag: false,\n                isSelect: selectFlag,\n                ...e,\n                rect,\n            });\n        }\n        this.target.style.cssText += \"display: none;\";\n        if (selectFlag) {\n            datas.selectFlag = false;\n            this.dragScroll.dragEnd();\n        }\n        if (!datas.preventDragFromInside) {\n            this.selectEnd(\n                datas.startSelectedTargets,\n                datas.startPassedTargets,\n                rect, e,\n            );\n        }\n    }\n    private sameCombiKey(e: any, isKeyup?: boolean) {\n        const toggleContinueSelect = [].concat(this.options.toggleContinueSelect);\n        const combi = getCombi(e.inputEvent, e.key);\n        const toggleKeys = (isArray(toggleContinueSelect[0]) ? toggleContinueSelect : [toggleContinueSelect]);\n\n        if (isKeyup) {\n            const singleKey = e.key;\n\n            return toggleKeys.some(keys => keys.some(key => key === singleKey));\n        }\n        return toggleKeys.some(keys => keys.every(key => combi.indexOf(key) > -1));\n    }\n    private onKeyDown = (e: any) => {\n        if (!this.sameCombiKey(e)) {\n            return;\n        }\n        this.continueSelect = true;\n        /**\n         * When you keydown the key you specified in toggleContinueSelect, the keydown event is called.\n         * @memberof Selecto\n         * @event keydown\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.trigger(\"keydown\", {});\n    }\n    private onKeyUp = (e: any) => {\n        if (!this.sameCombiKey(e, true)) {\n            return;\n        }\n        this.continueSelect = false;\n        /**\n         * When you keyup the key you specified in toggleContinueSelect, the keyup event is called.\n         * @memberof Selecto\n         * @event keyup\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.trigger(\"keyup\", {});\n    }\n    private onBlur = () => {\n        if (this.toggleContinueSelect && this.continueSelect) {\n            this.continueSelect = false;\n            this.trigger(\"keyup\", {});\n        }\n    }\n    private onDocumentSelectStart = (e: any) => {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        let dragContainer = this.dragContainer;\n\n        if (dragContainer === window) {\n            dragContainer = document.documentElement;\n        }\n        const containers = dragContainer instanceof Element\n            ? [dragContainer] : [].slice.call(dragContainer) as Element[];\n        const target = e.target;\n\n        containers.some(container => {\n            if (container === target || container.contains(target)) {\n                e.preventDefault();\n                return true;\n            }\n        });\n    }\n}\n\ninterface Selecto extends SelectoProperties {\n}\n\nexport default Selecto;\n","import SelectoManager from \"./SelectoManager\";\n\nclass Selecto extends SelectoManager {\n\n}\nexport default Selecto;\n","import Selecto, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Selecto as any)[name] = modules[name];\n}\n\nexport default Selecto;\n"],"names":["getClient","e","touch","touches","changedTouches","clientX","clientY","createElement","jsx","prevTarget","container","tag","children","attributes","className","style","el","document","name","setAttribute","elChildren","forEach","child","i","split","hasClass","addClass","elStyle","appendChild","h","attrs","_i","_a","_b","_c","diffValue","prev","cur","func","getRect","ratio","boundArea","datas","distX","distY","_d","startX","startY","nextHeight","Math","sqrt","nextWidth","width","abs","height","maxWidth","left","right","maxHeight","top","bottom","tx","min","ty","getDefaultElementRect","rect","getBoundingClientRect","pos1","pos2","pos3","pos4","passTargets","beforeTargets","afterTargets","list","prevList","added","removed","map","index","concat","injector","styled","CLASS_NAME","PROPERTIES","OPTIONS","__spreadArrays","OPTION_TYPES","boundContainer","target","dragContainer","selectableTargets","Array","selectByClick","Boolean","selectFromInside","continueSelect","toggleContinueSelect","keyContainer","hitRate","Number","scrollOptions","Object","checkInput","preventDefault","cspNonce","String","getElementRect","Function","preventDragFromInside","EVENTS","METHODS","__extends","options","_super","_this","DragScroll","clickedTarget","inputEvent","findSelectableTargets","startSelectedTargets","selectedTargets","Infinity","rectContainer","isString","querySelector","hitRect","firstPassedTargets","pointTarget","elementFromPoint","indexOf","parentElement","hasInsideTargets","length","isPreventSelect","stop","type","isTrusted","result","isClick","trigger","startPassedTargets","select","selectFlag","boundsArea","cssText","selectEnd","dragScroll","dragStart","drag","check","isDouble","isDrag","isSelect","dragEnd","sameCombiKey","gesto","isFlag","window","documentElement","containers","Element","slice","call","some","contains","body","undefined","initElement","initDragScroll","setKeyController","setKeyEvent","value","triggerDragStart","off","keycon","destroy","unset","injectResult","removeEvent","onDocumentSelectStart","info","points","fitPoints","getEventDatas","getSelectableTargets","selectablePoints","getElementPoints","dragEvent","onDragStart","onDragEnd","KeyController","keydown","onKeyDown","keyup","onKeyUp","on","onBlur","querySelectorAll","parentNode","Gesto","checkWindowBlur","onDrag","addEvent","inject","nonce","selectRect","targets","rectPoints","filter","_","inArea","isInside","overlapPoints","getOverlapPoints","overlapSize","getAreaSize","targetSize","rate","between","round","direction","offsetX","offsetY","pos","scrollBy","isObject","push","elements","prevSelectedTargets","isStart","selected","afterAdded","afterRemoved","afterPrevList","afterList","isDragStart","passedTargets","hitTest","isKeyup","combi","getCombi","key","toggleKeys","isArray","singleKey_1","keys","every","Selecto","Properties","prototype","property","enumerable","configurable","get","setter","camelize","set","defineProperty","EventEmitter","SelectoManager","modules"],"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"}