import{B as e,p as t,o as n}from"./index-82df5684.js";let s=0;export default class extends e{constructor(e,t){super(e,t),this.debuggerId=t}connected(){this.connect(),this.log("connected")}changed(e,t){this.log("changed",{name:e,value:t})}disconnected(){this.log("disconnected")}connect(){const e=this.getDebugger();e&&e.nu("debugger").then(e=>{e.componentPromise.then(()=>{const{host:t}=this;if(!t.nuDebugId){const e=++s;window["el"+e]=t,Object.keys(t.nuBehaviors||{}).forEach(e=>{window[`${e}${s}`]=t.nuBehaviors[e]}),t.nuDebugId=e}e.set({target:t})})})}getDebugger(){const{host:e}=this;let s=this.debuggerId.trim();if(this.debugger&&this.debugger.nuId===s)return this.debugger;if(!s){const s=t(e,"nu-debug");return s?(n(s),this.debuggerId=s.nuId,this.debugger=s,s):void 0}const o=t(e,"#"+s.trim());return o&&o.nu?(this.debugger=o,o):void 0}log(e,t){const n=this.getDebugger();n&&n.nu("debugger").then(n=>{n.componentPromise.then(()=>{n.component.log(e,t)})})}}
