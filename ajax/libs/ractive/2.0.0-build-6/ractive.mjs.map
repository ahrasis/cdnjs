{"version":3,"file":"ractive.mjs","sources":["../src/polyfills/Object.assign.js","../src/polyfills/array.find.js","../src/polyfills/node.contains.js","../src/polyfills/performance.now.js","../src/polyfills/Promise.js","../src/polyfills/requestAnimationFrame.js"],"sourcesContent":["/* istanbul ignore if */\nif (!Object.assign) {\n  Object.assign = function (target, ...sources) {\n    if (target == null) throw new TypeError('Cannot convert undefined or null to object');\n\n    const to = Object(target);\n    const sourcesLength = sources.length;\n\n    for (let index = 0; index < sourcesLength; index++) {\n      const nextSource = sources[index];\n      for (const nextKey in nextSource) {\n        if (!Object.prototype.hasOwnProperty.call(nextSource, nextKey)) continue;\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n\n    return to;\n  };\n}\n","import { isFunction, isUndefined } from 'utils/is';\nimport { hasOwn, defineProperty } from 'utils/object';\n\n/* istanbul ignore if */\nif (!Array.prototype.find) {\n  defineProperty(Array.prototype, 'find', {\n    value(callback, thisArg) {\n      if (this === null || isUndefined(this))\n        throw new TypeError('Array.prototype.find called on null or undefined');\n\n      if (!isFunction(callback)) throw new TypeError(`${callback} is not a function`);\n\n      const array = Object(this);\n      const arrayLength = array.length >>> 0;\n\n      for (let index = 0; index < arrayLength; index++) {\n        if (!hasOwn(array, index)) continue;\n        if (!callback.call(thisArg, array[index], index, array)) continue;\n        return array[index];\n      }\n\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n}\n","// NOTE: Node doesn't exist in IE8. Nothing can be done.\n/* istanbul ignore if */\nif (\n  typeof window !== 'undefined' &&\n  window.Node &&\n  window.Node.prototype &&\n  !window.Node.prototype.contains\n) {\n  Node.prototype.contains = function (node) {\n    if (!node) throw new TypeError('node required');\n\n    do {\n      if (this === node) return true;\n    } while ((node = node && node.parentNode));\n\n    return false;\n  };\n}\n","/* istanbul ignore if */\nif (typeof window !== 'undefined' && window.performance && !window.performance.now) {\n  window.performance = window.performance || {};\n\n  const nowOffset = Date.now();\n\n  window.performance.now = function () {\n    return Date.now() - nowOffset;\n  };\n}\n","import { base } from 'config/environment';\nimport { isFunction, isObjectType } from 'utils/is';\n\n/* istanbul ignore if */\nif (!base.Promise) {\n  const PENDING = {};\n  const FULFILLED = {};\n  const REJECTED = {};\n\n  const Promise = (base.Promise = function (callback) {\n    const fulfilledHandlers = [];\n    const rejectedHandlers = [];\n    let state = PENDING;\n    let result;\n    let dispatchHandlers;\n\n    const makeResolver = newState => {\n      return function (value) {\n        if (state !== PENDING) return;\n        result = value;\n        state = newState;\n        dispatchHandlers = makeDispatcher(\n          state === FULFILLED ? fulfilledHandlers : rejectedHandlers,\n          result\n        );\n        wait(dispatchHandlers);\n      };\n    };\n\n    const fulfill = makeResolver(FULFILLED);\n    const reject = makeResolver(REJECTED);\n\n    try {\n      callback(fulfill, reject);\n    } catch (err) {\n      reject(err);\n    }\n\n    return {\n      // `then()` returns a Promise - 2.2.7\n      then(onFulfilled, onRejected) {\n        const promise2 = new Promise((fulfill, reject) => {\n          const processResolutionHandler = (handler, handlers, forward) => {\n            if (isFunction(handler)) {\n              handlers.push(p1result => {\n                try {\n                  resolve(promise2, handler(p1result), fulfill, reject);\n                } catch (err) {\n                  reject(err);\n                }\n              });\n            } else {\n              handlers.push(forward);\n            }\n          };\n\n          processResolutionHandler(onFulfilled, fulfilledHandlers, fulfill);\n          processResolutionHandler(onRejected, rejectedHandlers, reject);\n\n          if (state !== PENDING) {\n            wait(dispatchHandlers);\n          }\n        });\n        return promise2;\n      },\n      catch(onRejected) {\n        return this.then(null, onRejected);\n      },\n      finally(callback) {\n        return this.then(\n          v => {\n            callback();\n            return v;\n          },\n          e => {\n            callback();\n            throw e;\n          }\n        );\n      }\n    };\n  });\n\n  Promise.all = function (promises) {\n    return new Promise((fulfill, reject) => {\n      const result = [];\n      let pending;\n      let i;\n\n      if (!promises.length) {\n        fulfill(result);\n        return;\n      }\n\n      const processPromise = (promise, i) => {\n        if (promise && isFunction(promise.then)) {\n          promise.then(value => {\n            result[i] = value;\n            --pending || fulfill(result);\n          }, reject);\n        } else {\n          result[i] = promise;\n          --pending || fulfill(result);\n        }\n      };\n\n      pending = i = promises.length;\n\n      while (i--) {\n        processPromise(promises[i], i);\n      }\n    });\n  };\n\n  Promise.race = function (promises) {\n    return new Promise((fulfill, reject) => {\n      let pending = true;\n      function ok(v) {\n        if (!pending) return;\n        pending = false;\n        fulfill(v);\n      }\n      function fail(e) {\n        if (!pending) return;\n        pending = false;\n        reject(e);\n      }\n      for (let i = 0; i < promises.length; i++) {\n        if (promises[i] && isFunction(promises[i].then)) {\n          promises[i].then(ok, fail);\n        }\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && isFunction(value.then)) return value;\n    return new Promise(fulfill => {\n      fulfill(value);\n    });\n  };\n\n  Promise.reject = function (reason) {\n    if (reason && isFunction(reason.then)) return reason;\n    return new Promise((fulfill, reject) => {\n      reject(reason);\n    });\n  };\n\n  // TODO use MutationObservers or something to simulate setImmediate\n  const wait = function (callback) {\n    setTimeout(callback, 0);\n  };\n\n  const makeDispatcher = function (handlers, result) {\n    return function () {\n      for (let handler; (handler = handlers.shift()); ) {\n        handler(result);\n      }\n    };\n  };\n\n  const resolve = function (promise, x, fulfil, reject) {\n    let then;\n    if (x === promise) {\n      throw new TypeError(`A promise's fulfillment handler cannot return the same promise`);\n    }\n    if (x instanceof Promise) {\n      x.then(fulfil, reject);\n    } else if (x && (isObjectType(x) || isFunction(x))) {\n      try {\n        then = x.then;\n      } catch (e) {\n        reject(e);\n        return;\n      }\n      if (isFunction(then)) {\n        let called;\n\n        const resolvePromise = function (y) {\n          if (called) return;\n          called = true;\n          resolve(promise, y, fulfil, reject);\n        };\n        const rejectPromise = function (r) {\n          if (called) return;\n          called = true;\n          reject(r);\n        };\n\n        try {\n          then.call(x, resolvePromise, rejectPromise);\n        } catch (e) {\n          if (!called) {\n            reject(e);\n            called = true;\n            return;\n          }\n        }\n      } else {\n        fulfil(x);\n      }\n    } else {\n      fulfil(x);\n    }\n  };\n}\n","/* istanbul ignore if */\nif (\n  typeof window !== 'undefined' &&\n  !(window.requestAnimationFrame && window.cancelAnimationFrame)\n) {\n  let lastTime = 0;\n  window.requestAnimationFrame = function (callback) {\n    const currentTime = Date.now();\n    const timeToNextCall = Math.max(0, 16 - (currentTime - lastTime));\n    const id = window.setTimeout(() => {\n      callback(currentTime + timeToNextCall);\n    }, timeToNextCall);\n    lastTime = currentTime + timeToNextCall;\n    return id;\n  };\n  window.cancelAnimationFrame = function (id) {\n    clearTimeout(id);\n  };\n}\n"],"names":["const","let","Promise","e"],"mappings":"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}