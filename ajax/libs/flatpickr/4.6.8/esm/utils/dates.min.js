import{tokenRegex,revFormat,formats}from"./formatting";import{defaults}from"../types/options";import{english}from"../l10n/default";export const createDateFormatter=({config:e=defaults,l10n:t=english,isMobile:o=!1})=>(n,r,a)=>{const s=a||t;return void 0===e.formatDate||o?r.split("").map((t,o,r)=>formats[t]&&"\\"!==r[o-1]?formats[t](n,s,e):"\\"!==t?t:"").join(""):e.formatDate(n,r,s)};export const createDateParser=({config:e=defaults,l10n:t=english})=>(o,n,r,a)=>{if(0!==o&&!o)return;const s=a||t;let i;const f=o;if(o instanceof Date)i=new Date(o.getTime());else if("string"!=typeof o&&void 0!==o.toFixed)i=new Date(o);else if("string"==typeof o){const t=n||(e||defaults).dateFormat,a=String(o).trim();if("today"===a)i=new Date,r=!0;else if(/Z$/.test(a)||/GMT$/.test(a))i=new Date(o);else if(e&&e.parseDate)i=e.parseDate(o,t);else{i=e&&e.noCalendar?new Date((new Date).setHours(0,0,0,0)):new Date((new Date).getFullYear(),0,1,0,0,0,0);let n,r=[];for(let e=0,a=0,f="";e<t.length;e++){const l=t[e],m="\\"===l,g="\\"===t[e-1]||m;if(tokenRegex[l]&&!g){f+=tokenRegex[l];const e=new RegExp(f).exec(o);e&&(n=!0)&&r["Y"!==l?"push":"unshift"]({fn:revFormat[l],val:e[++a]})}else m||(f+=".");r.forEach(({fn:e,val:t})=>i=e(i,t,s)||i)}i=n?i:void 0}}if(i instanceof Date&&!isNaN(i.getTime()))return!0===r&&i.setHours(0,0,0,0),i;e.errorHandler(new Error(`Invalid date provided: ${f}`))};export function compareDates(e,t,o=!0){return!1!==o?new Date(e.getTime()).setHours(0,0,0,0)-new Date(t.getTime()).setHours(0,0,0,0):e.getTime()-t.getTime()};export function compareTimes(e,t){return 3600*(e.getHours()-t.getHours())+60*(e.getMinutes()-t.getMinutes())+e.getSeconds()-t.getSeconds()};export const isBetween=(e,t,o)=>e>Math.min(t,o)&&e<Math.max(t,o);export const duration={DAY:864e5};