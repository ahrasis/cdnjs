// ZzFX - Zuper Zmall Zound Zynth
// MIT License - Copyright 2019 Frank Force
// https://github.com/KilledByAPixel/ZzFX

"use strict";class _ZZFX{constructor(){this.x=this.CreateAudioContext(),this.volume=.3,this.sampleRate=44100,this.samples=0}Play(a){var t=a&&"object"==typeof a?this.SoundToArray(a):arguments;return t=this.BuildSamples(...t),this.PlaySamples(t)}PlaySamples(a){const t=this.x.createBuffer(1,a.length,this.sampleRate),n=this.x.createBufferSource();return t.getChannelData(0).set(a),n.buffer=t,n.connect(this.x.destination),n.start(),this.samples=a,n}BuildSamples(a=1,t=.05,n=220,r=0,e=0,o=.1,h=0,s=1,d=0,m=0,u=0,i=0,M=0,l=0,c=0,p=0,f=0,S=1,x=0){const y=2*Math.PI;var B=this.sampleRate;const C=d*=500*y/B**2,Z=(0<c?1:-1)*y/4;t=n*=(1+t*(2*Math.random()-1))*y/B,r=99+r*B|0,x=x*B|0,e=e*B|0,o=o*B|0,f=f*B|0,m*=500*y/B**3,c*=y/B,u*=y/B,i*=B,M*=B,B=Math.max(1,Math.min(r+x+e+o+f,10*B));let b=[],v=0,A=0,P=0,F=1,R=0,T=0,X=0;for(;P<B;b[P++]=X)++T>100*p&&(T=0,X=v*n*Math.sin(A*c-Z),X=(0<(X=h?1<h?2<h?3<h?Math.sin((X%y)**3):Math.max(Math.min(Math.tan(X),1),-1):1-(2*X/y%2+2)%2:1-4*Math.abs(Math.round(X/y)-X/y):Math.sin(X))?1:-1)*Math.abs(X)**s,X*=a*this.volume*(P<r?P/r:P<r+x?1-(P-r)/x*(1-S):P<r+x+e?S:P<B-f?(1-(B-P+o)/o)*S:0),X=f?X/2+(f>P?0:(P<B-f?1:(P-B)/f)*b[P-f]/2):X),v+=1+l*(2*Math.random()-1),A+=1+l*(2*Math.random()-1),n+=d+=m,F&&++F>i&&(n+=u,t+=u,F=0),M&&++R>M&&(n=t,d=C,R=1,F=F||1);return b}BuildRandomSound(){const a=Math.random()**3,t=Math.random()**3,n=Math.random()**3,r=a+Math.random()**3+t+n;return this.BuildSound(1,.05,2e3*Math.random()**2,a,t,n,5*Math.random()|0,3*Math.random()**2,(.5>Math.random())*Math.random()**3*99*(.5>Math.random()?1:-1),(.5>Math.random())*Math.random()**3*99*(.5>Math.random()?1:-1),(.5>Math.random())*Math.random()**2*1e3*(.5>Math.random()?1:-1),Math.random()**2*r,(.5>Math.random())*Math.random()*r,(.5>Math.random())*Math.random()**4,(.5>Math.random())*Math.random()**3*9*(.5>Math.random()?1:-1),(.5>Math.random())*Math.random()**4,(.5>Math.random())*Math.random()**3/2,(.5>Math.random())*Math.random(),(.5>Math.random())*Math.random())}BuildSound(a=1,t=.05,n=220,r=0,e=0,o=.1,h=0,s=1,d=0,m=0,u=0,i=0,M=0,l=0,c=0,p=0,f=0,S=1,x=0){return{volume:a,randomness:t,frequency:n,attack:r,sustain:e,release:o,shape:h,shapeCurve:s,slide:d,deltaSlide:m,pitchJump:u,pitchJumpTime:i,repeatTime:M,noise:l,modulation:c,bitCrush:p,delay:f,sustainVolume:S,decay:x}}GetNote(a=440,t=0){return a*2**(t/12)}SoundToArray(a){const t=this.BuildSound(),n=[];for(const r in t)n.push(a[r]);return n}CreateAudioContext(){const a=new(AudioContext||webkitAudioContext);return a.a=a.createBufferSource,a.createBufferSource=((t=a.a())=>(t.start=t.start||t.noteOn,t.stop=t.stop||t.noteOff,t)),a}}const ZZFX=new _ZZFX;function zzfx(){return ZZFX.Play(...arguments)}