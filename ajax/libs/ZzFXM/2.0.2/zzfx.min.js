zzfx=((...t)=>zzfxP(zzfxG(...t))),zzfxP=((...t)=>{let z=zzfxX.createBufferSource(),a=zzfxX.createBuffer(t.length,t[0].length,zzfxR);return t.map((t,z)=>a.getChannelData(z).set(t)),z.buffer=a,z.connect(zzfxX.destination),z.start(),z}),zzfxG=((t=1,z=.05,a=220,e=0,n=0,f=.1,x=0,h=1,r=0,M=0,i=0,o=0,s=0,u=0,c=0,d=0,b=0,l=1,m=0,X=zzfxR,g=99+e*X,C=n*X,P=f*X,R=m*X,p=b*X,w=2*Math.PI,A=(t=>0<t?1:-1),B=g+R+C+P+p,G=(r*=500*w/X**2),V=(a*=(1+2*z*Math.random()-z)*w/X),k=A(c)*w/4,D=0,I=0,S=0,j=0,q=0,v=0,y=1,E=[])=>{for(;S<B;E[S++]=v)++q>100*d&&(q=0,v=D*a*Math.sin(I*c*w/X-k),v=A(v=x?1<x?2<x?3<x?Math.sin((v%w)**3):Math.max(Math.min(Math.tan(v),1),-1):1-(2*v/w%2+2)%2:1-4*Math.abs(Math.round(v/w)-v/w):Math.sin(v))*Math.abs(v)**h*t*zzfxV*(S<g?S/g:S<g+R?1-(S-g)/R*(1-l):S<g+R+C?l:S<B-p?(B-S-p)/P*l:0),v=p?v/2+(p>S?0:(S<B-p?1:(S-B)/p)*E[S-p|0]/2):v),D+=1-u+1e9*(Math.sin(S)+1)%2*u,I+=1-u+1e9*(Math.sin(S)**2+1)%2*u,a+=r+=500*M*w/X**3,y&&++y>o*X&&(a+=i*w/X,V+=i*w/X,y=0),s&&++j>s*X&&(a=V,r=G,j=1,y=y||1);return E}),zzfxV=.3,zzfxR=44100,zzfxX=new(top.AudioContext||webkitAudioContext);