/*! easy-toggle-state v1.14.1 | (c) 2020 Matthieu Bu√© <https://twikito.com> | MIT License | https://twikito.github.io/easy-toggle-state/ */
!function(){"use strict";const t=document.documentElement.getAttribute("data-easy-toggle-state-custom-prefix")||"toggle",e=(e,r=(()=>t)())=>["data",r,e].filter(Boolean).join("-"),r=e("arrows"),i="aria-checked",n=e("class"),s=e("class-on-target"),a=e("class-on-trigger"),o="is-active",c=e("escape"),u=e("event"),l="aria-expanded",g=e("group"),d="aria-hidden",h=e("is-active"),A=e("modal"),b=e("outside"),f=e("outside-event"),v="aria-pressed",$=e("radio-group"),m="aria-selected",E=e("target"),w=e("target-all"),p=e("target-next"),y=e("target-parent"),k=e("target-previous"),L=e("target-self"),x=e("state"),O=e("trigger-off"),S=new Event("toggleAfter"),D=new Event("toggleBefore"),z=(t,e)=>{const r=t?`[${t}]`:"";if(e)return[...e.querySelectorAll(r)];const i=[`[${n}]${r}`,`[${a}]${r}`,`[${s}][${E}]${r}`,`[${s}][${w}]${r}`,`[${s}][${p}]${r}`,`[${s}][${k}]${r}`,`[${s}][${y}]${r}`,`[${s}][${L}]${r}`].join().trim();return[...document.querySelectorAll(i)]},I=(t,e)=>t.dispatchEvent(e),T=t=>"easyToggleState_"+t,q=(t,e={[i]:t[T("isActive")],[l]:t[T("isActive")],[d]:!t[T("isActive")],[v]:t[T("isActive")],[m]:t[T("isActive")]})=>Object.keys(e).forEach(r=>t.hasAttribute(r)&&t.setAttribute(r,e[r])),K=(t,e,r=!1)=>`This trigger has the class name '${t}' filled in both attributes '${n}' and '${e}'. As a result, this class will be toggled ${r&&"on its target(s)"} twice at the same time.`,j=(t,e)=>(t.getAttribute(e)||"").split(" ").filter(Boolean),B=t=>{if(t.hasAttribute(n)&&t.getAttribute(n)&&(t.hasAttribute(a)||t.hasAttribute(s))){const e=j(t,a),r=j(t,s);j(t,n).forEach(i=>{e.includes(i)&&console.warn(K(i,a),t),r.includes(i)&&console.warn(K(i,s,!0),t)})}const e=[n,a,s].reduce((e,r)=>{const i=j(t,r);return(r===n||r===a)&&e.trigger.push(...i),(r===n||r===s)&&e.target.push(...i),e},{trigger:[],target:[]});return!e.trigger.length&&(t.hasAttribute(n)||t.hasAttribute(a))&&e.trigger.push(o),!e.target.length&&(t.hasAttribute(n)||t.hasAttribute(s))&&e.target.push(o),e},Y=t=>{const e=t.hasAttribute(g)?g:$;return z(`${e}="${t.getAttribute(e)}"`).filter(t=>t[T("isActive")])},C=(t,e)=>{t||console.warn(`You should fill the attribute '${e}' with a selector`)},H=(t,e)=>{if(0===e.length)return console.warn(`There's no match with the selector '${t}' for this trigger`),[];const r=t.match(/#\w+/gi);return r&&r.forEach(t=>{const r=[...e].filter(e=>e.id===t.slice(1));r.length>1&&console.warn(`There's ${r.length} matches with the selector '${t}' for this trigger`)}),[...e]},M=(t,e)=>e.forEach(e=>{t.classList.toggle(e)}),R={},U=t=>document.addEventListener(t.getAttribute(f)||t.getAttribute(u)||"click",_,!1),_=t=>{const e=t.target,r=t.type;let i=!1;z(b).filter(t=>t.getAttribute(f)===r||t.getAttribute(u)===r&&!t.hasAttribute(f)||"click"===r&&!t.hasAttribute(u)&&!t.hasAttribute(f)).forEach(t=>{const r=e.closest(`[${x}="true"]`);r&&r[T("trigger")]===t&&(i=!0),i||t===e||t.contains(e)||!t[T("isActive")]||(t.hasAttribute(g)||t.hasAttribute($)?Q:N)(t)}),i||document.removeEventListener(r,_,!1);const o=e.closest(`[${n}][${b}],[${a}][${b}],[${s}][${b}]`);o&&o[T("isActive")]&&U(e)},F=t=>N(t.currentTarget.targetElement),G=t=>{if(t.hasAttribute(b))return t.hasAttribute($)?console.warn(`You can't use '${b}' on a radio grouped trigger`):t[T("isActive")]?U(t):void 0},J=(t,e,r)=>(t=>{if(t.hasAttribute(E)||t.hasAttribute(w)){const e=t.getAttribute(E)||t.getAttribute(w);return C(e,t.hasAttribute(E)?E:w),H(e,document.querySelectorAll(e))}if(t.hasAttribute(y)){const e=t.getAttribute(y);return C(e,y),H(e,t.parentElement.querySelectorAll(e))}if(t.hasAttribute(L)){const e=t.getAttribute(L);return C(e,L),H(e,t.querySelectorAll(e))}return t.hasAttribute(k)?H("previous",[t.previousElementSibling].filter(Boolean)):t.hasAttribute(p)?H("next",[t.nextElementSibling].filter(Boolean)):[]})(t).forEach(i=>{I(i,D),i[T("isActive")]=!i[T("isActive")],q(i),r?i.classList.add(...e):M(i,e),t.hasAttribute(b)&&(i.setAttribute(x,t[T("isActive")]),i[T("trigger")]=t),t.hasAttribute(A)&&(i[T("isActive")]?(R[i]=(t=>e=>{const r=[...t.querySelectorAll("a[href], area[href], input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]")];if(!r.length||"Tab"!==e.key)return;const i=e.target,n=r[0],s=r[r.length-1];return-1===r.indexOf(i)?(e.preventDefault(),n.focus()):e.shiftKey&&i===n?(e.preventDefault(),s.focus()):e.shiftKey||i!==s?void 0:(e.preventDefault(),n.focus())})(i),document.addEventListener("keydown",R[i],!1)):(document.removeEventListener("keydown",R[i],!1),delete R[i])),I(i,S),((t,e)=>{const r=z(O,t);if(0!==r.length)e[T("isActive")]?r.forEach(t=>{t.targetElement=e,t.addEventListener("click",F,!1)}):(r.forEach(t=>{t.removeEventListener("click",F,!1)}),e.focus())})(i,t)}),N=t=>{I(t,D);const e=B(t);return M(t,e.trigger),t[T("isActive")]=!t[T("isActive")],q(t),I(t,S),J(t,e.target,!1),G(t)},P=t=>{I(t,D);const e=B(t);return t.classList.add(...e.trigger),t[T("isActive")]=!0,q(t,{[i]:!0,[l]:!0,[d]:!1,[v]:!0,[m]:!0}),I(t,S),J(t,e.target,!0),G(t)},Q=t=>{const e=Y(t);return 0===e.length?N(t):-1===e.indexOf(t)?(e.forEach(N),N(t)):-1===e.indexOf(t)||t.hasAttribute($)?void 0:N(t)},V=t=>((t[Symbol.iterator]?[...t]:[t]).forEach(t=>{t[T("unbind")]&&t[T("unbind")]()}),t),W=()=>{[...document.querySelectorAll(`[${s}]:not([${E}]):not([${w}]):not([${p}]):not([${k}]):not([${y}]):not([${L}])`)].forEach(t=>{console.warn(`This trigger has the attribute '${s}', but no specified target\n`,t)}),z(h).filter(t=>!t[T("isDefaultInitialized")]).forEach(t=>t.hasAttribute(g)||t.hasAttribute($)?Y(t).length>0?console.warn(`Toggle group '${t.getAttribute(g)||t.getAttribute($)}' must not have more than one trigger with '${h}'`):(P(t),void(t[T("isDefaultInitialized")]=!0)):P(t));const t=z().filter(t=>!t[T("isInitialized")]);return t.forEach(t=>{const e=e=>{e.preventDefault(),(t.hasAttribute(g)||t.hasAttribute($)?Q:N)(t)},r=t.getAttribute(u)||"click";t.addEventListener(r,e,!1),t[T("unbind")]=()=>{t.removeEventListener(r,e,!1),t[T("isInitialized")]=!1},t[T("isInitialized")]=!0}),z(c).length>0&&!document[T("isEscapeKeyInitialized")]&&(document.addEventListener("keydown",t=>{"Escape"!==t.key&&"Esc"!==t.key||z(c).forEach(t=>{if(t[T("isActive")])return t.hasAttribute($)?console.warn(`You can't use '${c}' on a radio grouped trigger`):(t.hasAttribute(g)?Q:N)(t)})},!1),document[T("isEscapeKeyInitialized")]=!0),z(r).length>0&&!document[T("isArrowKeysInitialized")]&&(document.addEventListener("keydown",t=>{const e=document.activeElement;if(-1===["ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Home","End"].indexOf(t.key)||!e.hasAttribute(n)&&!e.hasAttribute(a)&&!e.hasAttribute(s)||!e.hasAttribute(r))return;if(!e.hasAttribute(g)&&!e.hasAttribute($))return console.warn(`You can't use '${r}' on a trigger without '${g}' or '${$}'`);t.preventDefault();const i=e.hasAttribute(g)?z(`${g}='${e.getAttribute(g)}'`):z(`${$}='${e.getAttribute($)}'`);let o=e;switch(t.key){case"ArrowUp":case"ArrowLeft":o=i.indexOf(e)>0?i[i.indexOf(e)-1]:i[i.length-1];break;case"ArrowDown":case"ArrowRight":o=i.indexOf(e)<i.length-1?i[i.indexOf(e)+1]:i[0];break;case"Home":o=i[0];break;case"End":o=i[i.length-1]}return o.focus(),o.dispatchEvent(new Event(o.getAttribute(u)||"click"))},!1),document[T("isArrowKeysInitialized")]=!0),t},X=()=>{W(),document.removeEventListener("DOMContentLoaded",X)};document.addEventListener("DOMContentLoaded",X),window.easyToggleState=Object.assign(W,{isActive:t=>!!t[T("isActive")],unbind:V,unbindAll:()=>V(z().filter(t=>t[T("isInitialized")]))})}();
